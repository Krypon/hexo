{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"source/LICENSE","path":"LICENSE","modified":0,"renderable":0},{"_id":"source/trunk.sh","path":"trunk.sh","modified":0,"renderable":0},{"_id":"source/shell/git-clearCommit.sh","path":"shell/git-clearCommit.sh","modified":0,"renderable":0}],"Cache":[{"_id":"themes/next/.all-contributorsrc","hash":"e32dc4075e304af04b98d0726d489081bea722c0","modified":1543202514000},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1522231262000},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1543202514000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1522231262000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1522231262000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1522231262000},{"_id":"themes/next/.travis.yml","hash":"3d1dc928c4a97933e64379cfde749dedf62f252c","modified":1543202514000},{"_id":"themes/next/LICENSE.md","hash":"fc7227c508af3351120181cbf2f9b99dc41f063e","modified":1522231262000},{"_id":"themes/next/README.md","hash":"ee7119baf976616a84d3c9c10fcab567995dc98e","modified":1543202514000},{"_id":"themes/next/bower.json","hash":"087eb7b81c0aa77a2b07c2ecf411ceb5ee00386d","modified":1543202514000},{"_id":"themes/next/_config.yml","hash":"e4ce46c4635327f2f0cc0e683b73c76de46094a0","modified":1543218534000},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1543202514000},{"_id":"themes/next/gulpfile.coffee","hash":"48d2f9fa88a4210308fc41cc7d3f6d53989f71b7","modified":1522231262000},{"_id":"themes/next/package.json","hash":"cf079447c126a9ad760f1457441f31803ef0470b","modified":1543202514000},{"_id":"source/categories/index.md","hash":"42aeb2458f95290be81705d1de6f73629361071f","modified":1543208505457},{"_id":"source/tags/index.md","hash":"30bbdd44e26173aae772fb62fbec1af6f8b177c3","modified":1543208531639},{"_id":"source/about/index.md","hash":"b73899d0ce503a70477ec74652397b7edf37dbf2","modified":1543208542557},{"_id":"source/_posts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1543211101560},{"_id":"source/_posts/[图像识别]Tesseract部署与使用.md","hash":"9945ef0e6841371453fe787fc8f7ef03e878f50a","modified":1543204137470},{"_id":"source/_posts/page.md","hash":"508719f8fc470aa575a9ecc7d9f7c36544efbc00","modified":1543207148945},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"b63696d41f022525e40d7e7870c3785b6bc7536b","modified":1522231262000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"00c25366764e6b9ccb40b877c60dc13b2916bbf7","modified":1522231262000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"a5335a99377069ae76fd993d488bc3eaf48f3a05","modified":1543202514000},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"7abbb4c8a29b2c14e576a00f53dbc0b4f5669c13","modified":1522231262000},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1522231262000},{"_id":"themes/next/.github/stale.yml","hash":"fd0856f6745db8bd0228079ccb92a662830cc4fb","modified":1522231262000},{"_id":"themes/next/docs/DATA-FILES.md","hash":"8e1962dd3e1b700169b3ae5bba43992f100651ce","modified":1522231262000},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"141e989844d0b5ae2e09fb162a280715afb39b0d","modified":1522231262000},{"_id":"themes/next/docs/AUTHORS.md","hash":"7b24be2891167bdedb9284a682c2344ec63e50b5","modified":1522231262000},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1522231262000},{"_id":"themes/next/docs/INSTALLATION.md","hash":"2bbdd6c1751b2b42ce9b9335da420c6026a483e9","modified":1522231262000},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"120750c03ec30ccaa470b113bbe39f3d423c67f0","modified":1543202514000},{"_id":"themes/next/docs/LICENSE","hash":"fe607fe22fc9308f6434b892a7f2d2c5514b8f0d","modified":1522231262000},{"_id":"themes/next/docs/MATH.md","hash":"e6023505dcccaef0b856102543585a13fc6af0b1","modified":1543202514000},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"ad57c168d12ba01cf144a1ea0627b2ffd1847d3e","modified":1522231262000},{"_id":"themes/next/languages/de.yml","hash":"fb478c5040a4e58a4c1ad5fb52a91e5983d65a3a","modified":1543202514000},{"_id":"themes/next/languages/default.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1543202782000},{"_id":"themes/next/languages/en.yml","hash":"c540c3a0d7db2d4239293c8783881962640b6c34","modified":1543202782000},{"_id":"themes/next/languages/fr.yml","hash":"0162a85ae4175e66882a9ead1249fedb89200467","modified":1543202514000},{"_id":"themes/next/languages/id.yml","hash":"e7fb582e117a0785036dcdbb853a6551263d6aa6","modified":1543202514000},{"_id":"themes/next/languages/it.yml","hash":"62ef41d0a9a3816939cb4d93a524e6930ab9c517","modified":1543202514000},{"_id":"themes/next/languages/ja.yml","hash":"e331b15b1fda0f2285d25853f834682ab8dc3c39","modified":1543202514000},{"_id":"themes/next/languages/ko.yml","hash":"fae155018ae0efdf68669b2c7dd3f959c2e45cc9","modified":1543202514000},{"_id":"themes/next/languages/nl.yml","hash":"bb9ce8adfa5ee94bc6b5fac6ad24ba4605d180d3","modified":1543202514000},{"_id":"themes/next/languages/pt-BR.yml","hash":"bfc80c8a363fa2e8dde38ea2bc85cd19e15ab653","modified":1543202514000},{"_id":"themes/next/languages/pt.yml","hash":"3cb51937d13ff12fcce747f972ccb664840a9ef3","modified":1543202514000},{"_id":"themes/next/languages/ru.yml","hash":"db0644e738d2306ac38567aa183ca3e859a3980f","modified":1543202514000},{"_id":"themes/next/languages/tr.yml","hash":"c5f0c20743b1dd52ccb256050b1397d023e6bcd9","modified":1543202514000},{"_id":"themes/next/languages/vi.yml","hash":"8da921dd8335dd676efce31bf75fdd4af7ce6448","modified":1543202514000},{"_id":"themes/next/languages/zh-HK.yml","hash":"7903b96912c605e630fb695534012501b2fad805","modified":1543202514000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"fbbf3a0b664ae8e927c700b0a813692b94345156","modified":1543202885000},{"_id":"themes/next/languages/zh-TW.yml","hash":"6e6d2cd8f4244cb1b349b94904cb4770935acefd","modified":1543202514000},{"_id":"themes/next/scripts/merge-configs.js","hash":"33afe97284d34542015d358a720823feeebef120","modified":1543202514000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1522231262000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1522231263000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1522231263000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1522231263000},{"_id":"themes/next/layout/_layout.swig","hash":"4b7a12e8acbfd782301eb30dbd4c85056a0a9ff7","modified":1543202514000},{"_id":"themes/next/layout/archive.swig","hash":"2b6450c6b6d2bcbcd123ad9f59922a5e323d77a5","modified":1543202514000},{"_id":"themes/next/layout/category.swig","hash":"5d955284a42f802a48560b4452c80906a5d1da02","modified":1543202514000},{"_id":"themes/next/layout/index.swig","hash":"c2a3896c64e96790edc10426ef586b6186a87f46","modified":1543202514000},{"_id":"themes/next/layout/page.swig","hash":"862b361852fb6d7a95bfb6077922410a33cd3126","modified":1543202514000},{"_id":"themes/next/layout/post.swig","hash":"318249db246a57e9422875a2457c6acfce974ba5","modified":1543202514000},{"_id":"themes/next/layout/schedule.swig","hash":"3268dd3d90d8b0e142cfa1a2ebb23355baeda148","modified":1543202514000},{"_id":"themes/next/layout/tag.swig","hash":"ba402ce8fd55e80b240e019e8d8c48949b194373","modified":1543202514000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231263000},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"d6d20f60f77a76c77f8e65d0c9adbd79d0274557","modified":1522231262000},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"6c5d69e94961c793da156217ecf1179e868d7ba1","modified":1522231262000},{"_id":"themes/next/docs/ru/README.md","hash":"c54e256ed11a84ee38f755d6f35a3e6e29a91dbc","modified":1543202514000},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"b1dd18d9b890b21718883ea1832e7e02a773104a","modified":1522231262000},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"6855402e2ef59aae307e8bd2a990647d3a605eb8","modified":1522231262000},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"a45a791b49954331390d548ac34169d573ea5922","modified":1522231262000},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"bd2c955d9b7b1b45bd74a4536717d547e03fcde3","modified":1543202514000},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"f3eec572a7d83542e2710a7404082014aaa1a5e7","modified":1522231262000},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"b19a6e0ae96eb7c756fb5b1ba03934c7f9cbb3c3","modified":1522231262000},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"24cf2618d164440b047bb9396263de83bee5b993","modified":1543202514000},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"8ac2f5d2a023211d8d8ea626cbf6b8dea67ac201","modified":1543202514000},{"_id":"themes/next/docs/zh-CN/README.md","hash":"aa6808f4f587c1a97205fa9427ba96a366bcb288","modified":1543202514000},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"5da70d7fa0c988a66a469b9795d33d471a4a4433","modified":1543202514000},{"_id":"themes/next/scripts/helpers/engine.js","hash":"60eb1554456d9d0e5afc4a2d16f1580a0aa02da8","modified":1543202514000},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"15582e823d228c0b2288543c1eb460c40afad29b","modified":1543202514000},{"_id":"themes/next/scripts/tags/button.js","hash":"4b12c376bea894d23cca0f9fcb3d6518b6db279d","modified":1543202514000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f13430d9d1c9773b390787c2f046bb1f12a79878","modified":1543202514000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"7ded3e7a78380b32de3e12f156e0978ef5c2890a","modified":1543202514000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"e282bf5a7c70b3d354001e8f66d3bef1a4fbb79e","modified":1543202514000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"981e01aaf45a1f0f23ce0796d03134f9e437aaca","modified":1543202514000},{"_id":"themes/next/scripts/tags/include-raw.js","hash":"5db59d56f4f4082382bf1c16722e6c383892b0c5","modified":1543202514000},{"_id":"themes/next/scripts/tags/label.js","hash":"f0ecd3b5773b19a6bd93a819dfe0c49ee418e4de","modified":1543202514000},{"_id":"themes/next/scripts/tags/note.js","hash":"adb945ba93ac487d46b969ca4e59d3681b8f8d1c","modified":1543202514000},{"_id":"themes/next/scripts/tags/tabs.js","hash":"e37761253d68a29593fe9ed2fe403f49b6e971de","modified":1543202514000},{"_id":"themes/next/layout/_custom/head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1522231262000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1522231262000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1522231262000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"82f9e238bac68dfe592915631d1ff0cca7b9da95","modified":1543202514000},{"_id":"themes/next/layout/_macro/post-related.swig","hash":"08fe30ce8909b920540231e36c97e28cfbce62b6","modified":1522231262000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"64d65d9ad0cc94734ac6ded279e2b5dc870a1cab","modified":1543202514000},{"_id":"themes/next/layout/_macro/post.swig","hash":"225db2f98a9f08b713d24994cf989880618438eb","modified":1543202514000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"e495523780dbdf6228d933c25bb28bcf4c0952f5","modified":1543202514000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"a9e1346b83cf99e06bed59a53fc069279751e52a","modified":1543202514000},{"_id":"themes/next/layout/_partials/breadcrumb.swig","hash":"6994d891e064f10607bce23f6e2997db7994010e","modified":1522231262000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"e6ecc7e727b6cc35d9931bf65514ced329d6c535","modified":1543202514000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"78d540572462d5038761905d64599b6c64caf2eb","modified":1543207968000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1aaf32bed57b976c4c1913fd801be34d4838cc72","modified":1522231262000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"dbe321bcf3cf45917cc11a3e3f50d8572bac2c70","modified":1522231262000},{"_id":"themes/next/layout/_partials/post-copyright.swig","hash":"2f73cc9ffb63534f0b6d8f0e9ee853c1af1b1244","modified":1543202514000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"0a0129e926c27fffc6e7ef87fe370016bc7a4564","modified":1543202514000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"6fc63d5da49cb6157b8792f39c7305b55a0d1593","modified":1543202514000},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"ac3ad2c0eccdf16edaa48816d111aaf51200a54b","modified":1522231262000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"f380a10c792411eff82204305b097a288ed0b423","modified":1543202514000},{"_id":"themes/next/layout/_third-party/bookmark.swig","hash":"60001c8e08b21bf3a7afaf029839e1455340e95d","modified":1522231262000},{"_id":"themes/next/layout/_third-party/copy-code.swig","hash":"a8ab2035654dd06d94faf11a35750529e922d719","modified":1543202514000},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"f532ce257fca6108e84b8f35329c53f272c2ce84","modified":1543202514000},{"_id":"themes/next/layout/_third-party/github-banner.swig","hash":"c0f6f02d7d7eb20eb216003c6cfb4ea52060f791","modified":1543202514000},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"927f19160ae14e7030df306fc7114ba777476282","modified":1522231262000},{"_id":"themes/next/layout/_third-party/pangu.swig","hash":"6b75c5fd76ae7cf0a7b04024510bd5221607eab3","modified":1522231262000},{"_id":"themes/next/layout/_third-party/pdf.swig","hash":"def2736c8c10170712ff36dea220243b0c1858af","modified":1543202514000},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1522231262000},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1522231262000},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"b0ca46e0d1ff4c08cb0a3a8c1994f20d0260cef9","modified":1543202514000},{"_id":"themes/next/source/css/main.styl","hash":"c26ca6e7b5bd910b9046d6722c8e00be672890e0","modified":1522231263000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1522231263000},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1522231263000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1522231263000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1522231263000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1522231263000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1522231263000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1522231263000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1522231263000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1522231263000},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1522231263000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1522231263000},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1522231263000},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1522231263000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522231263000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1522231263000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1522231263000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1522231263000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1522231263000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231262000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231262000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231263000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231263000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231263000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231263000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1522231263000},{"_id":"themes/next/scripts/filters/after_post_render/exturl.js","hash":"9c9f61b7bfb3349b03b1e61355f20232044b5fd8","modified":1543202514000},{"_id":"themes/next/layout/_macro/menu/menu-badge.swig","hash":"65c5e585982dae7ae1542cada71858b4ea1f73d6","modified":1543202514000},{"_id":"themes/next/layout/_macro/menu/menu-item.swig","hash":"495fb08875b2e1e04f9c4f3e9e593cdf5c32cc31","modified":1543202514000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1522231262000},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"a7e376b087ae77f2e2a61ba6af81cde5af693174","modified":1543202514000},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"00bf33b3c557b8f7e9faf49b226ea6ff7df5cda0","modified":1543202514000},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"fd780171713aada5eb4f4ffed8e714617c8ae6be","modified":1543202514000},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"2082f5077551123e695e8afec471c9c44b436acb","modified":1543202514000},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"3db735d0cd2d449edf2674310ac1e7c0043cb357","modified":1543202514000},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"88b4b6051592d26bff59788acb76346ce4e398c2","modified":1543202514000},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a33b29ccbdc2248aedff23b04e0627f435824406","modified":1543202514000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1522231262000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1522231262000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1522231262000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1522231262000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1522231262000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1522231262000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"cc865af4a3cb6d25a0be171b7fc919ade306bb50","modified":1543202514000},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1543202514000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"ea03fe9c98ddcfcc0ecfdbe5a2b622f9cde3b3a1","modified":1543202514000},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"07307f1f0e0e9858f2c7143cbdfcb2a9a92149ab","modified":1543202514000},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"fae69a0e1a1d42f7bb44e594a29857d94594698b","modified":1543202514000},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"beb53371c035b62e1a2c7bb76c63afbb595fe6e5","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"438c6f5e6665d72f4ea7ee206011d669246f6102","modified":1543202514000},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5dbeb640707a9c91357e373b9063a48c8e78f439","modified":1543202514000},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"c28f3f4aa31d7f996d26a97df6cd7ffa9bfd2cec","modified":1543202514000},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1522231262000},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1522231262000},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1522231262000},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"03ef008bc95e8e83232e5464a6c63d6157d33a5e","modified":1543202514000},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"fe8177e4698df764e470354b6acde8292a3515e0","modified":1522231262000},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"03e83f1311faafb7dddc2899042ed1cacd5c995e","modified":1543202514000},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"2c74a96dd314e804d801f8773ac1b2e0a970fce3","modified":1543202514000},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"34421679cae6581697cd3ab7c3729eb220e3e3f5","modified":1543202514000},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"97dbc2035bcb5aa7eafb80a4202dc827cce34983","modified":1522231262000},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"a6fc00ec7f5642aabd66aa1cf51c6acc5b10e012","modified":1522231262000},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"9b9ff4cc6d5474ab03f09835a2be80e0dba9fe89","modified":1543202514000},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1522231262000},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"b15e10abe85b4270860a56c970b559baa258b2a8","modified":1522231262000},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1522231262000},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1522231262000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1522231263000},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1522231263000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"2640a54fa63bdd4c547eab7ce2fc1192cf0ccec8","modified":1522231263000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"086f5979b3de091c3378512e6c5c2f8fcb4f6298","modified":1543202514000},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"e1f6f59ad6e562dfe640ee4ed5d1ac9b6aba4114","modified":1543202514000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1522231263000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c167eeb6b736f7b021fba98c38c2c21032ee1255","modified":1543202514000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"f9b83d0385529e52ce7ba95ed5ed6b3d4e2419bb","modified":1543202514000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"1f7f10c579e7703d0f6acb8b73f3d78a07d0c623","modified":1543202514000},{"_id":"themes/next/source/js/src/affix.js","hash":"a2aab233d99297435a5274bf512c3c753fe08e80","modified":1543202514000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"1c41508b83cb0c4512e64b4d63afa1be954ce8ef","modified":1543202514000},{"_id":"themes/next/source/js/src/exturl.js","hash":"54825acc8de4793feac415be227b965428f4e97d","modified":1543202514000},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1522231263000},{"_id":"themes/next/source/js/src/motion.js","hash":"b45d2c0d48f2c8e6a0621b8063845f76b89476cc","modified":1543202514000},{"_id":"themes/next/source/js/src/post-details.js","hash":"0dde5e6d4547587662a3256317a9d5d1db507692","modified":1543202514000},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"d07b3776708d4ae79ed2037c4c7391d5c9b06b19","modified":1543202514000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fa3c92968bcdbcb8d95a1729f7659d9753cbd077","modified":1543202514000},{"_id":"themes/next/source/js/src/utils.js","hash":"28a79d317b7f4012917a54cac770551596bf6241","modified":1543202514000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1522231263000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1522231263000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1522231263000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1522231263000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1522231263000},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1522231262000},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"6958a97fde63e03983ec2394a4f8e408860fb42b","modified":1543202514000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1522231263000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"aebbd86500d819c4532ab290c62b6f432bc2f878","modified":1543202514000},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"efc40a32487e0ac7b94b1ca81bdbdcc4ec8f2924","modified":1543202514000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"ec2a62400642bb69edd9259e74e8f1c8ed53c42b","modified":1543202514000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1522231263000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"02d138ed65060e98f20bc5b1dd59a791222b7156","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1522231262000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"b4a2f1d031fe44452cf55ded8211cf018235073a","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"665b1813a1d6fbc3c5549a76e4f26cd62a804dde","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"0bef9f0dc134215bc4d0984ba3a16a1a0b6f87ec","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"fe2dc74726a515549956d233becda188da64f948","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"2212511ae14258d93bec57993c0385e5ffbb382b","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5e12572b18846250e016a872a738026478ceef37","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"936132428a0d35b3947ccedd4c379940abcf223a","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"d5e8ea6336bc2e237d501ed0d5bbcbbfe296c832","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"876b5d99061025cf485a3cac440624ded5734319","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"74c7dccf0a3ee9fc2ca25ad8e998243191813a0e","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"f26860978fc4e011758945db5d0f79105ac84fae","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"ffa870c3fa37a48b01dc6f967e66f5df508d02bf","modified":1543202514000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"5779cc8086b1cfde9bc4f1afdd85223bdc45f0a0","modified":1522231263000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"72037e8c4202a73b0c6ff7d81b57cd349e836837","modified":1543202514000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1522231263000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1522231263000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1522231263000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/header/github-banner.styl","hash":"ee37e6c465b9b2a7e39175fccfcbed14f2db039b","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"05e68adae13f4d99a6ac6493daab39c92e39a6bd","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"7cc3f36222494c9a1325c5347d7eb9ae53755a32","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"7dd9a0378ccff3e4a2003f486b1a34e74c20dac6","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"a1eeceea4b88fba184408cb2507bbef1f5e7b0e0","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f2911a048e5c20ca2a059bd1087d98ac1c51681c","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"fb451dc4cc0355b57849c27d3eb110c73562f794","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"39dee82d481dd9d44e33658960ec63e47cd0a715","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"3b5a37ba5e70f92c1ee707c8053524e38adbb710","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1522231262000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"a6dc3c7eb81ef5117c28fa2245fff1adc02d0292","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"2356226157e8068b0e9bbe2f7d0f74e1ab49199b","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ca89b167d368eac50a4f808fa53ba67e69cbef94","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"417f05ff12a2aaca6ceeac8b7e7eb26e9440c4c3","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post-reading_progress.styl","hash":"f4e9f870baa56eae423a123062f00e24cc780be1","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"549a8a0b5301d32acd86a97f17340cdfcd46fb63","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"8e058c99dd7d41f0bd34c7c28b6ac9fbb17dcb5e","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"578bb2d5f24cad39205bbafb4c39c7e9962b9fa9","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"3039df53b94b0847b0c451d2d227270b479cc184","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"35c0350096921dd8e2222ec41b6c17a4ea6b44f2","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"b34bb2ea4d16e47e6fdc06cd4feb32d93ccbd779","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"e18b90c97aaff027e795f5a0cb10476a71bf1c3a","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"4427ed3250483ed5b7baad74fa93474bd1eda729","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"43bc58daa8d35d5d515dc787ceb21dd77633fe49","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"6ec8ea7b11a146777b6b8da0f71f0cc1dbd129df","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"5e340ee2407a4e39cd708794cfcc718a5f398d7b","modified":1543202514000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"10e9bb3392826a5a8f4cabfc14c6d81645f33fe6","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"76937db9702053d772f6758d9cea4088c2a6e2a3","modified":1522231263000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1c18c91ab3c60169ebe654c80c968fd8458786a3","modified":1543202514000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1522231263000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1522231263000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1522231263000},{"_id":"source/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1543227440546},{"_id":"source/.gitignore","hash":"99a33391ff1c83f010836f5284c5e5e4b4ee6ee5","modified":1522306562000},{"_id":"source/LICENSE","hash":"7df059597099bb7dcf25d2a9aedfaf4465f72d8d","modified":1522306621000},{"_id":"source/trunk.sh","hash":"caf7d8fd7a431397b42205939dec6d70f26b8a4c","modified":1523293677000},{"_id":"source/.git/COMMIT_EDITMSG","hash":"6070278c2e3b31bc1e40c485f66da5336bd2cbb0","modified":1543211788212},{"_id":"source/.git/FETCH_HEAD","hash":"d13675d0a43e5370d41eb13a2b6e01004b2af573","modified":1543218646141},{"_id":"source/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1522237237000},{"_id":"source/.git/ORIG_HEAD","hash":"d92e7c4b81d7648b85f8bf88a42ddad4b6b00ca8","modified":1531139616000},{"_id":"source/.git/config","hash":"a9c6e5ae8e536ee0b58e67e79578a22057fab1a0","modified":1536132562158},{"_id":"source/.git/index","hash":"8efb51fdec974fdfa134adcb15e42f418edc8454","modified":1543211788209},{"_id":"source/.git/packed-refs","hash":"29a9bec4e7ba5fd75d18008948303be0cf02a98b","modified":1522237237000},{"_id":"source/.git/sourcetreeconfig","hash":"54f4a42b32ebf64bf560004fc97cb2a481118742","modified":1543218646368},{"_id":"source/_posts/[Cocoapods]与Travis-CI.md","hash":"a0668f5d87e28dfd8c835d147bd13e29f9252caf","modified":1531218858000},{"_id":"source/_posts/[Cocoapods]与jazzy.md","hash":"5e4beea85ac03d3acaf7ddb29f19c329538de3b6","modified":1531218803000},{"_id":"source/_posts/[docker]hexo配置与自动化更新.md","hash":"b5c8c6bd4470d10f25bcb1f1007fb997be04142f","modified":1531218905000},{"_id":"source/_posts/[iOS]EmptyPage(空白页组件)介绍与使用.md","hash":"adb829f615faf79cc6e221f988a91ec2c281fbf7","modified":1542633744546},{"_id":"source/_posts/[iOS]PingFangSC(苹方-简)字体使用.md","hash":"814bfb474acc0a73c3ef71597dfd5198a5d8d8e6","modified":1531218696000},{"_id":"source/_posts/[iOS]Runtime-API的速查手册.md","hash":"259341c5cd324c99e132c288c1ab5eada0c35697","modified":1531218670000},{"_id":"source/_posts/[iOS]performSelector.md","hash":"4de024b500e4bf35f74728c641407749d9bc3d44","modified":1531219000000},{"_id":"source/_posts/[iOS]本地通知.md","hash":"30e3bfadeec8e23446a7e1282f7cc3812953e322","modified":1539674663260},{"_id":"source/_posts/[iOS]获取函数运行时间.md","hash":"7da1baf6b012f4cecd775a3edce05c6028deb87b","modified":1531218735000},{"_id":"source/_posts/[javascript]将callback函数封装为promise对象.md","hash":"4262e75abb951767ff4816d1ad0f634b352889cf","modified":1531218741000},{"_id":"source/_posts/[server]Docker.md","hash":"1e78f4cd40ac7790ed961f4c3179f99af2b33464","modified":1536132440867},{"_id":"source/_posts/[server]Nginx-配置.md","hash":"c3fb23885eeaf513a6ede43ec7bbb271d7b42f8a","modified":1533707786000},{"_id":"source/_posts/[server]Nginx.md","hash":"89b9d81b652beacb52ccc74933ba11f490567adb","modified":1531218975000},{"_id":"source/_posts/使用Verdaccio搭建npm私有仓库.md","hash":"0cf51aae6e2dff2dd2d3090b119dcbd3ebbe844a","modified":1537873733187},{"_id":"source/shell/git-clearCommit.sh","hash":"a351d779491cc82e1c2e5b073503ae758c550ccd","modified":1530083443000},{"_id":"source/temp/#Ubuntu - Git部署.md","hash":"c8055bdd8bcdca43001cf011aff8bc169cb2a3c3","modified":1490690174000},{"_id":"source/temp/@available 和 #available.md","hash":"367dc93cf7963a04065e5071861b7807ff4cc0b1","modified":1524240933000},{"_id":"source/temp/Aliyun的一些坑.md","hash":"0a0df44c7aa7c74eb04f5dd5caa877cdc692d6dd","modified":1525674027000},{"_id":"source/temp/Cocoapod 中的 React-Native.md","hash":"a36a3efe4616b833ab49953298a90f9755e8af57","modified":1524106971000},{"_id":"source/temp/Cocoapod 私有库.md","hash":"dadae7f2aec9c83162bb9ee6aebfe1d4e0c4bcba","modified":1513682384000},{"_id":"source/temp/.DS_Store","hash":"801464671b1cc4ed78030370522d51e82355418a","modified":1542767781643},{"_id":"source/temp/Cocoapod库配置.md","hash":"328a43d431000359679fb51fcd1f76c243fff0ba","modified":1530354944000},{"_id":"source/temp/Django.md","hash":"4fc90f8920522217771937b72f7fdaa64979473a","modified":1510821816000},{"_id":"source/temp/Git-tips.md","hash":"000415518557ecdbe8172ba80b4360b5c4b23dd3","modified":1530588716000},{"_id":"source/temp/JavaScriptCore.md","hash":"cd4b6f141e8955304e1f9e219273a831e8df52d6","modified":1530677915000},{"_id":"source/temp/Mac - Tomcat.md","hash":"e68c2cc3e0bcdb4fc6b8be696881d68d080f70d4","modified":1489978224000},{"_id":"source/temp/Nginx-rewrite.md","hash":"fb0c94a3b98f7cff5cca6a924eceaa9f347013cd","modified":1530327821000},{"_id":"source/temp/Node.md","hash":"8367751b0dffcdc97b302b193559fba7755c6447","modified":1521873753000},{"_id":"source/temp/Python3.md","hash":"5720f8a8f2a55b16e17a28e1b4854019cf8cf907","modified":1510739097000},{"_id":"source/temp/Redis.md","hash":"ff0d1ba9fa2831b14c6d78f59764a9a3dc01531f","modified":1525696507000},{"_id":"source/temp/SPRoutable.md","hash":"a1bf1c3c0778d6edafc13d6e8d5359636336d48b","modified":1524117900000},{"_id":"source/temp/Swift-编译判断.md","hash":"819fd5e3b085fd1070801806031170cbebce4391","modified":1530327022000},{"_id":"source/temp/URL.md","hash":"7acd5804759e03faa259f5d47deaedfc7c7fbab3","modified":1526179669000},{"_id":"source/temp/Ubuntu - Shadowsocks.md","hash":"b4e00ae53fd2ea5b8a4c384a132076fc17297a87","modified":1493114990000},{"_id":"source/temp/Ubuntu - vsftpd.md","hash":"4dad079606b0f339d4b0010b8dc4a61f6cd735ef","modified":1489976511000},{"_id":"source/temp/Ubuntu - 常用命令.md","hash":"665c025f35c365118a70a3b785fa5e2ae65862fd","modified":1510309656000},{"_id":"source/temp/Ubuntu16.04 - Docker安装.md","hash":"f6248512afb15dc8047b9262113def9f929fa7a0","modified":1536127140500},{"_id":"source/temp/[server]Redis.md","hash":"2d9abc894bc7da75054b5af0130cbaeb53b27a0e","modified":1534127255000},{"_id":"source/temp/cocoapod - bug.md","hash":"813af94a40c5ce146dfe41f53e46bbcf2d73bc7d","modified":1502101946000},{"_id":"source/temp/cocoapods -- 制作.md","hash":"0e62f96990973a6f411a93b6fff672ad6eedbe3e","modified":1494060419000},{"_id":"source/temp/docker-gogs.md","hash":"33ea08c9fd46cb95c310cabf7a170527af741a43","modified":1530854797000},{"_id":"source/temp/docker命令汇总.md","hash":"12c277caa462f41cae05b8053d2282a6c3121f5d","modified":1512357003000},{"_id":"source/temp/hydra.md","hash":"97b8baece9b0caf711c6fa96d837695f4b614e08","modified":1541341630877},{"_id":"source/temp/iOS-震动反馈[Taptic Engine].md","hash":"4a0eaebe7798fc26cecffd4c54688fdea6c16b25","modified":1531449436000},{"_id":"source/temp/iOS:Android 中的 webView 交互..md","hash":"33505eb0c06de4ea16180b9a8e82e28f3bfe13bd","modified":1522653574000},{"_id":"source/temp/iOS模块化[1]--Cocoapod私有库.md","hash":"45131c8b69511564818c832af6f28c1fedb91f1c","modified":1530356198000},{"_id":"source/temp/iOS模块化[2]--路由机制.md","hash":"1b2450b35649c3e4dead49d70ccecfb5a15d0a9a","modified":1530356266000},{"_id":"source/temp/react-native.md","hash":"e56b14b47cc96641db6b324ee06be3ce2e0887ae","modified":1522651893000},{"_id":"source/temp/runtime.md","hash":"ccebce4fa7354a150c554ee6f820b000d90d90f9","modified":1531219284000},{"_id":"source/temp/swift - ARC下获取引用计数.md","hash":"dd18e234afdc116c9a3f84efbde58a1b168647ee","modified":1524106950000},{"_id":"source/temp/使用Docker Compose进行NodeJS开发.md","hash":"94e9903a6a21d20044bcad191624f54724e2227e","modified":1537425927296},{"_id":"source/temp/安装  Django 时报错: 执行 export LC_ALL=C 即可 x pip3 install Django​.md","hash":"6c37e04b6b9829503a80cac5d09bcf352d3b03c5","modified":1510740011000},{"_id":"source/temp/持续化部署.md","hash":"6869d1ed9150988645cccba5dab98050c9d1ffc9","modified":1513136901000},{"_id":"source/temp/未命名.md","hash":"3b89f06f913f8a200e1d7980865488052111af0b","modified":1522315219000},{"_id":"source/temp/踩坑 Xcode10.md","hash":"8b56681fdb052eefe40ebe39e0086556410b54b3","modified":1542359323812},{"_id":"source/temp/辉光管相关资料.md","hash":"ac870e4236c8cca39630522d99d61d86fa59259f","modified":1526141266000},{"_id":"source/.git/logs/HEAD","hash":"e66f9c0ec62f00290140a8a1602813d3be40d165","modified":1543211788214},{"_id":"source/temp/Python/Python3 - time.md","hash":"da9b8690b70b1c507cf5939c95fef521b86ba840","modified":1514881125000},{"_id":"source/temp/归档/Redis.md","hash":"c83a527f9ceef95bd019730ba139a2503faf8b31","modified":1521705712000},{"_id":"source/temp/归档/ubuntu.md","hash":"85bcbfd525847ee834f93a0b61b8d0c7ad95b5f1","modified":1522293735000},{"_id":"source/temp/归档/搭建 Docker 环境[CentOS].md","hash":"63316b65ccda768f6098dff722724018d2b9e49b","modified":1521712946000},{"_id":"source/temp/归档/搭建 Docker 环境[unbutun].md","hash":"a0f2e47ccabdea1d93991cb1fa52b90a63b73517","modified":1522292253000},{"_id":"source/temp/归档/搭建Http静态服务器环境.md","hash":"be1ba693ec7389bbcae13a1693a12a2203484ff9","modified":1523285008000},{"_id":"source/temp/归档/未命名.md","hash":"36049fc3d500bdc2309194bbb8b24e73b8cdfe3c","modified":1520913380000},{"_id":"source/temp/归档/未命名2.md","hash":"5eb9c01abbc97cfb03a30a889016772567077e06","modified":1521093003000},{"_id":"source/temp/架构之路/iOS 中的 mmap.md","hash":"f0af5d95b84f06b8f6367876c1661040b782649c","modified":1542885259495},{"_id":"source/temp/架构之路/iOS 架构之路(一) 原生系统架构.md","hash":"4cd868032edca14e9c3043f03fee57bd8562e9db","modified":1542434663589},{"_id":"source/temp/架构之路/iOS 架构之路(三) 组件化演进.md","hash":"dcd0008464b417bf5302bb592fb5c2db2018d7a0","modified":1542434738162},{"_id":"source/temp/架构之路/iOS 架构之路(二) APP架构.md","hash":"ba959d07f2369ac4ece4c088c0c9e8fe785ab27a","modified":1542434702009},{"_id":"source/temp/架构之路/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1542714356021},{"_id":"source/temp/架构之路/iOS 架构之路(四) 容器化未来.md","hash":"03f4e2acc70b368e16e8bd0f4ccf4c4b88690f5d","modified":1542434778307},{"_id":"source/temp/架构之路/iOS 组件化漫谈(一) 路由组件.md","hash":"ca94b898e8f29d72dfe945d7d3e4769512fc2218","modified":1542763714590},{"_id":"source/temp/架构之路/iOS 组件化漫谈(三) 组件与模块.md","hash":"facd63cde2e0fa83134de1aec4723e0908cb0ccc","modified":1542720796761},{"_id":"source/temp/架构之路/iOS 组件化漫谈(二) Cocoapods 私有库.md","hash":"dc86ba2d4a83805d3d8cee3445c92bb3d9547eee","modified":1542723425266},{"_id":"source/temp/架构之路/iOS 组件化漫谈(五) 工具链.md","hash":"346923358ec66f3f008f4f548a9e6eee3f3fd6e9","modified":1542718695424},{"_id":"source/temp/架构之路/iOS 组件化漫谈(四) 模块设计.md","hash":"abbf7acb8e67ddc2a08247f8e8884c285f923af1","modified":1542718633019},{"_id":"source/temp/爬虫实践/爬虫 - 1.md","hash":"22944070d5d41424a1992183769609ab1e564fcf","modified":1542367936366},{"_id":"source/temp/爬虫实践/爬虫实践(2) 自动化.md","hash":"1907694742729290ba6dd4ea1cb896f071f3596c","modified":1542434537234},{"_id":"source/.git/refs/heads/master","hash":"d7163aa00b21fd99ecb399f1fe2cc88fe80a968e","modified":1543211788214},{"_id":"source/.git/objects/00/fdb34bc85f03f93da1340a5d624293e0962799","hash":"cf2c04b5bbfdbeb53e15dedfbcddfae10f8dbda1","modified":1525357558000},{"_id":"source/.git/objects/00/6d7a76663293f76c03549ed89a738e78e2c96f","hash":"52d093087076990e74d93b6c8f0cfd0afc998327","modified":1531138567000},{"_id":"source/.git/objects/01/9404154e9afead9607ec49a049a0944188e9a8","hash":"79598ed16b73f911546091e5813632cc8faf767f","modified":1530354414000},{"_id":"source/.git/objects/01/9adac63af15db50609e28a0b38c974f1d6781a","hash":"3c80760146c7ea0ad69bc6129fc1e7bd2ba7664e","modified":1543211788000},{"_id":"source/.git/objects/01/c19c1dd56c17ac55b3eeea397aab7eea10006b","hash":"54c4bdfd208c7667232cff384e96e286e3425f22","modified":1523198050000},{"_id":"source/.git/objects/06/03366457512adc1001e7b982f61a67c79c22c5","hash":"a6764a4c559af53e334b0c59bc6f88d268b4d360","modified":1525414695000},{"_id":"source/.git/objects/04/ebf468727c4887fe365146d3cdef42e7e4acb8","hash":"371c0f65ca776e9a10689cc887b3a9f472ae8319","modified":1539674685839},{"_id":"source/.git/objects/06/838477bb86995a6c3e7d36c9bd0a63f881e6f7","hash":"6044483e6a59920e36cbdfdbe9fc7dc977b2e280","modified":1530801540000},{"_id":"source/.git/objects/06/1e48488cfad987005a8112dfdba37b84531fe6","hash":"aa8b03c98f4ea8d1c649ba3fc54f27c6150f53e7","modified":1523363540000},{"_id":"source/.git/objects/07/e86bd3b160d0c0384b4f7b62ee2962c8f26753","hash":"06f0cdc79b7fb72f02ac802cf92ac0693dedf853","modified":1537444781826},{"_id":"source/.git/objects/09/63e59991ad3834e4e90514017149b8823f4ac7","hash":"2a1c8f3df5e588dfb3a7e9cf3d78f2d00e5cd034","modified":1531138720000},{"_id":"source/.git/objects/0b/6036c4049be203e3acaea5ca7ae29e24c6f96a","hash":"818d8b1d0a3f3e4e200d9b966ef80e2d79e10fa3","modified":1542451323034},{"_id":"source/.git/objects/0c/04342383a5f646684ca71d2a024bdfff298795","hash":"2099544401e64c62d596714b735976fda3656912","modified":1525405033000},{"_id":"source/.git/objects/0c/4fd69a4521366d127f0488af4ee2c5cd800688","hash":"d3dcdfacbc238b215bc39575ae2fe3d623876f7f","modified":1539674685841},{"_id":"source/.git/objects/0c/e70b6f161a4e63acd415219d9b69fd4b4b35b1","hash":"b31a45ebb7a52963f0800bd26b897de8f053f8dc","modified":1543211788208},{"_id":"source/.git/objects/0d/706dc9581ff936bd509e829bcc1c6f7c6b309d","hash":"69bdbca77a7049b68530dea2536bf4e610bdcc3a","modified":1531138567000},{"_id":"source/.git/objects/10/8496043d18d4d7e9f69f0b49a0d2e3dd46a887","hash":"edd271359404a9f900ea8e57ca23004b411c3ef7","modified":1525347116000},{"_id":"source/.git/objects/11/b33ea2ee7cd3b194700a2067212ce717db624c","hash":"60dc0f483e38a00eca6c8aaf9ebf8dc13e5c4641","modified":1524240752000},{"_id":"source/.git/objects/11/e46cfbced5886d26f8645bf2a6e7138e4fdd77","hash":"4c6db8208629c11f50c313f8c04822f6970d2025","modified":1542448013165},{"_id":"source/.git/objects/12/9e25bb35f5116daee022c555390262c1ab0054","hash":"10582b694f00327aaa2e67843030619e14ac07d6","modified":1542451103359},{"_id":"source/.git/objects/12/f29593040a7edd18c0f9613a55c702dc8c6274","hash":"84a38cd3020f538718b15b51217c460e432aa773","modified":1525347717000},{"_id":"source/.git/objects/14/003d10ee4f72d24cd67766a29c39d97c19bd7b","hash":"a4a2bf675fcd27d64d2e5b323a46d30524d91020","modified":1522389901000},{"_id":"source/.git/objects/15/b5587758eda7c8775638b650ed5fa9b712b111","hash":"7e3e1561a855ea7d208c0515ce60a11001c84b14","modified":1542451682930},{"_id":"source/.git/objects/17/18218cefe9d6a9f8cb47c64c977fd907500a62","hash":"a571b60a75196b2c496ce857f03599446a80eedf","modified":1524241000000},{"_id":"source/.git/objects/17/41b5b0bb0182d40527fbb3a9e2fc8a7b7bb312","hash":"1d73503643fd7f2740a144f7d9677ff410c82b1f","modified":1542448013130},{"_id":"source/.git/objects/17/e2a689d2b73fa76aae0f5316ea9ec1bfce6b0c","hash":"c77ca7f9daf47664068be339b5ab36e054b7c888","modified":1524241000000},{"_id":"source/.git/objects/18/cb4dede856e9e8406282c46d3547cfa3ccd4ac","hash":"036c5f0457e528f917dfd484840bd05efc452a34","modified":1522306823000},{"_id":"source/.git/objects/19/ba012e11e26894d3b732fa1c46f16c8cb363bc","hash":"3789793a5b779157b58954ca8512953769f4f92f","modified":1531138567000},{"_id":"source/.git/objects/1a/267e5f8bef45b5ff18c0fa7b6770634db18fe8","hash":"efc434324d822902f91f5613da27b88e08c36703","modified":1522306486000},{"_id":"source/.git/objects/1a/8a6d1d00d3ef4abdd9cc1028a384ae755eb346","hash":"85734e128a8ba1ede1419bc6dc5eb524d601bd4f","modified":1537873746916},{"_id":"source/.git/objects/1b/f407fdba5a523698a0f25a946ab6228ced4a14","hash":"b96a0b89ea49b65e7dd16ca8b91ae72d64f1f23b","modified":1525424963000},{"_id":"source/.git/objects/1d/5aa6f1e25292fe22d70e89f0fedb29b25066a6","hash":"4c4a7d9f42d59b5ebbd555eb6023863688102b15","modified":1531139072000},{"_id":"source/.git/objects/1f/4e9adf234a45d97aee2f9e69e69c32604df211","hash":"8693c28467ad6c7557000815777e3b8b1898951d","modified":1525253979000},{"_id":"source/.git/objects/1f/c52390ae0270f6314a0738b3797d28f9f4312d","hash":"def3630087b16dea61b10dfc58a104e646c84bfa","modified":1522257621000},{"_id":"source/.git/objects/22/56978f005971cc038b3053d4aecbcaa59aa9ed","hash":"472c9204f3e419217e4f71337406ac262edb9c6e","modified":1537428993032},{"_id":"source/.git/objects/22/754d19a81e037ffe005dfd9deff01f95fae7a8","hash":"d8409d294590f4bcd4a82e675369a8695860302d","modified":1523198050000},{"_id":"source/.git/objects/22/82fa6d63925b6e94a7a9c0abbe33dccc272296","hash":"03086dfe7660138cbe31718d5f644f017996d061","modified":1531138720000},{"_id":"source/.git/objects/26/1eeb9e9f8b2b4b0d119366dda99c6fd7d35c64","hash":"c76f3a90e6fec66273506eefa98780a4e7e33fd7","modified":1522237237000},{"_id":"source/.git/objects/27/55cd8b905fdde9237361d6bc603cf7e1bbc149","hash":"5d7db8d2972389719e1575cf7b600177627b0b1a","modified":1525347802000},{"_id":"source/.git/objects/28/4b9773c1e678275c100c24065ab3b81b801fd7","hash":"224f1d43d5b2a913b9ba6c8a005a32313d063926","modified":1543211788000},{"_id":"source/.git/objects/29/83428b07b935201d0dc101c2fa3961cc9c3090","hash":"c1550b635aab195b8de0334ede0e52f66b1fb8a0","modified":1531138567000},{"_id":"source/.git/objects/2a/72ff0db41164e3a3cd33be29a53f6135ad3c4f","hash":"3e067b85aaffc706a40d3715ea337a6e99b474aa","modified":1522306486000},{"_id":"source/.git/objects/2a/d5bb4fb7f88308d79a5bda0aeb0264fccd5e77","hash":"5b138e6856ca0527109d6d88bd5436b2bb77a759","modified":1543211788000},{"_id":"source/.git/objects/2b/1981ee5b828647ccbb673d81f275cd3ef4e003","hash":"a0b925a9babe3f3bf8408a89e2ab9d08c6ea801b","modified":1525425038000},{"_id":"source/.git/objects/2b/20e43a7f199e1f1861d7419eac5351013096a9","hash":"b755d377cbebb19ddc3abc5654d3df3e725a50f6","modified":1542633754491},{"_id":"source/.git/objects/2d/eef7219fbdbdca418df7ff1b196cac16fc61f1","hash":"08468f6f8ef5e46249918609e1f190b74be5772a","modified":1523197830000},{"_id":"source/.git/objects/2d/f4b3135e12002f6c1ce42fb62e3a1cfa821460","hash":"308434fed1e706d460b3570e02520710e69694ad","modified":1537445103687},{"_id":"source/.git/objects/2e/150a7637652515b38513b99b401556c7cdc73b","hash":"fb51d6b45325a111bfb638bdf69455d8218d9763","modified":1537445103684},{"_id":"source/.git/objects/2f/acb766e9244d7a1d5b33f858ec97f5247fa53d","hash":"dd7a795619497f4dd0b63e4d587a3c5bf4ea8f4d","modified":1525347469000},{"_id":"source/.git/objects/31/9baf1a3078b1a4318bf60afc4111ce3041f7d7","hash":"a74cc5aafa82f14b108a640abe3d74d2423ed604","modified":1522257621000},{"_id":"source/.git/objects/34/dfcfef3b0413b7d5f9a2f2e5d3f7f33d20f9e6","hash":"8cd3ffbd9b1d858d33ea465817287d772beb11fe","modified":1525414695000},{"_id":"source/.git/objects/35/76d0c38796463c246965b897743a0de1bad6ab","hash":"32efa8c148c0bd9baa13ae2bddd17060fcfab796","modified":1543211788209},{"_id":"source/.git/objects/37/1ba0f79af6ebe490673d8cc1fc664ea16f2991","hash":"bd7d37b8788e1e92cb8796614347cf6901fbd676","modified":1530354414000},{"_id":"source/.git/objects/3b/87a3f4d28ab1ecb36989d4156986e695c08cee","hash":"5f86f8d09238a1f77bce6e19a770b603d26f2863","modified":1543211788000},{"_id":"source/.git/objects/3d/4fe72d0f0e6044f3de5b32932c7bd52e193a96","hash":"5f6f48eeb4eefda9e4f4cfa259e49076a764d985","modified":1542448013128},{"_id":"source/.git/objects/3d/6d7657e5e03ad6f2f876fc20225d6db909e58c","hash":"566ad8f9d74a92d98c23cffb2da8c4c8133c00c5","modified":1543211788000},{"_id":"source/.git/objects/3e/1834afd8fcef931cb7b4dad28a090ae39e6997","hash":"ca924ce3b659a241b83ddd6902f6f3fb98db23a2","modified":1525347116000},{"_id":"source/.git/objects/3f/2bec8660b9918e551b33412104eb33d1e4b784","hash":"a476c49c4d053802adf1024f842be2ebe5cdfcf5","modified":1537873746909},{"_id":"source/.git/objects/3f/a3c1313969bcefe0fdf5e65ede048f538edda3","hash":"7a4c7002eadb56c75e11a3ef305dc947d637d41e","modified":1531139616000},{"_id":"source/.git/objects/40/588f79d161d0dec24807a4abe52a36177f5140","hash":"057ab0f6245761e8fbcaa8d3bd5174e342e844ee","modified":1537445249764},{"_id":"source/.git/objects/40/a75ba1ffd4f70b6a660974ae35262a8f675a94","hash":"50c2f8f340e6659b29060e0fab8f7e2be2fbcbba","modified":1525425315000},{"_id":"source/.git/objects/41/1f841774eeb699025ab323e7a911c80a7689ed","hash":"9518fd419a6cbfa875b122a900c59bfd85fc3fa6","modified":1537445192764},{"_id":"source/.git/objects/44/1aa075801ad89358f125d4df4a09122b1f2cb9","hash":"ea3a1036f1ff48c425fc63aed40aa73d3c294921","modified":1530355946000},{"_id":"source/.git/objects/44/4587724a9ff0ed17ac57c483313a572ad7ac01","hash":"d49742200d36621d968d7595697584f2f1e59e6d","modified":1537431732377},{"_id":"source/.git/objects/45/a4705ad6879f0678375d51ee9eeb7599337acf","hash":"524f45f2cfb5b241ab8dc2d815511968bda4c2f6","modified":1543211788000},{"_id":"source/.git/objects/45/cf126b7bab590b8b4a6f7847fc42efd6b1e0c1","hash":"42cd302f56c17b3ce9c699f553b8da9f2180b645","modified":1537449990445},{"_id":"source/.git/objects/45/fad59ca3fe3848752b4f30b8a9d814922ac81a","hash":"4240d7672b300002f9f38fba76c8d125f62ce2d3","modified":1525347116000},{"_id":"source/.git/objects/46/09f67ece0488ead9f41c6ae60b7d7ef3a34548","hash":"edbd06daab12b53dc9563110dcc4edbb3b8e8675","modified":1523197830000},{"_id":"source/.git/objects/46/2fd74f499a97bc82a388ca6a631ff41deddf4e","hash":"6f27d92411e9bcec46e75e7306f6754d59791710","modified":1537449808200},{"_id":"source/.git/objects/46/8999d93ed26d9afe99fa24170d01caa5567dde","hash":"8deab7a6776cc856fca9bc03bb80e8a859e22a15","modified":1543211788190},{"_id":"source/.git/objects/48/92890be1a19c1bd70f8346a85076b054b77082","hash":"93e2e8fb018d275cfc0101d98f9e90ffe6e5d319","modified":1522305927000},{"_id":"source/.git/objects/48/f02a6dc5fb4f90fdf1b5b566c7f0a80718aa79","hash":"f9801249e89e27a5276a73c5ba4fb55cd3cccf56","modified":1542451103322},{"_id":"source/.git/objects/4b/3ef0e89293efe9da88c649cdc018411f2c2cb5","hash":"535c6d543e441ff1157f1d83a3e9bec6b9e7542b","modified":1542448013170},{"_id":"source/.git/objects/4b/a13d96bc21442bcff473833354a6f4cd29073e","hash":"c48dd1ca4d904da8d13f8e089d314a72457e9bcb","modified":1537428993047},{"_id":"source/.git/objects/4d/e6afca9914e4b8a29acb0d6a44e1a00e2fa870","hash":"7bca0aa590f4949383043826565ce6a90c02a093","modified":1537449990458},{"_id":"source/.git/objects/4e/576eff1f602351c9d7ebd37cc37cabf84942fc","hash":"2bf32905e1089a1ae63bcec6eef680ab033132e2","modified":1524240935000},{"_id":"source/.git/objects/54/1d344ff8045271a7743fa86c13f6395ad743a3","hash":"883c7371e31320aa4d8ca282a3a82c611bf802c5","modified":1525347469000},{"_id":"source/.git/objects/55/ef7d1af0976a2ff6f0eb95269e2de3c5d9b2df","hash":"1d139ded20506246907f3083bdad9348c64eee5a","modified":1531138732000},{"_id":"source/.git/objects/56/8c5c089d647300cfda9868b158f03780118910","hash":"7bf31dfc0dfc2df3a4fb4a78660cc181f0614489","modified":1530799852000},{"_id":"source/.git/objects/58/f674472a93e874af8edec169316017b7b37373","hash":"302f358abfa9e73d4c0a9c4d111c7e1ad6ac6ff3","modified":1525253979000},{"_id":"source/.git/objects/59/cd379fbf86382bace1629685431e2d61bfced2","hash":"9326db9be55de67117237d8dff52867ef23a5aee","modified":1522305932000},{"_id":"source/.git/objects/5a/0189953bf7e662de1ec8ca7665af61097412f6","hash":"2342a713f3625116d1a884aaa0fa70e9eed12241","modified":1543211788000},{"_id":"source/.git/objects/5a/58a6245116001d182d335b0d3a140c203b89ee","hash":"9a46d18d87fe0a60d28a5db7ce7807c7e1ab5ec5","modified":1542633754494},{"_id":"source/.git/objects/5b/bafd6874f03737a0fef02b624fbe139189ea12","hash":"fda1adc513b795962fb60a57c9dfe3f0150c0b92","modified":1537444781800},{"_id":"source/.git/objects/5b/d14f0c543676a1d2a2c5e3eab361119df6e577","hash":"eb36bb28e4d3682874bdca8f8a470122ff75b7fa","modified":1542451682925},{"_id":"source/.git/objects/5c/ce90c32be21740d6639cb86f82ebffeae70a8e","hash":"a11932f14866cb8f01715dbc0dbb8e75d5ce57c9","modified":1522389534000},{"_id":"source/.git/objects/5d/28b1ac4a77e90934f808f1d4c7157f6a3b6aa7","hash":"ea7ab94b981255131c8748b76d1115a0af76a190","modified":1524241000000},{"_id":"source/.git/objects/5d/87a4f949a6cd9486afc0baef860d882990ed8a","hash":"550cf8422af807237eef630b8e2828e6e72906fb","modified":1531138188000},{"_id":"source/.git/objects/61/a283b3ba4039b811aeb83cbb676191d5df3ff2","hash":"fb02469c4ed16602aecb561384c5a97ec368ac7f","modified":1533707806000},{"_id":"source/.git/objects/60/d99f60dfb429f90a261c7d5d7c1ce8b72c02e6","hash":"9059b875f4e20e68b788fe7e8af043b2ee36e2c4","modified":1537428993050},{"_id":"source/.git/objects/63/2b5dadf425e4a00182df3181902fef64ace7e4","hash":"cbdaaf5beaf3f8362f2fdd056e892bbffd19a2af","modified":1537428078886},{"_id":"source/.git/objects/63/d9909abde8bfb26715d48feade8063505dd5ab","hash":"77bdf56f8760605ad6059e78073dc7fb9589139e","modified":1543211788207},{"_id":"source/.git/objects/64/5bef1db87dfa721146a2ded859050ff096ba3c","hash":"d9052af0ce43d053a81c1899df90d63cb7742832","modified":1525253979000},{"_id":"source/.git/objects/64/e5cd22821d267f657c3aeaec1c6afc8419eccc","hash":"eb7e6bb128a85e4410997ac5d90f8009df7412dd","modified":1522306823000},{"_id":"source/.git/objects/67/50f8c674901b6b55a35d309ef47d6ceba4e590","hash":"d88131040ec1fe2a04507645f9174fff9228ce80","modified":1536132549215},{"_id":"source/.git/objects/6a/5f0c19db52f6778e6b7d3746d5bf79fbbc934e","hash":"668238fab4fcaa89f82716f7a80470dcb5de57f3","modified":1522306486000},{"_id":"source/.git/objects/6b/52c9ac49662c61314fb971c9b5f06e51cee462","hash":"b78de50a9b81ae2644b3a3486138b736fb3d6366","modified":1542450345242},{"_id":"source/.git/objects/6c/39110e04c1769ae93f2051f00d54fd352c2772","hash":"806b9ccef07c6c8ac062b76c706486770edf8584","modified":1525357542000},{"_id":"source/.git/objects/6d/0cc3cefb59de48bcb3f3bea86cefbd06802680","hash":"776d8c86f7ea91ebd08762c7577cb5a500c981c1","modified":1530357242000},{"_id":"source/.git/objects/6d/c4733c2c8c864755b074db6f6cd214e694df99","hash":"00f44fc3211dad543be0326375524604d213b0a4","modified":1525424963000},{"_id":"source/.git/objects/6e/31232e02ac7ba9063754b2f3a7a306663daee5","hash":"ee95bc92315f63e54f9012b04c888b692f6db3bd","modified":1542468745031},{"_id":"source/.git/objects/70/23c2147eb32270147d16bd736facd7295cf64d","hash":"708a1c661d5a308f0582c8765e0bb763fa7aee24","modified":1522306486000},{"_id":"source/.git/objects/70/9276b3d553ef4bac8580fc57ce9830f3c4e60b","hash":"ab914d795f15b3689239a0208d3b9f8b710fe9ff","modified":1537428078911},{"_id":"source/.git/objects/70/981f2a8841137f6717337f4f08d8331658878f","hash":"dccd8711b9b2af3ca1d6a7b0ce524ab9844d5232","modified":1543211788191},{"_id":"source/.git/objects/70/dc5ac6b0810fa56a2243e1a458c116b47982d7","hash":"a8cf99a0e2dc2b0af89d1240ca6a338352fe3dfc","modified":1537445103670},{"_id":"source/.git/objects/71/a9b3e11a86478ca75d0cb43dd505c9a50d6ada","hash":"4383c452362b686d7741ecd3c77798fbc84a756c","modified":1542451103350},{"_id":"source/.git/objects/73/87366a9d97b84ed4aee9a40198b1bc3a9aa396","hash":"a04fea45a1c8d4222e35ab5b1ab6d4f1a7d5e30a","modified":1522257611000},{"_id":"source/.git/objects/73/dd9433b2a649d4ffba9d226fd0de857c9f8fe9","hash":"be894b03cb079e9f413f8f80caedd48bc5c62994","modified":1543211788000},{"_id":"source/.git/objects/73/f2a9fa3360bbebef85b558bfa08b1a3e904605","hash":"4e38ccd7c76ab2b4007894bdc53c0e5cd92a9df9","modified":1531139072000},{"_id":"source/.git/objects/75/b5090c1fbe8715460083ca21f820e3a31dd90b","hash":"27457d5438150e08662792dbc08a4a817533f515","modified":1536132549176},{"_id":"source/.git/objects/76/4e374a55ac5a5b41049fd429624727ffbd5e83","hash":"9258f3d5bd27e8256547aadef2912c56eb629ef6","modified":1525347469000},{"_id":"source/.git/objects/77/7a254ef7d07a87ee7d799da17d6c415c130096","hash":"77e69aa736d345c52c5bbecb16463dd55d95dbf2","modified":1522306823000},{"_id":"source/.git/objects/77/f8a4c35ac782b5e0e6aefbaca52e2ea1398eb2","hash":"99205eb8bfda7b5e6ed20991fbb60566ac5c07c4","modified":1537449808218},{"_id":"source/.git/objects/77/fc8730f8ba8f97fdb908ad402c94a9e6a908eb","hash":"75c3d518e6ce919ff0d8eada78d37d413e8b7c48","modified":1537445249748},{"_id":"source/.git/objects/78/9b7d1b61e3d5bee0dec8c1a46e427ec0a70711","hash":"c165773a2bd7b4898a4c7d13fb46f54fc7f84acb","modified":1542451920511},{"_id":"source/.git/objects/78/a799fbb9f2436f2a637f5dc5a2e9d771c1f0b0","hash":"6df911b1b209db6dcf53dd5f3ae693c8cc2d8553","modified":1524240752000},{"_id":"source/.git/objects/79/82d36569a496d1ff1f1f293bdf11ffa253f8df","hash":"61684ce5afb13b24f6e002019de3fb6b90685657","modified":1525425038000},{"_id":"source/.git/objects/7a/cc87911c77ff707596695d4f3dea29d1471982","hash":"2ca1dd2662a641c89c5712aa436891a43d6fe013","modified":1525414695000},{"_id":"source/.git/objects/7b/98c91b36c52e8dca4551b2ddce7b94f5eb8879","hash":"432f7606428d0edfa4ea74acd418cc80c2b1ccf3","modified":1531137162000},{"_id":"source/.git/objects/7c/05932307977dcd33e9e77967f742939c1f343d","hash":"8839d9d90b0ddf4dbe82fc352fc39ebec62f4f21","modified":1531138567000},{"_id":"source/.git/objects/7c/f6ddc6e69b1f535ff8a3b67ad17eaadb07fea2","hash":"133980fba82faa21c9ce0b3865e34c2a24004b6b","modified":1522306486000},{"_id":"source/.git/objects/80/f6136490810c12355d2634722b86a6ec9ac6d5","hash":"e2be743811fa8977935af47bf46e33b8fb0a09a4","modified":1522237237000},{"_id":"source/.git/objects/7f/65d76838e3fee668604a8da9ff683ba15691ba","hash":"7ed1dca27838633f2f27271c44de16e779c240a3","modified":1531218357000},{"_id":"source/.git/objects/81/0f1268ef6fece363af31ee9543a6fef1a34a61","hash":"5e60f383b1658cbd359d655147c493f9bd8fe9e8","modified":1522306823000},{"_id":"source/.git/objects/81/962141fc9521e5640d63463b1e8b5481bd5fd4","hash":"8ab609db90ecf2397e13ac62bf9ac58d74d41989","modified":1537449604322},{"_id":"source/.git/objects/89/fe10680362fd04d1a0841a9e46b72736b93ece","hash":"fa284f2d501742321f64424bf2c75a4d612bd2be","modified":1543211788000},{"_id":"source/.git/objects/8b/55ccf995dc7a375f765d2393f87628378511d9","hash":"b4ec30b285c42de380600dfdc6983e70bab15a3f","modified":1530799852000},{"_id":"source/.git/objects/8b/6e64e6091b4855ab2093d38624a4c43fb21e1c","hash":"a3104e636d165008d926ee171661d5eb8120e625","modified":1530354413000},{"_id":"source/.git/objects/8b/7a89a3301fa441678d3f1a8bc01b71c2df7dbe","hash":"58b611b55fc4b9157e5438bf2b128099cc4ab768","modified":1523363540000},{"_id":"source/.git/objects/8c/5aee4642ec1a81c8faab4def23ea26d9236c05","hash":"01de11c722d27a84125897c7513227bf6628b011","modified":1543211788206},{"_id":"source/.git/objects/8c/cd3f1576e08c7a4a0f8c7295479c65fc0905b7","hash":"94e53beb93a74dd603e7267ba43238772ffc449b","modified":1525347717000},{"_id":"source/.git/objects/8d/1cff21d91993e882f4abdb3ab54cfe033c8d7d","hash":"78188f91943b7635161a574efab5ee5d46a578db","modified":1543211788207},{"_id":"source/.git/objects/8d/3fcf09dc1f1ee65538a18bf2d5ce468721a8d7","hash":"da18a7e1e6c3f98a3a8c66547230bba25971fd5b","modified":1524240935000},{"_id":"source/.git/objects/8d/5b98515171f819f3a1ff59bf91d754132e9c83","hash":"cae32ed73093b4e5606795b0ce225630ec0d8c6b","modified":1522389534000},{"_id":"source/.git/objects/8d/61768bc1f7840de0b0b5e6704ecea1fe94fffe","hash":"140399dc55e3c2b68ff5933b968691bc04af90c0","modified":1530355946000},{"_id":"source/.git/objects/8f/491533d921d573963f09608524058fbd503401","hash":"4a2db4cdb1871812888913d48345556dd6fe1c32","modified":1537606421780},{"_id":"source/.git/objects/8f/57a99980891ccc68701b94b94342f7ae0e02d6","hash":"275e57e2b5acb4e5c11330d44dc19baba5f8f734","modified":1522237237000},{"_id":"source/.git/objects/91/0396c1caa28d24ccc5ce54082a46954f51dac5","hash":"5077b78c41d58d9413d21a5125cf05e52b9498ae","modified":1523280696000},{"_id":"source/.git/objects/91/8ae7209eae55e6bd754f68f22ab6c7d3a3d945","hash":"f23c3f1d818fbad79109b6850bb0b94480d3d7c7","modified":1525347717000},{"_id":"source/.git/objects/91/a9d541dd51881aaafda3290d95a5caff7cb31d","hash":"b6c005a025ecf5bb2d6f5a07e628c501b05e5563","modified":1530801540000},{"_id":"source/.git/objects/91/ab3a669f683eae99c911d223bb01b3d5424574","hash":"2273802de0e33e2b517e21623afa0116bececf17","modified":1531138720000},{"_id":"source/.git/objects/93/bac526e7781b6e9108ea743583e087e909f0af","hash":"7e50f221ca12fb72aaa4267130202b40857f83cb","modified":1542450953000},{"_id":"source/.git/objects/95/18b0797743f75c1f65b3d01312774e82c8bf59","hash":"ea5d1568b754ac1bea6dfcc1c09f669c4ddfbdcc","modified":1531139616000},{"_id":"source/.git/objects/96/1df2f28158256c1a6973e9a5536c7cbb0f66b0","hash":"0e50c034a1bd462efe1c53dc31ec6c2d5bc47440","modified":1537445249761},{"_id":"source/.git/objects/9b/635be39d7394ef6fe8be950c60aee7d569d8af","hash":"7d6b29f473951ab2786c93c79416d33401b289cf","modified":1522306486000},{"_id":"source/.git/objects/9b/e073c37bf7c2a833fbce232eb4f8cf3092e4b2","hash":"0a8aab39f294631b93c2f5333d633dd4094a3be5","modified":1525347802000},{"_id":"source/.git/objects/9b/ee99c887b063b4f6d54dd41328edc4daffdbb0","hash":"984c9e8ae47c2a718b17076f8da01f4561b9ad03","modified":1522389846000},{"_id":"source/.git/objects/9c/f1bb209687864b31fde61ef963ea0ecb14a63a","hash":"9963d8274eefffaa1ae4fc3991e73af70a2378e8","modified":1525357558000},{"_id":"source/.git/objects/9d/7458f301525ec43dc8c66b3f952976bf6407f6","hash":"6dcc8ee0ebde28ca7f1ad58891e25fc72555b039","modified":1522389846000},{"_id":"source/.git/objects/9d/9f1ee87f2911a23af751921618459c97afc123","hash":"d566e8ae80caddbcc09bb0fa69ddb4cd62ff634c","modified":1543211788000},{"_id":"source/.git/objects/9e/f283ced4a2160e418b0f8a0174129bec573e65","hash":"a12e0276efad866278c7c06573b1b49f09d7d484","modified":1542468745000},{"_id":"source/.git/objects/9f/7645f5489b4ea0b3ad9c75eb2c83b91b5ab6ef","hash":"ef76e7a7054dca654b3bc8b862177e44fbf31376","modified":1533707806000},{"_id":"source/.git/objects/a5/26a32d04c0a78efb64c5c982e18cfac855aaa2","hash":"15ede1c82f7c2451c56903b4ac6751388d95c3f5","modified":1537606421804},{"_id":"source/.git/objects/9f/fc1abdd2026bf8ac031bd360b826643a12611d","hash":"646b606ad75edfeadd232e0c5105f5aea54bd96c","modified":1531138926000},{"_id":"source/.git/objects/a5/971d6e0a8dd5b0f4a04ae8e08c51867e23154d","hash":"ace471f8892b69cc564522c3592c0ce2ba350369","modified":1537449604340},{"_id":"source/.git/objects/a5/a977a84495d921997c0f134490d3f597f01b97","hash":"9778e27b0e8a1f61e425177b8741f0f60cccfb2e","modified":1531139015000},{"_id":"source/.git/objects/a6/81d25436834e1342233253a8d17ae779549ae9","hash":"1b5308405e7e4fe148e1c11052b67858a64ea353","modified":1537449604337},{"_id":"source/.git/objects/a6/9ea25e199ecaea7cea440484e740aecc833de4","hash":"f48040866da0bca24c8395391b8e6a677232f263","modified":1522389556000},{"_id":"source/.git/objects/a7/55d47b4a79ffc1e862f8e0cd43ebeafe5eedbd","hash":"52a9057ad143110d9a2303ce329015f6087b05cd","modified":1531218357000},{"_id":"source/.git/objects/a8/f5d5fae8407ab17ecc9d6081cc7b2a26b6daf0","hash":"8b13d65725b676e8a9018a27c418d8b1822d4201","modified":1522389901000},{"_id":"source/.git/objects/a9/41a7b7ca9d7ca667731be2207de74cf232611c","hash":"9aeed83f476a90033f40ae39ce4cd79ab128689e","modified":1523280696000},{"_id":"source/.git/objects/af/9551a30326818b0863ca544cd02d20adfddd27","hash":"2fd576e0adae3b34f00016e24bd0921b89696465","modified":1543211788000},{"_id":"source/.git/objects/a9/646313b338b26d7048f0b91d916ce2e71286c3","hash":"2a0682882e1819952f3366e3f5fc990283dcc943","modified":1524240752000},{"_id":"source/.git/objects/af/b829e9337982d27d12121c54ab66f0e2c0bbbb","hash":"d787fdc09fc476fe5051754af7ef53802df215e5","modified":1531137162000},{"_id":"source/.git/objects/aa/2b7f03c07316ab4d6f5f894ba3d9ee8eefda9d","hash":"11891eca76b1c1d9f45019ee5a02ab29c266584b","modified":1531138720000},{"_id":"source/.git/objects/af/e434bb7882591389a8be49341e705814afa08c","hash":"958d797b31674187d1d8b6035eb2c0fad27a09cd","modified":1525405033000},{"_id":"source/.git/objects/b1/9c11124cae35d30a807a5fc0794394e9ab8f16","hash":"a95eb7ef361f1e8b93c13490f7660e2d3de789b5","modified":1522305932000},{"_id":"source/.git/objects/b2/73ac5f69611f1f4f30c79bb49cf7744bdadf78","hash":"37917273b26605f1060b840e2e9d93797550ed87","modified":1523363540000},{"_id":"source/.git/objects/b6/07a4d8c31426bc6dce3b2176534b550c731fc4","hash":"0950067fee6ce1134c66fe7e2c9c0ef62cdaa278","modified":1523280696000},{"_id":"source/.git/objects/b6/c89224f3cb8741203f2b5108cbd33a31131c30","hash":"c7bf1a14784edf354e4daa8173e87c4a4f41c0bb","modified":1531218357000},{"_id":"source/.git/objects/b8/1a9c170ba87d6b087d722dafbdb478f5b581ad","hash":"5e63fd3b5d6a59a22dc0646eac8480cc9e8b0c73","modified":1542451920535},{"_id":"source/.git/objects/b9/bac3c4031a6a05447a9848e7b2290d30863b7d","hash":"863f34b339a22e2326e2c32e85a295882e6f702c","modified":1536132549222},{"_id":"source/.git/objects/bc/da64549df7e1c22d453462c80be2e351a15ddf","hash":"cbd4149d7c03d7f86d891188d16f7b2f0135cc17","modified":1542468745025},{"_id":"source/.git/objects/be/8d8e5ecae52c6bcf1f66be208c0ffa85a2c6fd","hash":"750d545a1a7661c36ced40e9a70237d33a241707","modified":1524240752000},{"_id":"source/.git/objects/bf/c4506e0523a0163d900837310459b4393aa55a","hash":"6030d92b6890eceab73491e136f00651baacf3c4","modified":1524240935000},{"_id":"source/.git/objects/c0/ab91856a1661695a7fd143a12c4755c13f5119","hash":"161cccd33ca9d3ebe762347df3546af37ae31082","modified":1537445192778},{"_id":"source/.git/objects/c1/3001a66b979419d67ff84a4381cc05d56f6825","hash":"8fdc493176c86db36b18647e794cebeda4cfb84f","modified":1543211788213},{"_id":"source/.git/objects/c1/761250f0db1ec6acdf48959dfcd287e6fee399","hash":"4086050c86bec2579165b0b96ce44042d2d04921","modified":1543211788189},{"_id":"source/.git/objects/c7/1d59ce3009025ea2239354f279bb07b94942bd","hash":"1c782453abbd43d94cd5b3761f2dcc5604f8e098","modified":1531219038000},{"_id":"source/.git/objects/c8/23d84a2dbc98a61e389a9f8ebf4b4de6aa6a0e","hash":"2b0ae7ed67147278f0ca9203e1f83bac4202e5e7","modified":1522306486000},{"_id":"source/.git/objects/c8/342b08d5433d48f70c8dd7da915f0cfab5a59c","hash":"5b2dfb8ab6fe4e88e5dd4457d6d86fde57616bd0","modified":1523197830000},{"_id":"source/.git/objects/ca/4684d8c98c7298f4923b9e9c3a9c35f0b16fe9","hash":"0c8e14e429f4003c507fb9c50b92b45b9a127655","modified":1524240935000},{"_id":"source/.git/objects/ca/87f92b409681ac91cf7da5c7048a5d694e10ae","hash":"da778bc6338df35e341c8fa0bfcf07a17f6f50df","modified":1531219038000},{"_id":"source/.git/objects/cc/cc71e3705c3b251978917d35ace513a95b65db","hash":"f03a310a4e8c1450a19544611bb5b172e289120a","modified":1522306486000},{"_id":"source/.git/objects/cd/2ded3332e96ec788fa23eda6ed411216e85d5c","hash":"671ddd3cb9e350b2d639e44f356bec0c7cfc0829","modified":1543211788000},{"_id":"source/.git/objects/cd/9dab4ed95ec80d4ed2a366aeb225db96f9f7dc","hash":"64a0547af73eb739212ad855219045e737e877d3","modified":1530357242000},{"_id":"source/.git/objects/cf/7cc28f514994261650c207d156c22d1c7cc0e1","hash":"c5f77ff364b87284bf671264e5c680cbbf996dcb","modified":1543211788188},{"_id":"source/.git/objects/cf/d5e1ba7d6ce9dd08f22ee4dfcad532e35b0997","hash":"caba8f0402695a32407f4f35eef6cbbecd8a81d5","modified":1530799852000},{"_id":"source/.git/objects/cf/d975085f166654bac4437a66c804b7874f1e07","hash":"75c0e30c314e89d554724d155c9a9c75b5c0532f","modified":1522389556000},{"_id":"source/.git/objects/d0/417235ee6ff67bd1f0b6d40d2e8fa9ba76b3c2","hash":"a2becf3b4321b1d029bf1d927a06e1e189b450ac","modified":1537431732404},{"_id":"source/.git/objects/d1/07d0c9134544b301ee92852a6620c99b713605","hash":"0384e5aaa3924d99c58185bc04fb122a92621825","modified":1537431732400},{"_id":"source/.git/objects/d1/087b1fbf84f114bc455d0158eb8b53b770a616","hash":"19b814b94e4a75eaed8a5bb9d8db7cd8f6e82373","modified":1531137162000},{"_id":"source/.git/objects/d1/a5d596544b14b0482a0067276b4fb7d670933e","hash":"bfea8ec7a0795f92109f1ee02b8b9b9009928b3d","modified":1531139015000},{"_id":"source/.git/objects/d2/2c78146212b73c7620aabbff5f3090b7c08d42","hash":"bdb1fc688b653e7383ed0839e1f6123d27863f5b","modified":1525405033000},{"_id":"source/.git/objects/d1/aafcf30de471de8a90e8bcbbbafb133bb4ae0a","hash":"02779de66c923f42e3480a59222b50e82cfaad1a","modified":1531138926000},{"_id":"source/.git/objects/d3/a215243331ddb0a07eac4636b85edb9e0fed6c","hash":"b54e9e45fcbcfa1ac1441f768932037faeddcb12","modified":1530357242000},{"_id":"source/.git/objects/d4/23ba995171d39114844ed0e3ffae64bab78e9c","hash":"a89b2d96d388e2dc85ff89bbdf2826f626002594","modified":1522306486000},{"_id":"source/.git/objects/d6/a8482a20fdec6aa155ece3e93222de8bcfe444","hash":"9934a5d55222b8dd4f81dba053ba7e478eb2ecc5","modified":1542448013134},{"_id":"source/.git/objects/d7/7ab073026b12469820773d8dc8952fbe628928","hash":"4f045b37b832ec70d4af080ae58db45eb1e1e611","modified":1537444781830},{"_id":"source/.git/objects/d8/93eabf305bb2b6f45246d059df3aa1e4e389d9","hash":"9f0c9bbe5f2924cacbac02cc7b75263477853413","modified":1537449990462},{"_id":"source/.git/objects/db/01dadc4f260a9f912dfc70d91ee4ad2691703d","hash":"4d999120065dfc25dce271de707695fa078fab30","modified":1530801540000},{"_id":"source/.git/objects/dc/022868ea57b6c4f2e013ab965734d7f0bdb5b5","hash":"275875d80ddc6ae32c0889d7963411d4bdce1e6b","modified":1523280696000},{"_id":"source/.git/objects/dd/529285f5725cdd7221880ac646ab75927f48a8","hash":"401d021291a4706c448b4937cf13023dd36d10eb","modified":1542451323070},{"_id":"source/.git/objects/dd/60bc125aa1f9f9910b195f836ece39232a5fed","hash":"0d093962736e75d3f989e35c2cd8be36974d5f02","modified":1542450953000},{"_id":"source/.git/objects/dd/635d998dd1ade1c6e1aa7e1183097e1706a137","hash":"2fc74c855ccb3e17d579ef59f76d7533ef05f1e1","modified":1531139072000},{"_id":"source/.git/objects/de/505c0a228b2950a47e60504577759e0e214fe3","hash":"48c9b10a4aa574697617577b42fad382e9263046","modified":1525425315000},{"_id":"source/.git/objects/de/b01b62ec5fa00fecc11eeace68abb15bbba8a9","hash":"86a1af97e9f6c0dec12828bf3d3f3f68cccd391d","modified":1543211788000},{"_id":"source/.git/objects/de/badafd482004557eaa6d109d6d798b64b4c817","hash":"2cafc9fa15f58e43987857d941c793505c22a00f","modified":1522389534000},{"_id":"source/.git/objects/de/d175ba70c7ea8d76d50b424c73c7497c6e2e71","hash":"d8bd6f022369ff6759b0b1a21f2abf2878917f99","modified":1531219038000},{"_id":"source/.git/objects/df/440b986e03c7243f02dead0b0b3c80aa0e4320","hash":"314eb0db058fc0f238df2e05abca9e5d89c6ddbb","modified":1537445192781},{"_id":"source/.git/objects/e0/9b6b34a1cd08ae49f1ce9a230defe9b5722999","hash":"d19ec802f0f734a1c94ed17c338fc9f344b3329b","modified":1533707806000},{"_id":"source/.git/objects/e2/adb0fab7bf8ba0808df8192862b1b1c4b04dad","hash":"3d75cf9d7b9715a3038d591980cfa38f1f60e9f0","modified":1531219038000},{"_id":"source/.git/objects/e4/8225d496fe8e036f145e72c227deb9080d6ea9","hash":"a5f2533a8498bd342be0b623daf8dfb2e4689153","modified":1530357242000},{"_id":"source/.git/objects/e7/7b30aa9c96035e4347490c7cf38ab25067ce38","hash":"472e09291df21be494e9835976d5f00564a09848","modified":1525425038000},{"_id":"source/.git/objects/e9/b9fb2d097c7f7f69c410f4f87d10fc83aaed9e","hash":"a1c3ab535ffa304aad1e45ccd925cf96d52a1a0f","modified":1522306486000},{"_id":"source/.git/objects/e9/34888aff662f80c9fff69999c6d68c89710284","hash":"01d6b1ccab3bff006a08045a6e33a9bdb3d1fe57","modified":1530354414000},{"_id":"source/.git/objects/eb/0cfdadaf1ffe01f5d5989bbe7b36dae22eae49","hash":"f32d32f30e3b3eade70cc688d15bac8bc1979d4b","modified":1523363540000},{"_id":"source/.git/objects/ec/94c792a2773a82a113039d7d97af203fb65c08","hash":"f33af6737bf7fd3ccc89af635b88df12dad64561","modified":1531219038000},{"_id":"source/.git/objects/f0/146ce3b545f29dec1a562bde6c36d023b81fae","hash":"953f2671b9f9c8a47bcb71408442d3ceab59e386","modified":1522306823000},{"_id":"source/.git/objects/f1/ddc0e1e18963d6abbd611a082678c4fa9c09d9","hash":"435d93dbc3474be4404a0e617cafc152976b3d36","modified":1537449808215},{"_id":"source/.git/objects/f1/cf4d92f52c4c8695a7ed075e1642f5f7592209","hash":"282e2e1104e976286a9b51014a9763809c8d015b","modified":1523280696000},{"_id":"source/.git/objects/f3/1ba6230f1c8f0f0c68c13906e1d3c861a4db2e","hash":"5c13c77cc4d279244e2f870ed7ae24acf2516282","modified":1531139015000},{"_id":"source/.git/objects/f4/61f69369a13dd7dc486f234c45fba5559943b9","hash":"3d217ab9d6b6b53af38d559b74abb059e0113cb3","modified":1543211788000},{"_id":"source/.git/objects/f6/771dbe678438b0707a6047ba6781b5b37338f2","hash":"bd820f16d741b55603db2822a3878a68d44c0922","modified":1531139616000},{"_id":"source/.git/objects/f4/abd52b6052dc6d2821ccd5fa0e56815c33119a","hash":"44c4b605bc4711aa50fc722af8c52cc19aec115a","modified":1522389846000},{"_id":"source/.git/objects/f7/932a41165d87ef10e8d0dfa5e846269c6975ab","hash":"ed827c8b8b38c88f063ab61eeba40f9bfde4a82f","modified":1537606421817},{"_id":"source/.git/objects/f9/3fa31989003a8fd386653ae32e867463f79cad","hash":"062c27c6ade66aa75d628ce0bdf79ea803d831e2","modified":1522389556000},{"_id":"source/.git/objects/f9/40f75834a7048ac8f015dd19fe91bb79bc5c0b","hash":"87eb4c49c6f6cc92a618d6316608bd2bc03f5f9b","modified":1542451323064},{"_id":"source/.git/objects/fb/444fdab53c2caf7b9dead649b3a6f89ea96191","hash":"5c1a946699979b223366d3da7a3aa270c77357ba","modified":1531138188000},{"_id":"source/.git/objects/fc/bf2d07feca2db3d58114b226d517505881cbc9","hash":"ceb83dc7060bc7f382f455892cfa6f90c350a0c1","modified":1525424963000},{"_id":"source/.git/objects/fb/b3b787ed215adb2e6362688cf4a985a3400a67","hash":"fe0104fee4331d4e1d88dab9b1482e8ce8dc8300","modified":1522306486000},{"_id":"source/.git/objects/fd/6e9218de5b5cf12e56dfd1f9f7527b967f4b77","hash":"0009811c67df7df2c254d98ebf1c336331a26aa4","modified":1525347802000},{"_id":"source/.git/objects/ff/495476c62af803ee62464dce02b8a3f4aaa8a1","hash":"d25d7168d20608a56c4d392d8432685e14daa689","modified":1537428078906},{"_id":"source/.git/logs/refs/heads/master","hash":"e66f9c0ec62f00290140a8a1602813d3be40d165","modified":1543211788216},{"_id":"source/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1522237237000},{"_id":"source/.git/refs/remotes/origin/master","hash":"d7163aa00b21fd99ecb399f1fe2cc88fe80a968e","modified":1543211793909},{"_id":"source/.git/logs/refs/remotes/origin/HEAD","hash":"7af8d9eeff66a1474a2965a35e51642c5245aea1","modified":1522237237000},{"_id":"source/.git/logs/refs/remotes/origin/master","hash":"4c79ffd80998f910e7c1cb47d6c3eecaa7700df1","modified":1543211793910}],"Category":[{"name":"图像识别","_id":"cjoy53aef000664z6tlyos26r"},{"name":"cocoapods","_id":"cjoy5s1i60004rfz6s9wos1e5"},{"name":"docker","_id":"cjoy5s1iy000hrfz681py6du4"},{"name":"ios","_id":"cjoy5s1j9000qrfz613is6v2g"},{"name":"javascript","_id":"cjoy5s1jt001grfz6d26p38wi"},{"name":"server","_id":"cjoy5s1jx001mrfz67z3tvf3o"},{"name":"node","_id":"cjoy5s1ki0024rfz632jj86ks"}],"Data":[],"Page":[{"title":"categories","date":"2018-11-26T04:02:30.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-11-26 12:02:30\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-11-26T05:01:45.457Z","path":"categories/index.html","layout":"page","_id":"cjoy53adz000064z62320gb9t","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-11-26T05:01:55.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-11-26 13:01:55\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-11-26T05:02:11.639Z","path":"tags/index.html","layout":"page","_id":"cjoy53ae7000264z6rixsrrfq","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2018-11-26T04:43:42.000Z","type":"about","comments":0,"_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2018-11-26 12:43:42\ntype: \"about\"\ncomments: false\n---\n","updated":"2018-11-26T05:02:22.557Z","path":"about/index.html","layout":"page","_id":"cjoy53aee000564z64zojprxg","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Tesseract macOS 部署","date":"2018-01-01T16:00:00.000Z","_content":"\n**[Tesseract](https://github.com/tesseract-ocr/tesseract)**，一款由HP实验室开发由Google维护的开源OCR（Optical Character Recognition , 光学字符识别）引擎，与Microsoft Office Document Imaging（MODI）相比，我们可以不断的训练的库，使图像转换文本的能力不断增强；如果团队深度需要，还可以以它为模板，开发出符合自身需求的OCR引擎。\n\n<!--more-->\n\n### 安装(Mac OS)\n\n- 使用 brew 安装\n\n  ```shell\n  brew install tesseract\n  ```\n\n-  加载语言包(默认只有英文包: eng)\n\n   - 简体中文包\n\n     ```shell\n     cd /usr/local/Cellar/tesseract/{version}/share/tessdata\n     wget https://github.com/tesseract-ocr/tessdata/raw/master/chi_sim.traineddata\n     # 其他语言包链接: https://github.com/tesseract-ocr/tessdata\n     ```\n\n   - 安装所有的语言包\n\n     ```shell\n     brew install tesseract --all-languages\n     ```\n\n### 其他平台安装参考\n\n- [Install Tesseract via pre-built binary package](https://github.com/tesseract-ocr/tesseract/wiki)\n- [build it from source](https://github.com/tesseract-ocr/tesseract/wiki/Compiling)\n\n### 使用\n\n​\t这里只讲一下Tesseract的基本用法,由于Tesseract只提供命令行工具,我们就在终端中使用.\n\n\n- 查看支持语言列表\n\n  ```shell\n  tesseract --list-langs\n\n  # output: \n  List of available languages (3):\n  chi_sim\n  eng\n  osd\n  ```\n\n  我这边安装了简体中文/英文语言包.\n\n- 识别\n\n  ```shell\n  tesseract input.png output -l chi_sim -psm 0\n  input.png  # 待识别图片路径\n  output\t   # 识别后的文件路径(输出为txt格式,不需要加后缀名)\n  -l \t # 可选参数,选择识别时所用的字库,默认为eng\n  -psm # 可选参数,默认值为3:\n   0 = 只进行定向和脚本检测（OSD）\n   1 = 通过OSD进行页面自动分割\n   2 = 自动分割，但没有OSD，或OCR\n   3 = 全自动分割，但没有OSD（默认）\n   4 = 假设待识别图片是一列的文本\n   5 = 假设待识别图片是一个统一的垂直对齐的文本块\n   6 = 假设待识别图片是一个统一的文本块\n   7 = 把图像作为一个单一的文本行\n   8 = 把图像当作一个字\n   9 = 把图像作为一个字在一个圆圈中\n  10 = 把图像当作一个单独的字符\n  ```\n\n  ​\n\n  ​","source":"_posts/[图像识别]Tesseract部署与使用.md","raw":"---\ntitle: Tesseract macOS 部署\ndate: 2018-01-02\ncategories: [图像识别]\ntags:\n  - tesseract\n  - orc\n---\n\n**[Tesseract](https://github.com/tesseract-ocr/tesseract)**，一款由HP实验室开发由Google维护的开源OCR（Optical Character Recognition , 光学字符识别）引擎，与Microsoft Office Document Imaging（MODI）相比，我们可以不断的训练的库，使图像转换文本的能力不断增强；如果团队深度需要，还可以以它为模板，开发出符合自身需求的OCR引擎。\n\n<!--more-->\n\n### 安装(Mac OS)\n\n- 使用 brew 安装\n\n  ```shell\n  brew install tesseract\n  ```\n\n-  加载语言包(默认只有英文包: eng)\n\n   - 简体中文包\n\n     ```shell\n     cd /usr/local/Cellar/tesseract/{version}/share/tessdata\n     wget https://github.com/tesseract-ocr/tessdata/raw/master/chi_sim.traineddata\n     # 其他语言包链接: https://github.com/tesseract-ocr/tessdata\n     ```\n\n   - 安装所有的语言包\n\n     ```shell\n     brew install tesseract --all-languages\n     ```\n\n### 其他平台安装参考\n\n- [Install Tesseract via pre-built binary package](https://github.com/tesseract-ocr/tesseract/wiki)\n- [build it from source](https://github.com/tesseract-ocr/tesseract/wiki/Compiling)\n\n### 使用\n\n​\t这里只讲一下Tesseract的基本用法,由于Tesseract只提供命令行工具,我们就在终端中使用.\n\n\n- 查看支持语言列表\n\n  ```shell\n  tesseract --list-langs\n\n  # output: \n  List of available languages (3):\n  chi_sim\n  eng\n  osd\n  ```\n\n  我这边安装了简体中文/英文语言包.\n\n- 识别\n\n  ```shell\n  tesseract input.png output -l chi_sim -psm 0\n  input.png  # 待识别图片路径\n  output\t   # 识别后的文件路径(输出为txt格式,不需要加后缀名)\n  -l \t # 可选参数,选择识别时所用的字库,默认为eng\n  -psm # 可选参数,默认值为3:\n   0 = 只进行定向和脚本检测（OSD）\n   1 = 通过OSD进行页面自动分割\n   2 = 自动分割，但没有OSD，或OCR\n   3 = 全自动分割，但没有OSD（默认）\n   4 = 假设待识别图片是一列的文本\n   5 = 假设待识别图片是一个统一的垂直对齐的文本块\n   6 = 假设待识别图片是一个统一的文本块\n   7 = 把图像作为一个单一的文本行\n   8 = 把图像当作一个字\n   9 = 把图像作为一个字在一个圆圈中\n  10 = 把图像当作一个单独的字符\n  ```\n\n  ​\n\n  ​","slug":"[图像识别]Tesseract部署与使用","published":1,"updated":"2018-11-26T03:48:57.470Z","_id":"cjoy53ae1000164z6mbm4bvv0","comments":1,"layout":"post","photos":[],"link":"","content":"<p><strong><a href=\"https://github.com/tesseract-ocr/tesseract\" target=\"_blank\" rel=\"noopener\">Tesseract</a></strong>，一款由HP实验室开发由Google维护的开源OCR（Optical Character Recognition , 光学字符识别）引擎，与Microsoft Office Document Imaging（MODI）相比，我们可以不断的训练的库，使图像转换文本的能力不断增强；如果团队深度需要，还可以以它为模板，开发出符合自身需求的OCR引擎。</p>\n<a id=\"more\"></a>\n<h3 id=\"安装-Mac-OS\"><a href=\"#安装-Mac-OS\" class=\"headerlink\" title=\"安装(Mac OS)\"></a>安装(Mac OS)</h3><ul>\n<li><p>使用 brew 安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install tesseract</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加载语言包(默认只有英文包: eng)</p>\n<ul>\n<li><p>简体中文包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/Cellar/tesseract/&#123;version&#125;/share/tessdata</span><br><span class=\"line\">wget https://github.com/tesseract-ocr/tessdata/raw/master/chi_sim.traineddata</span><br><span class=\"line\"><span class=\"meta\">#</span> 其他语言包链接: https://github.com/tesseract-ocr/tessdata</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装所有的语言包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install tesseract --all-languages</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他平台安装参考\"><a href=\"#其他平台安装参考\" class=\"headerlink\" title=\"其他平台安装参考\"></a>其他平台安装参考</h3><ul>\n<li><a href=\"https://github.com/tesseract-ocr/tesseract/wiki\" target=\"_blank\" rel=\"noopener\">Install Tesseract via pre-built binary package</a></li>\n<li><a href=\"https://github.com/tesseract-ocr/tesseract/wiki/Compiling\" target=\"_blank\" rel=\"noopener\">build it from source</a></li>\n</ul>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>​    这里只讲一下Tesseract的基本用法,由于Tesseract只提供命令行工具,我们就在终端中使用.</p>\n<ul>\n<li><p>查看支持语言列表</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract --list-langs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> output: </span><br><span class=\"line\">List of available languages (3):</span><br><span class=\"line\">chi_sim</span><br><span class=\"line\">eng</span><br><span class=\"line\">osd</span><br></pre></td></tr></table></figure>\n<p>我这边安装了简体中文/英文语言包.</p>\n</li>\n<li><p>识别</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract input.png output -l chi_sim -psm 0</span><br><span class=\"line\">input.png  # 待识别图片路径</span><br><span class=\"line\">output\t   # 识别后的文件路径(输出为txt格式,不需要加后缀名)</span><br><span class=\"line\">-l \t # 可选参数,选择识别时所用的字库,默认为eng</span><br><span class=\"line\">-psm # 可选参数,默认值为3:</span><br><span class=\"line\"> 0 = 只进行定向和脚本检测（OSD）</span><br><span class=\"line\"> 1 = 通过OSD进行页面自动分割</span><br><span class=\"line\"> 2 = 自动分割，但没有OSD，或OCR</span><br><span class=\"line\"> 3 = 全自动分割，但没有OSD（默认）</span><br><span class=\"line\"> 4 = 假设待识别图片是一列的文本</span><br><span class=\"line\"> 5 = 假设待识别图片是一个统一的垂直对齐的文本块</span><br><span class=\"line\"> 6 = 假设待识别图片是一个统一的文本块</span><br><span class=\"line\"> 7 = 把图像作为一个单一的文本行</span><br><span class=\"line\"> 8 = 把图像当作一个字</span><br><span class=\"line\"> 9 = 把图像作为一个字在一个圆圈中</span><br><span class=\"line\">10 = 把图像当作一个单独的字符</span><br></pre></td></tr></table></figure>\n<p>​</p>\n<p>​</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<p><strong><a href=\"https://github.com/tesseract-ocr/tesseract\" target=\"_blank\" rel=\"noopener\">Tesseract</a></strong>，一款由HP实验室开发由Google维护的开源OCR（Optical Character Recognition , 光学字符识别）引擎，与Microsoft Office Document Imaging（MODI）相比，我们可以不断的训练的库，使图像转换文本的能力不断增强；如果团队深度需要，还可以以它为模板，开发出符合自身需求的OCR引擎。</p>","more":"<h3 id=\"安装-Mac-OS\"><a href=\"#安装-Mac-OS\" class=\"headerlink\" title=\"安装(Mac OS)\"></a>安装(Mac OS)</h3><ul>\n<li><p>使用 brew 安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install tesseract</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>加载语言包(默认只有英文包: eng)</p>\n<ul>\n<li><p>简体中文包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/Cellar/tesseract/&#123;version&#125;/share/tessdata</span><br><span class=\"line\">wget https://github.com/tesseract-ocr/tessdata/raw/master/chi_sim.traineddata</span><br><span class=\"line\"><span class=\"meta\">#</span> 其他语言包链接: https://github.com/tesseract-ocr/tessdata</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>安装所有的语言包</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">brew install tesseract --all-languages</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他平台安装参考\"><a href=\"#其他平台安装参考\" class=\"headerlink\" title=\"其他平台安装参考\"></a>其他平台安装参考</h3><ul>\n<li><a href=\"https://github.com/tesseract-ocr/tesseract/wiki\" target=\"_blank\" rel=\"noopener\">Install Tesseract via pre-built binary package</a></li>\n<li><a href=\"https://github.com/tesseract-ocr/tesseract/wiki/Compiling\" target=\"_blank\" rel=\"noopener\">build it from source</a></li>\n</ul>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>​    这里只讲一下Tesseract的基本用法,由于Tesseract只提供命令行工具,我们就在终端中使用.</p>\n<ul>\n<li><p>查看支持语言列表</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract --list-langs</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> output: </span><br><span class=\"line\">List of available languages (3):</span><br><span class=\"line\">chi_sim</span><br><span class=\"line\">eng</span><br><span class=\"line\">osd</span><br></pre></td></tr></table></figure>\n<p>我这边安装了简体中文/英文语言包.</p>\n</li>\n<li><p>识别</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tesseract input.png output -l chi_sim -psm 0</span><br><span class=\"line\">input.png  # 待识别图片路径</span><br><span class=\"line\">output\t   # 识别后的文件路径(输出为txt格式,不需要加后缀名)</span><br><span class=\"line\">-l \t # 可选参数,选择识别时所用的字库,默认为eng</span><br><span class=\"line\">-psm # 可选参数,默认值为3:</span><br><span class=\"line\"> 0 = 只进行定向和脚本检测（OSD）</span><br><span class=\"line\"> 1 = 通过OSD进行页面自动分割</span><br><span class=\"line\"> 2 = 自动分割，但没有OSD，或OCR</span><br><span class=\"line\"> 3 = 全自动分割，但没有OSD（默认）</span><br><span class=\"line\"> 4 = 假设待识别图片是一列的文本</span><br><span class=\"line\"> 5 = 假设待识别图片是一个统一的垂直对齐的文本块</span><br><span class=\"line\"> 6 = 假设待识别图片是一个统一的文本块</span><br><span class=\"line\"> 7 = 把图像作为一个单一的文本行</span><br><span class=\"line\"> 8 = 把图像当作一个字</span><br><span class=\"line\"> 9 = 把图像作为一个字在一个圆圈中</span><br><span class=\"line\">10 = 把图像当作一个单独的字符</span><br></pre></td></tr></table></figure>\n<p>​</p>\n<p>​</p>\n</li>\n</ul>"},{"title":"Cocoapods 与 Travis-CI","date":"2018-06-29T16:00:00.000Z","description":"Travis-CI 是一个专门为开源项目打造的持续集成环境,与Github高度集成.支持iOS/macOS构建服务.","_content":"\n# Cocoapod 与 Travis-CI\n\nTravis-CI 是一个专门为开源项目打造的持续集成环境,与Github高度集成.**支持iOS/macOS构建服务**.\n\n#### 1. 使用Github账号登录[travis](https://travis-ci.org/)\n\n   ```\n   - 会自动同步gitbub下仓库目录\n   ```\n\n#### 2. 配置`.travis.yml`文件\n\n以[Routable开源库](https://github.com/linhay/Routable)为例\n\n默认`.travis.yml`文件:\n\n   ```ruby\n   # references:\n   # * http://www.objc.io/issue-6/travis-ci.html\n   # * https://github.com/supermarin/xcpretty#usage\n   \n   osx_image: xcode7.3\n   language: objective-c\n   # cache: cocoapods\n   # podfile: Example/Podfile\n   # before_install:\n   # - gem install cocoapods # Since Travis is not always on latest version\n   # - pod install --project-directory=Example\n   script:\n   - set -o pipefail && xcodebuild test -enableCodeCoverage YES -workspace Example/Routable.xcworkspace -scheme Routable-Example -sdk iphonesimulator9.3 ONLY_ACTIVE_ARCH=NO | xcpretty\n   - pod lib lint\n   ```\n\n   `.travis.yml`修改版:\n\n   ```ruby\n   # 采用新版xcode9编译[主要是swift语法版本问题]\n   osx_image: xcode9\n   # objective-c/swift 都采用 objective-c 配置\n   language: objective-c\n   \n   cache: cocoapods\n   podfile: Example/Podfile\n   \n   env:\n     global:\n       - LANG=en_US.UTF-8\n       - LC_ALL=en_US.UTF-8\n   \t# 项目路径\n       - XCODE_WORKSPACE=Example/Routable.xcworkspace\n     matrix:\n   \t# 项目名\n       - SCHEME=\"Routable-Example\"\n   \n   before_install:\n     - gem install xcpretty --no-rdoc --no-ri --no-document --quiet\n     - gem install cocoapods --pre --no-rdoc --no-ri --no-document --quiet\n   \t# 如果依赖其他库,最好加上\n     - pod repo update\n     - pod install --project-directory=Example\n   \n   script:\n     - set -o pipefail\n     - xcodebuild -workspace \"$XCODE_WORKSPACE\" -scheme \"$SCHEME\" -configuration Debug clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO | xcpretty -c\n     - xcodebuild -workspace \"$XCODE_WORKSPACE\" -scheme \"$SCHEME\" -configuration Release clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO | xcpretty -c\n     - pod lib lint --allow-warnings\n   \n   after_success:\n     - sleep 3\n   ```\n\n\n\n#### 3. 开启CI服务   \n\n   - 登录[travis](https://travis-ci.org/)\n\n  ![](https://s.linhey.com/travis-ci-0.png)\n\n   - 之后后我们 GitHub 项目 `Setting` 中的 `Integrations & services` 已经添加了 `Travis CI` 服务.\n\n  ![](https://s.linhey.com/travis-ci-1.png)\n\n#### 4. 触发构建服务\n\n`Git push`会触发构建服务,同时在github上也有所指示.\n\n  github:![](https://s.linhey.com/travis-ci-3.png)\n\n  travis:![](https://s.linhey.com/travis-ci-2.png)\n\n\n\n#### 5.错误日志\n\n构建失败时,在`job log`会输出相应日志.\n\n \n\n#### 6.构建徽章 Get!\n\n![](https://s.linhey.com/travis-ci-4.png)\n\n在项目readme.md中插入:\n\n```markdown\n[![build](https://travis-ci.org/[user]/[repo].svg?branch=master)](https://travis-ci.org/[user]/[repo])\n```\n\n🌰:\n\n```markdown\n[![build](https://travis-ci.org/linhay/Routable.svg?branch=master)](https://travis-ci.org/linhay/Routable)\n```\n\n","source":"_posts/[Cocoapods]与Travis-CI.md","raw":"---\ntitle: Cocoapods 与 Travis-CI\ndate: 2018-06-30\ncategories: [cocoapods]\ntags: [cocoapods,travis,github,ci]\ndescription: Travis-CI 是一个专门为开源项目打造的持续集成环境,与Github高度集成.支持iOS/macOS构建服务.\n---\n\n# Cocoapod 与 Travis-CI\n\nTravis-CI 是一个专门为开源项目打造的持续集成环境,与Github高度集成.**支持iOS/macOS构建服务**.\n\n#### 1. 使用Github账号登录[travis](https://travis-ci.org/)\n\n   ```\n   - 会自动同步gitbub下仓库目录\n   ```\n\n#### 2. 配置`.travis.yml`文件\n\n以[Routable开源库](https://github.com/linhay/Routable)为例\n\n默认`.travis.yml`文件:\n\n   ```ruby\n   # references:\n   # * http://www.objc.io/issue-6/travis-ci.html\n   # * https://github.com/supermarin/xcpretty#usage\n   \n   osx_image: xcode7.3\n   language: objective-c\n   # cache: cocoapods\n   # podfile: Example/Podfile\n   # before_install:\n   # - gem install cocoapods # Since Travis is not always on latest version\n   # - pod install --project-directory=Example\n   script:\n   - set -o pipefail && xcodebuild test -enableCodeCoverage YES -workspace Example/Routable.xcworkspace -scheme Routable-Example -sdk iphonesimulator9.3 ONLY_ACTIVE_ARCH=NO | xcpretty\n   - pod lib lint\n   ```\n\n   `.travis.yml`修改版:\n\n   ```ruby\n   # 采用新版xcode9编译[主要是swift语法版本问题]\n   osx_image: xcode9\n   # objective-c/swift 都采用 objective-c 配置\n   language: objective-c\n   \n   cache: cocoapods\n   podfile: Example/Podfile\n   \n   env:\n     global:\n       - LANG=en_US.UTF-8\n       - LC_ALL=en_US.UTF-8\n   \t# 项目路径\n       - XCODE_WORKSPACE=Example/Routable.xcworkspace\n     matrix:\n   \t# 项目名\n       - SCHEME=\"Routable-Example\"\n   \n   before_install:\n     - gem install xcpretty --no-rdoc --no-ri --no-document --quiet\n     - gem install cocoapods --pre --no-rdoc --no-ri --no-document --quiet\n   \t# 如果依赖其他库,最好加上\n     - pod repo update\n     - pod install --project-directory=Example\n   \n   script:\n     - set -o pipefail\n     - xcodebuild -workspace \"$XCODE_WORKSPACE\" -scheme \"$SCHEME\" -configuration Debug clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO | xcpretty -c\n     - xcodebuild -workspace \"$XCODE_WORKSPACE\" -scheme \"$SCHEME\" -configuration Release clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO | xcpretty -c\n     - pod lib lint --allow-warnings\n   \n   after_success:\n     - sleep 3\n   ```\n\n\n\n#### 3. 开启CI服务   \n\n   - 登录[travis](https://travis-ci.org/)\n\n  ![](https://s.linhey.com/travis-ci-0.png)\n\n   - 之后后我们 GitHub 项目 `Setting` 中的 `Integrations & services` 已经添加了 `Travis CI` 服务.\n\n  ![](https://s.linhey.com/travis-ci-1.png)\n\n#### 4. 触发构建服务\n\n`Git push`会触发构建服务,同时在github上也有所指示.\n\n  github:![](https://s.linhey.com/travis-ci-3.png)\n\n  travis:![](https://s.linhey.com/travis-ci-2.png)\n\n\n\n#### 5.错误日志\n\n构建失败时,在`job log`会输出相应日志.\n\n \n\n#### 6.构建徽章 Get!\n\n![](https://s.linhey.com/travis-ci-4.png)\n\n在项目readme.md中插入:\n\n```markdown\n[![build](https://travis-ci.org/[user]/[repo].svg?branch=master)](https://travis-ci.org/[user]/[repo])\n```\n\n🌰:\n\n```markdown\n[![build](https://travis-ci.org/linhay/Routable.svg?branch=master)](https://travis-ci.org/linhay/Routable)\n```\n\n","slug":"[Cocoapods]与Travis-CI","published":1,"updated":"2018-07-10T10:34:18.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1ho0000rfz6zw837exn","content":"<h1 id=\"Cocoapod-与-Travis-CI\"><a href=\"#Cocoapod-与-Travis-CI\" class=\"headerlink\" title=\"Cocoapod 与 Travis-CI\"></a>Cocoapod 与 Travis-CI</h1><p>Travis-CI 是一个专门为开源项目打造的持续集成环境,与Github高度集成.<strong>支持iOS/macOS构建服务</strong>.</p>\n<h4 id=\"1-使用Github账号登录travis\"><a href=\"#1-使用Github账号登录travis\" class=\"headerlink\" title=\"1. 使用Github账号登录travis\"></a>1. 使用Github账号登录<a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">travis</a></h4>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 会自动同步gitbub下仓库目录</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-配置-travis-yml文件\"><a href=\"#2-配置-travis-yml文件\" class=\"headerlink\" title=\"2. 配置.travis.yml文件\"></a>2. 配置<code>.travis.yml</code>文件</h4><p>以<a href=\"https://github.com/linhay/Routable\" target=\"_blank\" rel=\"noopener\">Routable开源库</a>为例</p>\n<p>默认<code>.travis.yml</code>文件:</p>\n   <figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># references:</span></span><br><span class=\"line\"><span class=\"comment\"># * http://www.objc.io/issue-6/travis-ci.html</span></span><br><span class=\"line\"><span class=\"comment\"># * https://github.com/supermarin/xcpretty#usage</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">osx_image:</span> xcode7.<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"symbol\">language:</span> objective-c</span><br><span class=\"line\"><span class=\"comment\"># cache: cocoapods</span></span><br><span class=\"line\"><span class=\"comment\"># podfile: Example/Podfile</span></span><br><span class=\"line\"><span class=\"comment\"># before_install:</span></span><br><span class=\"line\"><span class=\"comment\"># - gem install cocoapods # Since Travis is not always on latest version</span></span><br><span class=\"line\"><span class=\"comment\"># - pod install --project-directory=Example</span></span><br><span class=\"line\"><span class=\"symbol\">script:</span></span><br><span class=\"line\">- set -o pipefail &amp;&amp; xcodebuild test -enableCodeCoverage YES -workspace Example/Routable.xcworkspace -scheme Routable-Example -sdk iphonesimulator9.<span class=\"number\">3</span> ONLY_ACTIVE_ARCH=NO <span class=\"params\">| xcpretty</span></span><br><span class=\"line\"><span class=\"params\">- pod lib lint</span></span><br></pre></td></tr></table></figure>\n<p>   <code>.travis.yml</code>修改版:</p>\n   <figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 采用新版xcode9编译[主要是swift语法版本问题]</span></span><br><span class=\"line\"><span class=\"symbol\">osx_image:</span> xcode9</span><br><span class=\"line\"><span class=\"comment\"># objective-c/swift 都采用 objective-c 配置</span></span><br><span class=\"line\"><span class=\"symbol\">language:</span> objective-c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">cache:</span> cocoapods</span><br><span class=\"line\"><span class=\"symbol\">podfile:</span> Example/Podfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">env:</span></span><br><span class=\"line\">  <span class=\"symbol\">global:</span></span><br><span class=\"line\">    - LANG=en_US.UTF-<span class=\"number\">8</span></span><br><span class=\"line\">    - LC_ALL=en_US.UTF-<span class=\"number\">8</span></span><br><span class=\"line\">\t<span class=\"comment\"># 项目路径</span></span><br><span class=\"line\">    - XCODE_WORKSPACE=Example/Routable.xcworkspace</span><br><span class=\"line\">  <span class=\"symbol\">matrix:</span></span><br><span class=\"line\">\t<span class=\"comment\"># 项目名</span></span><br><span class=\"line\">    - SCHEME=<span class=\"string\">\"Routable-Example\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">before_install:</span></span><br><span class=\"line\">  - gem install xcpretty --no-rdoc --no-ri --no-document --quiet</span><br><span class=\"line\">  - gem install cocoapods --pre --no-rdoc --no-ri --no-document --quiet</span><br><span class=\"line\">\t<span class=\"comment\"># 如果依赖其他库,最好加上</span></span><br><span class=\"line\">  - pod repo update</span><br><span class=\"line\">  - pod install --project-directory=Example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">script:</span></span><br><span class=\"line\">  - set -o pipefail</span><br><span class=\"line\">  - xcodebuild -workspace <span class=\"string\">\"$XCODE_WORKSPACE\"</span> -scheme <span class=\"string\">\"$SCHEME\"</span> -configuration Debug clean build CODE_SIGN_IDENTITY=<span class=\"string\">\"\"</span> CODE_SIGNING_REQUIRED=NO <span class=\"params\">| xcpretty -c</span></span><br><span class=\"line\"><span class=\"params\">  - xcodebuild -workspace \"$XCODE_WORKSPACE\" -scheme \"$SCHEME\" -configuration Release clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO |</span> xcpretty -c</span><br><span class=\"line\">  - pod lib lint --allow-warnings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">after_success:</span></span><br><span class=\"line\">  - sleep <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-开启CI服务\"><a href=\"#3-开启CI服务\" class=\"headerlink\" title=\"3. 开启CI服务\"></a>3. 开启CI服务</h4><ul>\n<li><p>登录<a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">travis</a></p>\n<p><img src=\"https://s.linhey.com/travis-ci-0.png\" alt=\"\"></p>\n</li>\n<li><p>之后后我们 GitHub 项目 <code>Setting</code> 中的 <code>Integrations &amp; services</code> 已经添加了 <code>Travis CI</code> 服务.</p>\n<p><img src=\"https://s.linhey.com/travis-ci-1.png\" alt=\"\"></p>\n</li>\n</ul>\n<h4 id=\"4-触发构建服务\"><a href=\"#4-触发构建服务\" class=\"headerlink\" title=\"4. 触发构建服务\"></a>4. 触发构建服务</h4><p><code>Git push</code>会触发构建服务,同时在github上也有所指示.</p>\n<p>  github:<img src=\"https://s.linhey.com/travis-ci-3.png\" alt=\"\"></p>\n<p>  travis:<img src=\"https://s.linhey.com/travis-ci-2.png\" alt=\"\"></p>\n<h4 id=\"5-错误日志\"><a href=\"#5-错误日志\" class=\"headerlink\" title=\"5.错误日志\"></a>5.错误日志</h4><p>构建失败时,在<code>job log</code>会输出相应日志.</p>\n<h4 id=\"6-构建徽章-Get\"><a href=\"#6-构建徽章-Get\" class=\"headerlink\" title=\"6.构建徽章 Get!\"></a>6.构建徽章 Get!</h4><p><img src=\"https://s.linhey.com/travis-ci-4.png\" alt=\"\"></p>\n<p>在项目readme.md中插入:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">![build</span>](<span class=\"link\">https://travis-ci.org/[user]/[repo].svg?branch=master</span>)](<span class=\"link\">https://travis-ci.org/[user]/[repo]</span>)</span><br></pre></td></tr></table></figure>\n<p>🌰:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">![build</span>](<span class=\"link\">https://travis-ci.org/linhay/Routable.svg?branch=master</span>)](<span class=\"link\">https://travis-ci.org/linhay/Routable</span>)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Cocoapod-与-Travis-CI\"><a href=\"#Cocoapod-与-Travis-CI\" class=\"headerlink\" title=\"Cocoapod 与 Travis-CI\"></a>Cocoapod 与 Travis-CI</h1><p>Travis-CI 是一个专门为开源项目打造的持续集成环境,与Github高度集成.<strong>支持iOS/macOS构建服务</strong>.</p>\n<h4 id=\"1-使用Github账号登录travis\"><a href=\"#1-使用Github账号登录travis\" class=\"headerlink\" title=\"1. 使用Github账号登录travis\"></a>1. 使用Github账号登录<a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">travis</a></h4>   <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- 会自动同步gitbub下仓库目录</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-配置-travis-yml文件\"><a href=\"#2-配置-travis-yml文件\" class=\"headerlink\" title=\"2. 配置.travis.yml文件\"></a>2. 配置<code>.travis.yml</code>文件</h4><p>以<a href=\"https://github.com/linhay/Routable\" target=\"_blank\" rel=\"noopener\">Routable开源库</a>为例</p>\n<p>默认<code>.travis.yml</code>文件:</p>\n   <figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># references:</span></span><br><span class=\"line\"><span class=\"comment\"># * http://www.objc.io/issue-6/travis-ci.html</span></span><br><span class=\"line\"><span class=\"comment\"># * https://github.com/supermarin/xcpretty#usage</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">osx_image:</span> xcode7.<span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"symbol\">language:</span> objective-c</span><br><span class=\"line\"><span class=\"comment\"># cache: cocoapods</span></span><br><span class=\"line\"><span class=\"comment\"># podfile: Example/Podfile</span></span><br><span class=\"line\"><span class=\"comment\"># before_install:</span></span><br><span class=\"line\"><span class=\"comment\"># - gem install cocoapods # Since Travis is not always on latest version</span></span><br><span class=\"line\"><span class=\"comment\"># - pod install --project-directory=Example</span></span><br><span class=\"line\"><span class=\"symbol\">script:</span></span><br><span class=\"line\">- set -o pipefail &amp;&amp; xcodebuild test -enableCodeCoverage YES -workspace Example/Routable.xcworkspace -scheme Routable-Example -sdk iphonesimulator9.<span class=\"number\">3</span> ONLY_ACTIVE_ARCH=NO <span class=\"params\">| xcpretty</span></span><br><span class=\"line\"><span class=\"params\">- pod lib lint</span></span><br></pre></td></tr></table></figure>\n<p>   <code>.travis.yml</code>修改版:</p>\n   <figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 采用新版xcode9编译[主要是swift语法版本问题]</span></span><br><span class=\"line\"><span class=\"symbol\">osx_image:</span> xcode9</span><br><span class=\"line\"><span class=\"comment\"># objective-c/swift 都采用 objective-c 配置</span></span><br><span class=\"line\"><span class=\"symbol\">language:</span> objective-c</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">cache:</span> cocoapods</span><br><span class=\"line\"><span class=\"symbol\">podfile:</span> Example/Podfile</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">env:</span></span><br><span class=\"line\">  <span class=\"symbol\">global:</span></span><br><span class=\"line\">    - LANG=en_US.UTF-<span class=\"number\">8</span></span><br><span class=\"line\">    - LC_ALL=en_US.UTF-<span class=\"number\">8</span></span><br><span class=\"line\">\t<span class=\"comment\"># 项目路径</span></span><br><span class=\"line\">    - XCODE_WORKSPACE=Example/Routable.xcworkspace</span><br><span class=\"line\">  <span class=\"symbol\">matrix:</span></span><br><span class=\"line\">\t<span class=\"comment\"># 项目名</span></span><br><span class=\"line\">    - SCHEME=<span class=\"string\">\"Routable-Example\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">before_install:</span></span><br><span class=\"line\">  - gem install xcpretty --no-rdoc --no-ri --no-document --quiet</span><br><span class=\"line\">  - gem install cocoapods --pre --no-rdoc --no-ri --no-document --quiet</span><br><span class=\"line\">\t<span class=\"comment\"># 如果依赖其他库,最好加上</span></span><br><span class=\"line\">  - pod repo update</span><br><span class=\"line\">  - pod install --project-directory=Example</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">script:</span></span><br><span class=\"line\">  - set -o pipefail</span><br><span class=\"line\">  - xcodebuild -workspace <span class=\"string\">\"$XCODE_WORKSPACE\"</span> -scheme <span class=\"string\">\"$SCHEME\"</span> -configuration Debug clean build CODE_SIGN_IDENTITY=<span class=\"string\">\"\"</span> CODE_SIGNING_REQUIRED=NO <span class=\"params\">| xcpretty -c</span></span><br><span class=\"line\"><span class=\"params\">  - xcodebuild -workspace \"$XCODE_WORKSPACE\" -scheme \"$SCHEME\" -configuration Release clean build CODE_SIGN_IDENTITY=\"\" CODE_SIGNING_REQUIRED=NO |</span> xcpretty -c</span><br><span class=\"line\">  - pod lib lint --allow-warnings</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"symbol\">after_success:</span></span><br><span class=\"line\">  - sleep <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"3-开启CI服务\"><a href=\"#3-开启CI服务\" class=\"headerlink\" title=\"3. 开启CI服务\"></a>3. 开启CI服务</h4><ul>\n<li><p>登录<a href=\"https://travis-ci.org/\" target=\"_blank\" rel=\"noopener\">travis</a></p>\n<p><img src=\"https://s.linhey.com/travis-ci-0.png\" alt=\"\"></p>\n</li>\n<li><p>之后后我们 GitHub 项目 <code>Setting</code> 中的 <code>Integrations &amp; services</code> 已经添加了 <code>Travis CI</code> 服务.</p>\n<p><img src=\"https://s.linhey.com/travis-ci-1.png\" alt=\"\"></p>\n</li>\n</ul>\n<h4 id=\"4-触发构建服务\"><a href=\"#4-触发构建服务\" class=\"headerlink\" title=\"4. 触发构建服务\"></a>4. 触发构建服务</h4><p><code>Git push</code>会触发构建服务,同时在github上也有所指示.</p>\n<p>  github:<img src=\"https://s.linhey.com/travis-ci-3.png\" alt=\"\"></p>\n<p>  travis:<img src=\"https://s.linhey.com/travis-ci-2.png\" alt=\"\"></p>\n<h4 id=\"5-错误日志\"><a href=\"#5-错误日志\" class=\"headerlink\" title=\"5.错误日志\"></a>5.错误日志</h4><p>构建失败时,在<code>job log</code>会输出相应日志.</p>\n<h4 id=\"6-构建徽章-Get\"><a href=\"#6-构建徽章-Get\" class=\"headerlink\" title=\"6.构建徽章 Get!\"></a>6.构建徽章 Get!</h4><p><img src=\"https://s.linhey.com/travis-ci-4.png\" alt=\"\"></p>\n<p>在项目readme.md中插入:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">![build</span>](<span class=\"link\">https://travis-ci.org/[user]/[repo].svg?branch=master</span>)](<span class=\"link\">https://travis-ci.org/[user]/[repo]</span>)</span><br></pre></td></tr></table></figure>\n<p>🌰:</p>\n<figure class=\"highlight markdown\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"string\">![build</span>](<span class=\"link\">https://travis-ci.org/linhay/Routable.svg?branch=master</span>)](<span class=\"link\">https://travis-ci.org/linhay/Routable</span>)</span><br></pre></td></tr></table></figure>\n"},{"title":"Cocoapods 与 jazzy","date":"2018-06-29T16:00:00.000Z","description":"jazzy 是一款可以为 Swift 和 Objective-C 代码产生具有 Apple 风格的代码文档工具.","_content":"\n# Cocoapod 与 jazzy\n\n先上效果图 [链接地址](https://linhay.github.io/SPKit/):\n\n![](https://s.linhey.com/jazzy-0.png)\n\n\n\n## 安装与使用\n\n1. 安装 [**jazzy**](https://github.com/realm/jazzy)\n\n   ```shell\n   [sudo] gem install jazzy\n   ```\n\n2. 文档生成\n\n   ```shell\n   cd [项目目录]\n   # 默认在当前目录下生成 docs/\n   # 这里导出到Github.io仓库目录\n   jazzy --podspec [xxx.podspec] --output [输出路径]\n   ```\n\n## Github.io\n\n[Github.io申请](https://pages.github.com/)\n\n由于普通Github无法解析html文件,笔者这边采用了Github.io来托管开源项目 API 文档.\n\n\n\n\n","source":"_posts/[Cocoapods]与jazzy.md","raw":"---\ntitle: Cocoapods 与 jazzy\ndate: 2018-06-30\ncategories: [cocoapods]\ntags: [cocoapods,jazzy,github,api]\ndescription: jazzy 是一款可以为 Swift 和 Objective-C 代码产生具有 Apple 风格的代码文档工具.\n---\n\n# Cocoapod 与 jazzy\n\n先上效果图 [链接地址](https://linhay.github.io/SPKit/):\n\n![](https://s.linhey.com/jazzy-0.png)\n\n\n\n## 安装与使用\n\n1. 安装 [**jazzy**](https://github.com/realm/jazzy)\n\n   ```shell\n   [sudo] gem install jazzy\n   ```\n\n2. 文档生成\n\n   ```shell\n   cd [项目目录]\n   # 默认在当前目录下生成 docs/\n   # 这里导出到Github.io仓库目录\n   jazzy --podspec [xxx.podspec] --output [输出路径]\n   ```\n\n## Github.io\n\n[Github.io申请](https://pages.github.com/)\n\n由于普通Github无法解析html文件,笔者这边采用了Github.io来托管开源项目 API 文档.\n\n\n\n\n","slug":"[Cocoapods]与jazzy","published":1,"updated":"2018-07-10T10:33:23.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1hz0002rfz6w0y6jwma","content":"<h1 id=\"Cocoapod-与-jazzy\"><a href=\"#Cocoapod-与-jazzy\" class=\"headerlink\" title=\"Cocoapod 与 jazzy\"></a>Cocoapod 与 jazzy</h1><p>先上效果图 <a href=\"https://linhay.github.io/SPKit/\" target=\"_blank\" rel=\"noopener\">链接地址</a>:</p>\n<p><img src=\"https://s.linhey.com/jazzy-0.png\" alt=\"\"></p>\n<h2 id=\"安装与使用\"><a href=\"#安装与使用\" class=\"headerlink\" title=\"安装与使用\"></a>安装与使用</h2><ol>\n<li><p>安装 <a href=\"https://github.com/realm/jazzy\" target=\"_blank\" rel=\"noopener\"><strong>jazzy</strong></a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[sudo] gem install jazzy</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文档生成</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [项目目录]</span><br><span class=\"line\"><span class=\"meta\">#</span> 默认在当前目录下生成 docs/</span><br><span class=\"line\"><span class=\"meta\">#</span> 这里导出到Github.io仓库目录</span><br><span class=\"line\">jazzy --podspec [xxx.podspec] --output [输出路径]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Github-io\"><a href=\"#Github-io\" class=\"headerlink\" title=\"Github.io\"></a>Github.io</h2><p><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">Github.io申请</a></p>\n<p>由于普通Github无法解析html文件,笔者这边采用了Github.io来托管开源项目 API 文档.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Cocoapod-与-jazzy\"><a href=\"#Cocoapod-与-jazzy\" class=\"headerlink\" title=\"Cocoapod 与 jazzy\"></a>Cocoapod 与 jazzy</h1><p>先上效果图 <a href=\"https://linhay.github.io/SPKit/\" target=\"_blank\" rel=\"noopener\">链接地址</a>:</p>\n<p><img src=\"https://s.linhey.com/jazzy-0.png\" alt=\"\"></p>\n<h2 id=\"安装与使用\"><a href=\"#安装与使用\" class=\"headerlink\" title=\"安装与使用\"></a>安装与使用</h2><ol>\n<li><p>安装 <a href=\"https://github.com/realm/jazzy\" target=\"_blank\" rel=\"noopener\"><strong>jazzy</strong></a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[sudo] gem install jazzy</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>文档生成</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd [项目目录]</span><br><span class=\"line\"><span class=\"meta\">#</span> 默认在当前目录下生成 docs/</span><br><span class=\"line\"><span class=\"meta\">#</span> 这里导出到Github.io仓库目录</span><br><span class=\"line\">jazzy --podspec [xxx.podspec] --output [输出路径]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"Github-io\"><a href=\"#Github-io\" class=\"headerlink\" title=\"Github.io\"></a>Github.io</h2><p><a href=\"https://pages.github.com/\" target=\"_blank\" rel=\"noopener\">Github.io申请</a></p>\n<p>由于普通Github无法解析html文件,笔者这边采用了Github.io来托管开源项目 API 文档.</p>\n"},{"title":"hexo配置与自动化更新","date":"2018-03-07T16:00:00.000Z","description":"采用docker构建hexo服务.","_content":"\n# hexo配置与自动化更新\n\n- [hexo安装](https://github.com/hexojs/hexo)\n- [hexo-Next主题安装](https://github.com/theme-next/hexo-theme-next)\n- [NexT官网](http://theme-next.iissnan.com/)\n- [Next配置](http://shenzekun.cn/hexo的next主题个性化配置教程.html)\n\n## hexo - docker\n\n### [Docker安装](https://www.docker-cn.com/community-edition)\n\n### Github设置\n\n1. 由于ssh/password方式较为繁琐.以下采用[Github: Personal access tokens](https://github.com/settings/tokens)拉取仓库.\n\n   🐞:\n\n   - Personal access tokens 只会首次出现,注意保存.\n   - Personal access tokens 只需勾选`repo`权限.\n\n2. 仓库划分:\n\n   - 文章仓库: posts\n   - hexo仓库: hexo\n     - 为了保证线上与mac上的环境一致,我将`.gitignore`中`node_modules` 移除.\n\n\n### Ubuntu\n\n1. **文件目录**:\n\n   ```shell\n   .\n   ├── hexo\n   ├── Dockerfile\n   ├── posts\n   │   ├── .git\n   │   ├── LICENSE\n   │   └── xxxx.md\n   ├── update.sh\n   └── start.sh\n   ```\n\n2. **Dockerfile**:\n\n   ```dockerfile\n   # 基础镜像\n   FROM node:latest\n   # 作者\n   MAINTAINER linhay \n   # 安装hexo\n   RUN npm install -g hexo-cli\n   # 拉取 <---需要修改--->\n   RUN git clone https://[tocken]@github.com/[you name]/[repo name].git\n   # 切换目录\n   WORKDIR Hexo\n   # 添加权限与安装npm\n   RUN chmod +x /Hexo/ && npm install\n   # 挂载md目录\n   VOLUME [ \"/Hexo/source/_posts\"]\n   # 端口暴露 <---hexo默认4000端口--->\n   EXPOSE 4000\n   # 运行 hexo\n   CMD [\"hexo\",\"server\"]\n   ```\n\n3. **start.sh**\n\n   ```shell\n   # 构建image\n   docker build -t hexo .\n   # 启动容器\n   docker run -d --name hexo -p 9000:9000 -v $PWD/posts:/Hexo/source/_posts hexo\n   # -d 守护态运行\n   # --name 容器别名\n   # -p 端口映射,[宿主机端口:容器端口]\n   # -v 文件挂载,[宿主机绝对路径:容器绝对路径]\n   # hexo: 上面构建的image.\n   ```\n\n4. update.sh\n\n   ```shell\n   # 切换目录\n   cd ~/hexo/posts\n   # 移除更改\n   git checkout .\n   # 拉取仓库更新\n   git pull\n   # 重新生成网站资源\n   docker exec -it hexo hexo d -g\n   ```\n\n\n### 启动!\n\n1. **执行以下sh文件:**\n\n   ```shell\n   cd ~/hexo\n   sh start.sh\n   # 结束就可以访问对应网址了~\n   ```\n\n2. **博客更新**\n\n   ```shell\n   cd ~/hexo\n   sh update.sh\n   # 结束就刷新网站资源了~\n   ```\n\n3. **更新hexo仓库**:\n\n   ```shell\n   #1\n   docker exec -it hexo git pull\n   #2 进入容器\n   docker exec -it hexo /bin/bash\n   git checkout .\n   git pull\n   ```\n\n   ​\n\n\n","source":"_posts/[docker]hexo配置与自动化更新.md","raw":"---\ntitle: hexo配置与自动化更新\ndate: 2018-03-08 \ncategories: [docker]\ntags: [hexo,docker,webhook] \ndescription: 采用docker构建hexo服务.\n---\n\n# hexo配置与自动化更新\n\n- [hexo安装](https://github.com/hexojs/hexo)\n- [hexo-Next主题安装](https://github.com/theme-next/hexo-theme-next)\n- [NexT官网](http://theme-next.iissnan.com/)\n- [Next配置](http://shenzekun.cn/hexo的next主题个性化配置教程.html)\n\n## hexo - docker\n\n### [Docker安装](https://www.docker-cn.com/community-edition)\n\n### Github设置\n\n1. 由于ssh/password方式较为繁琐.以下采用[Github: Personal access tokens](https://github.com/settings/tokens)拉取仓库.\n\n   🐞:\n\n   - Personal access tokens 只会首次出现,注意保存.\n   - Personal access tokens 只需勾选`repo`权限.\n\n2. 仓库划分:\n\n   - 文章仓库: posts\n   - hexo仓库: hexo\n     - 为了保证线上与mac上的环境一致,我将`.gitignore`中`node_modules` 移除.\n\n\n### Ubuntu\n\n1. **文件目录**:\n\n   ```shell\n   .\n   ├── hexo\n   ├── Dockerfile\n   ├── posts\n   │   ├── .git\n   │   ├── LICENSE\n   │   └── xxxx.md\n   ├── update.sh\n   └── start.sh\n   ```\n\n2. **Dockerfile**:\n\n   ```dockerfile\n   # 基础镜像\n   FROM node:latest\n   # 作者\n   MAINTAINER linhay \n   # 安装hexo\n   RUN npm install -g hexo-cli\n   # 拉取 <---需要修改--->\n   RUN git clone https://[tocken]@github.com/[you name]/[repo name].git\n   # 切换目录\n   WORKDIR Hexo\n   # 添加权限与安装npm\n   RUN chmod +x /Hexo/ && npm install\n   # 挂载md目录\n   VOLUME [ \"/Hexo/source/_posts\"]\n   # 端口暴露 <---hexo默认4000端口--->\n   EXPOSE 4000\n   # 运行 hexo\n   CMD [\"hexo\",\"server\"]\n   ```\n\n3. **start.sh**\n\n   ```shell\n   # 构建image\n   docker build -t hexo .\n   # 启动容器\n   docker run -d --name hexo -p 9000:9000 -v $PWD/posts:/Hexo/source/_posts hexo\n   # -d 守护态运行\n   # --name 容器别名\n   # -p 端口映射,[宿主机端口:容器端口]\n   # -v 文件挂载,[宿主机绝对路径:容器绝对路径]\n   # hexo: 上面构建的image.\n   ```\n\n4. update.sh\n\n   ```shell\n   # 切换目录\n   cd ~/hexo/posts\n   # 移除更改\n   git checkout .\n   # 拉取仓库更新\n   git pull\n   # 重新生成网站资源\n   docker exec -it hexo hexo d -g\n   ```\n\n\n### 启动!\n\n1. **执行以下sh文件:**\n\n   ```shell\n   cd ~/hexo\n   sh start.sh\n   # 结束就可以访问对应网址了~\n   ```\n\n2. **博客更新**\n\n   ```shell\n   cd ~/hexo\n   sh update.sh\n   # 结束就刷新网站资源了~\n   ```\n\n3. **更新hexo仓库**:\n\n   ```shell\n   #1\n   docker exec -it hexo git pull\n   #2 进入容器\n   docker exec -it hexo /bin/bash\n   git checkout .\n   git pull\n   ```\n\n   ​\n\n\n","slug":"[docker]hexo配置与自动化更新","published":1,"updated":"2018-07-10T10:35:05.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1ie0006rfz69gxfs4vd","content":"<h1 id=\"hexo配置与自动化更新\"><a href=\"#hexo配置与自动化更新\" class=\"headerlink\" title=\"hexo配置与自动化更新\"></a>hexo配置与自动化更新</h1><ul>\n<li><a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexo安装</a></li>\n<li><a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-Next主题安装</a></li>\n<li><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">NexT官网</a></li>\n<li><a href=\"http://shenzekun.cn/hexo的next主题个性化配置教程.html\" target=\"_blank\" rel=\"noopener\">Next配置</a></li>\n</ul>\n<h2 id=\"hexo-docker\"><a href=\"#hexo-docker\" class=\"headerlink\" title=\"hexo - docker\"></a>hexo - docker</h2><h3 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a><a href=\"https://www.docker-cn.com/community-edition\" target=\"_blank\" rel=\"noopener\">Docker安装</a></h3><h3 id=\"Github设置\"><a href=\"#Github设置\" class=\"headerlink\" title=\"Github设置\"></a>Github设置</h3><ol>\n<li><p>由于ssh/password方式较为繁琐.以下采用<a href=\"https://github.com/settings/tokens\" target=\"_blank\" rel=\"noopener\">Github: Personal access tokens</a>拉取仓库.</p>\n<p>🐞:</p>\n<ul>\n<li>Personal access tokens 只会首次出现,注意保存.</li>\n<li>Personal access tokens 只需勾选<code>repo</code>权限.</li>\n</ul>\n</li>\n<li><p>仓库划分:</p>\n<ul>\n<li>文章仓库: posts</li>\n<li>hexo仓库: hexo<ul>\n<li>为了保证线上与mac上的环境一致,我将<code>.gitignore</code>中<code>node_modules</code> 移除.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><ol>\n<li><p><strong>文件目录</strong>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── hexo</span><br><span class=\"line\">├── Dockerfile</span><br><span class=\"line\">├── posts</span><br><span class=\"line\">│   ├── .git</span><br><span class=\"line\">│   ├── LICENSE</span><br><span class=\"line\">│   └── xxxx.md</span><br><span class=\"line\">├── update.sh</span><br><span class=\"line\">└── start.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Dockerfile</strong>:</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 基础镜像</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:latest</span><br><span class=\"line\"><span class=\"comment\"># 作者</span></span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> linhay </span><br><span class=\"line\"><span class=\"comment\"># 安装hexo</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span> npm install -g hexo-cli</span><br><span class=\"line\"># 拉取 &lt;---需要修改---&gt;</span><br><span class=\"line\">RUN git clone https://[tocken]@github.com/[you name]/[repo name].git</span><br><span class=\"line\"># 切换目录</span><br><span class=\"line\">WORKDIR Hexo</span><br><span class=\"line\"># 添加权限与安装npm</span><br><span class=\"line\">RUN chmod +x /Hexo/ &amp;&amp; npm install</span><br><span class=\"line\"># 挂载md目录</span><br><span class=\"line\">VOLUME [ \"/Hexo/source/_posts\"]</span><br><span class=\"line\"># 端口暴露 &lt;---hexo默认4000端口---&gt;</span><br><span class=\"line\">EXPOSE 4000</span><br><span class=\"line\"># 运行 hexo</span><br><span class=\"line\">CMD [\"hexo\",\"server\"]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>start.sh</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 构建image</span><br><span class=\"line\">docker build -t hexo .</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动容器</span><br><span class=\"line\">docker run -d --name hexo -p 9000:9000 -v $PWD/posts:/Hexo/source/_posts hexo</span><br><span class=\"line\"><span class=\"meta\">#</span> -d 守护态运行</span><br><span class=\"line\"><span class=\"meta\">#</span> --name 容器别名</span><br><span class=\"line\"><span class=\"meta\">#</span> -p 端口映射,[宿主机端口:容器端口]</span><br><span class=\"line\"><span class=\"meta\">#</span> -v 文件挂载,[宿主机绝对路径:容器绝对路径]</span><br><span class=\"line\"><span class=\"meta\">#</span> hexo: 上面构建的image.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>update.sh</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 切换目录</span><br><span class=\"line\">cd ~/hexo/posts</span><br><span class=\"line\"><span class=\"meta\">#</span> 移除更改</span><br><span class=\"line\">git checkout .</span><br><span class=\"line\"><span class=\"meta\">#</span> 拉取仓库更新</span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"meta\">#</span> 重新生成网站资源</span><br><span class=\"line\">docker exec -it hexo hexo d -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动!\"></a>启动!</h3><ol>\n<li><p><strong>执行以下sh文件:</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/hexo</span><br><span class=\"line\">sh start.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 结束就可以访问对应网址了~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>博客更新</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/hexo</span><br><span class=\"line\">sh update.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 结束就刷新网站资源了~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>更新hexo仓库</strong>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1</span><br><span class=\"line\">docker exec -it hexo git pull</span><br><span class=\"line\"><span class=\"meta\">#</span>2 进入容器</span><br><span class=\"line\">docker exec -it hexo /bin/bash</span><br><span class=\"line\">git checkout .</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"hexo配置与自动化更新\"><a href=\"#hexo配置与自动化更新\" class=\"headerlink\" title=\"hexo配置与自动化更新\"></a>hexo配置与自动化更新</h1><ul>\n<li><a href=\"https://github.com/hexojs/hexo\" target=\"_blank\" rel=\"noopener\">hexo安装</a></li>\n<li><a href=\"https://github.com/theme-next/hexo-theme-next\" target=\"_blank\" rel=\"noopener\">hexo-Next主题安装</a></li>\n<li><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\">NexT官网</a></li>\n<li><a href=\"http://shenzekun.cn/hexo的next主题个性化配置教程.html\" target=\"_blank\" rel=\"noopener\">Next配置</a></li>\n</ul>\n<h2 id=\"hexo-docker\"><a href=\"#hexo-docker\" class=\"headerlink\" title=\"hexo - docker\"></a>hexo - docker</h2><h3 id=\"Docker安装\"><a href=\"#Docker安装\" class=\"headerlink\" title=\"Docker安装\"></a><a href=\"https://www.docker-cn.com/community-edition\" target=\"_blank\" rel=\"noopener\">Docker安装</a></h3><h3 id=\"Github设置\"><a href=\"#Github设置\" class=\"headerlink\" title=\"Github设置\"></a>Github设置</h3><ol>\n<li><p>由于ssh/password方式较为繁琐.以下采用<a href=\"https://github.com/settings/tokens\" target=\"_blank\" rel=\"noopener\">Github: Personal access tokens</a>拉取仓库.</p>\n<p>🐞:</p>\n<ul>\n<li>Personal access tokens 只会首次出现,注意保存.</li>\n<li>Personal access tokens 只需勾选<code>repo</code>权限.</li>\n</ul>\n</li>\n<li><p>仓库划分:</p>\n<ul>\n<li>文章仓库: posts</li>\n<li>hexo仓库: hexo<ul>\n<li>为了保证线上与mac上的环境一致,我将<code>.gitignore</code>中<code>node_modules</code> 移除.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"Ubuntu\"><a href=\"#Ubuntu\" class=\"headerlink\" title=\"Ubuntu\"></a>Ubuntu</h3><ol>\n<li><p><strong>文件目录</strong>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── hexo</span><br><span class=\"line\">├── Dockerfile</span><br><span class=\"line\">├── posts</span><br><span class=\"line\">│   ├── .git</span><br><span class=\"line\">│   ├── LICENSE</span><br><span class=\"line\">│   └── xxxx.md</span><br><span class=\"line\">├── update.sh</span><br><span class=\"line\">└── start.sh</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>Dockerfile</strong>:</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 基础镜像</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> node:latest</span><br><span class=\"line\"><span class=\"comment\"># 作者</span></span><br><span class=\"line\"><span class=\"keyword\">MAINTAINER</span> linhay </span><br><span class=\"line\"><span class=\"comment\"># 安装hexo</span></span><br><span class=\"line\"><span class=\"keyword\">RUN</span> npm install -g hexo-cli</span><br><span class=\"line\"># 拉取 &lt;---需要修改---&gt;</span><br><span class=\"line\">RUN git clone https://[tocken]@github.com/[you name]/[repo name].git</span><br><span class=\"line\"># 切换目录</span><br><span class=\"line\">WORKDIR Hexo</span><br><span class=\"line\"># 添加权限与安装npm</span><br><span class=\"line\">RUN chmod +x /Hexo/ &amp;&amp; npm install</span><br><span class=\"line\"># 挂载md目录</span><br><span class=\"line\">VOLUME [ \"/Hexo/source/_posts\"]</span><br><span class=\"line\"># 端口暴露 &lt;---hexo默认4000端口---&gt;</span><br><span class=\"line\">EXPOSE 4000</span><br><span class=\"line\"># 运行 hexo</span><br><span class=\"line\">CMD [\"hexo\",\"server\"]</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>start.sh</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 构建image</span><br><span class=\"line\">docker build -t hexo .</span><br><span class=\"line\"><span class=\"meta\">#</span> 启动容器</span><br><span class=\"line\">docker run -d --name hexo -p 9000:9000 -v $PWD/posts:/Hexo/source/_posts hexo</span><br><span class=\"line\"><span class=\"meta\">#</span> -d 守护态运行</span><br><span class=\"line\"><span class=\"meta\">#</span> --name 容器别名</span><br><span class=\"line\"><span class=\"meta\">#</span> -p 端口映射,[宿主机端口:容器端口]</span><br><span class=\"line\"><span class=\"meta\">#</span> -v 文件挂载,[宿主机绝对路径:容器绝对路径]</span><br><span class=\"line\"><span class=\"meta\">#</span> hexo: 上面构建的image.</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>update.sh</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 切换目录</span><br><span class=\"line\">cd ~/hexo/posts</span><br><span class=\"line\"><span class=\"meta\">#</span> 移除更改</span><br><span class=\"line\">git checkout .</span><br><span class=\"line\"><span class=\"meta\">#</span> 拉取仓库更新</span><br><span class=\"line\">git pull</span><br><span class=\"line\"><span class=\"meta\">#</span> 重新生成网站资源</span><br><span class=\"line\">docker exec -it hexo hexo d -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动!\"></a>启动!</h3><ol>\n<li><p><strong>执行以下sh文件:</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/hexo</span><br><span class=\"line\">sh start.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 结束就可以访问对应网址了~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>博客更新</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd ~/hexo</span><br><span class=\"line\">sh update.sh</span><br><span class=\"line\"><span class=\"meta\">#</span> 结束就刷新网站资源了~</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>更新hexo仓库</strong>:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span>1</span><br><span class=\"line\">docker exec -it hexo git pull</span><br><span class=\"line\"><span class=\"meta\">#</span>2 进入容器</span><br><span class=\"line\">docker exec -it hexo /bin/bash</span><br><span class=\"line\">git checkout .</span><br><span class=\"line\">git pull</span><br></pre></td></tr></table></figure>\n<p>​</p>\n</li>\n</ol>\n"},{"title":"runtime-API的速查手册","date":"2016-12-31T16:00:00.000Z","description":"runtime-API的速查手册","_content":"\n# runtime-API的速查手册\n\n#### 目录\n\n- objc_\n- class_\n- object_\n- method_\n- property_\n- protocol_\n- ivar_ ,sel_ ,imp_\n\n#### 1.objc_xxx 系列函数\n\n  objc_ 系列函数关注于宏观使用,如类与协议的空间分配,注册,注销等操作\n\n|函数名称             |      函数作用|\n| ---------------- | ------------- |\n| objc_getClass        |     获取Class对象|\n| objc_getProtocol     |     获取某个协议|\n| objc_getMetaClass\t|\t\t获取MetaClass对象|\n| objc_copyProtocolList   |  拷贝在运行时中注册过的协议列表|\n| objc_allocateClassPair   | 分配空间,创建类(仅在 创建之后,注册之前 能够添加成员变量)|\n|  objc_registerClassPair   | 注册一个类(注册后方可使用该类创建对象)|\n| objc_disposeClassPair   | 注销某个类|\n| objc_allocateProtocol | 开辟空间创建协议|\n| objc_registerProtocol  |注册一个协议|\n| objc_constructInstance  |  构造一个实例对象(ARC下无效)|\n| objc_destructInstance | 析构一个实例对象(ARC下无效)|\n| objc_setAssociatedObject | 为实例对象关联对象|\n| objc_getAssociatedObject  |获取实例对象的关联对象|\n| objc_removeAssociatedObjects  |清空实例对象的所有关联对象|\n| objc_msgSend   | 发送ObjC消息|\n\n#### 2.class_xxx 系列函数\n  class_系列函数关注于类的内部,如实例变量,属性,方法,协议等相关问题\n\n|函数名称            |       函数作用|\n| ---------------- | ------------- |\n|  class_addIvar   |  为类添加实例变量|\n|  class_addProperty |为类添加属性|\n| class_addMethod   |  为类添加方法|\n|  class_addProtocol |为类遵循协议|\n|  class_replaceMethod | 替换类某方法的实现|\n|  class_getName   |  获取类名|\n|  class_isMetaClass |判断是否为元类|\n|  class_getSuperclass   |获取某类的父类|\n| class_setSuperclass  | 设置某类的父类|\n| class_getProperty  | 获取某类的属性|\n|  class_getInstanceVariable  |获取实例变量|\n|  class_getClassVariable     |获取类变量|\n| class_getInstanceMethod|   获取实例方法|\n| class_getClassMethod |    获取类方法|\n|  class_getMethodImplementation| 获取方法的实现|\n| class_getInstanceSize    |获取类的实例的大小|\n| class_respondsToSelector  |判断类是否实现某方法|\n|  class_conformsToProtocol |判断类是否遵循某协议|\n| class_createInstance|  创建类的实例|\n| class_copyIvarList |     拷贝类的实例变量列表|\n| class_copyMethodList  |拷贝类的方法列表|\n| class_copyProtocolList   | 拷贝类遵循的协议列表|\n| class_copyPropertyList  |  拷贝类的属性列表|\n\n#### 3.object_xxx 系列函数\n\n  objcet_系列函数关注于对象的角度,如实例变量\n\n| 函数名称  |      函数作用 |\n| ---------------- | ------------- |\n|object_copy    |  对象copy(ARC无效) |\n| object_dispose   | 对象释放(ARC无效) |\n| object_getClassName  |  获取对象的类名 |\n| object_getClass  | 获取对象的Class |\n| object_setClass |  设置对象的Class |\n| object_getIvar  |  获取对象中实例变量的值 |\n| object_setIvar |   设置对象中实例变量的值 |\n| object_getInstanceVariable    | 获取对象中实例变量的值 (ARC中无效,使用object_getIvar) |\n| object_setInstanceVariable    | 设置对象中实例变量的值 (ARC中无效,使用object_setIvar) |\n\n#### 4.method_xxx 系列函数\n\n  method_系列函数关注于方法内部,如果方法的参数及返回值类型和方法的实现\n\n| 函数名称       |   函数作用|\n| ---------------- | ------------- |\n| method_getName   |  获取方法名|\n| method_getImplementation |   获取方法的实现|\n| method_getTypeEncoding   |   获取方法的类型编码|\n| method_getNumberOfArguments  | 获取方法的参数个数|\n| method_copyReturnType| 拷贝方法的返回类型|\n| method_getReturnType |  获取方法的返回类型|\n| method_copyArgumentType | 拷贝方法的参数类型|\n| method_getArgumentType |  获取方法的参数类型|\n| method_getDescription| 获取方法的描述|\n| method_setImplementation |设置方法的实现|\n| method_exchangeImplementations | 替换方法的实现|\n\n#### 5.property_xxx 系列函数\n\nproperty_系类函数关注与属性*内部,如属性的特性等\n\n|函数名称      |      函数作用|\n| ---------------- | ------------- |\n|property_getName |  获取属性名|\n|property_getAttributes |   获取属性的特性列表|\n|property_copyAttributeList    |拷贝属性的特性列表|\n|property_copyAttributeValue  | 拷贝属性中某特性的值|\n\n#### 6.protocol_xxx 系列函数\n\n|函数名称       |   函数作用|\n| ---------------- | ------------- |\n| protocol_conformsToProtocol  | 判断一个协议是否遵循另一个协议|\n|  protocol_isEqual  |判断两个协议是否一致|\n|  protocol_getName  |获取协议名称|\n|  protocol_copyPropertyList| 拷贝协议的属性列表|\n|  protocol_copyProtocolList| 拷贝某协议所遵循的协议列表|\n|  protocol_copyMethodDescriptionList    |拷贝协议的方法列表|\n|  protocol_addProtocol  |为一个协议遵循另一协议|\n| protocol_addProperty  |为协议添加属性|\n|  protocol_getProperty  |获取协议中的某个属性|\n| protocol_addMethodDescription| 为协议添加方法描述|\n| protocol_getMethodDescription|获取协议中某方法的描述|\n\n#### 7.ivar_xxx 系列函数\n\n| 函数名称    |    函数作用|\n| ---------------- | ------------- |\n| ivar_getName   |  获取Ivar名称|\n| ivar_getTypeEncoding | 获取类型编码|\n| ivar_getOffset |  获取偏移量|\n\n#### 8.sel_xxx 系列函数\n\n|函数名称  |    函数作用|\n| ---------------- | ------------- |\n| sel_getName  | 获取名称|\n| sel_getUid    | 注册方法|\n| sel_registerName | 注册方法|\n| sel_isEqual |  判断方法是否相等|\n\n#### 9.imp_xxx 系列函数\n\n|函数名称         |   函数作用|\n| ---------------- | ------------- |\n|imp_implementationWithBlock  | 通过代码块创建IMP|\n|imp_getBlock | 获取函数指针中的代码块|\n|imp_removeBlock |  移除IMP中的代码块|\n\n \n\n \n\n \n\n \n\n ","source":"_posts/[iOS]Runtime-API的速查手册.md","raw":"---\ntitle: runtime-API的速查手册\ndate: 2017-01-01\ncategories: [ios]\ntags: [ios,Runtime,api]\ndescription: runtime-API的速查手册\n---\n\n# runtime-API的速查手册\n\n#### 目录\n\n- objc_\n- class_\n- object_\n- method_\n- property_\n- protocol_\n- ivar_ ,sel_ ,imp_\n\n#### 1.objc_xxx 系列函数\n\n  objc_ 系列函数关注于宏观使用,如类与协议的空间分配,注册,注销等操作\n\n|函数名称             |      函数作用|\n| ---------------- | ------------- |\n| objc_getClass        |     获取Class对象|\n| objc_getProtocol     |     获取某个协议|\n| objc_getMetaClass\t|\t\t获取MetaClass对象|\n| objc_copyProtocolList   |  拷贝在运行时中注册过的协议列表|\n| objc_allocateClassPair   | 分配空间,创建类(仅在 创建之后,注册之前 能够添加成员变量)|\n|  objc_registerClassPair   | 注册一个类(注册后方可使用该类创建对象)|\n| objc_disposeClassPair   | 注销某个类|\n| objc_allocateProtocol | 开辟空间创建协议|\n| objc_registerProtocol  |注册一个协议|\n| objc_constructInstance  |  构造一个实例对象(ARC下无效)|\n| objc_destructInstance | 析构一个实例对象(ARC下无效)|\n| objc_setAssociatedObject | 为实例对象关联对象|\n| objc_getAssociatedObject  |获取实例对象的关联对象|\n| objc_removeAssociatedObjects  |清空实例对象的所有关联对象|\n| objc_msgSend   | 发送ObjC消息|\n\n#### 2.class_xxx 系列函数\n  class_系列函数关注于类的内部,如实例变量,属性,方法,协议等相关问题\n\n|函数名称            |       函数作用|\n| ---------------- | ------------- |\n|  class_addIvar   |  为类添加实例变量|\n|  class_addProperty |为类添加属性|\n| class_addMethod   |  为类添加方法|\n|  class_addProtocol |为类遵循协议|\n|  class_replaceMethod | 替换类某方法的实现|\n|  class_getName   |  获取类名|\n|  class_isMetaClass |判断是否为元类|\n|  class_getSuperclass   |获取某类的父类|\n| class_setSuperclass  | 设置某类的父类|\n| class_getProperty  | 获取某类的属性|\n|  class_getInstanceVariable  |获取实例变量|\n|  class_getClassVariable     |获取类变量|\n| class_getInstanceMethod|   获取实例方法|\n| class_getClassMethod |    获取类方法|\n|  class_getMethodImplementation| 获取方法的实现|\n| class_getInstanceSize    |获取类的实例的大小|\n| class_respondsToSelector  |判断类是否实现某方法|\n|  class_conformsToProtocol |判断类是否遵循某协议|\n| class_createInstance|  创建类的实例|\n| class_copyIvarList |     拷贝类的实例变量列表|\n| class_copyMethodList  |拷贝类的方法列表|\n| class_copyProtocolList   | 拷贝类遵循的协议列表|\n| class_copyPropertyList  |  拷贝类的属性列表|\n\n#### 3.object_xxx 系列函数\n\n  objcet_系列函数关注于对象的角度,如实例变量\n\n| 函数名称  |      函数作用 |\n| ---------------- | ------------- |\n|object_copy    |  对象copy(ARC无效) |\n| object_dispose   | 对象释放(ARC无效) |\n| object_getClassName  |  获取对象的类名 |\n| object_getClass  | 获取对象的Class |\n| object_setClass |  设置对象的Class |\n| object_getIvar  |  获取对象中实例变量的值 |\n| object_setIvar |   设置对象中实例变量的值 |\n| object_getInstanceVariable    | 获取对象中实例变量的值 (ARC中无效,使用object_getIvar) |\n| object_setInstanceVariable    | 设置对象中实例变量的值 (ARC中无效,使用object_setIvar) |\n\n#### 4.method_xxx 系列函数\n\n  method_系列函数关注于方法内部,如果方法的参数及返回值类型和方法的实现\n\n| 函数名称       |   函数作用|\n| ---------------- | ------------- |\n| method_getName   |  获取方法名|\n| method_getImplementation |   获取方法的实现|\n| method_getTypeEncoding   |   获取方法的类型编码|\n| method_getNumberOfArguments  | 获取方法的参数个数|\n| method_copyReturnType| 拷贝方法的返回类型|\n| method_getReturnType |  获取方法的返回类型|\n| method_copyArgumentType | 拷贝方法的参数类型|\n| method_getArgumentType |  获取方法的参数类型|\n| method_getDescription| 获取方法的描述|\n| method_setImplementation |设置方法的实现|\n| method_exchangeImplementations | 替换方法的实现|\n\n#### 5.property_xxx 系列函数\n\nproperty_系类函数关注与属性*内部,如属性的特性等\n\n|函数名称      |      函数作用|\n| ---------------- | ------------- |\n|property_getName |  获取属性名|\n|property_getAttributes |   获取属性的特性列表|\n|property_copyAttributeList    |拷贝属性的特性列表|\n|property_copyAttributeValue  | 拷贝属性中某特性的值|\n\n#### 6.protocol_xxx 系列函数\n\n|函数名称       |   函数作用|\n| ---------------- | ------------- |\n| protocol_conformsToProtocol  | 判断一个协议是否遵循另一个协议|\n|  protocol_isEqual  |判断两个协议是否一致|\n|  protocol_getName  |获取协议名称|\n|  protocol_copyPropertyList| 拷贝协议的属性列表|\n|  protocol_copyProtocolList| 拷贝某协议所遵循的协议列表|\n|  protocol_copyMethodDescriptionList    |拷贝协议的方法列表|\n|  protocol_addProtocol  |为一个协议遵循另一协议|\n| protocol_addProperty  |为协议添加属性|\n|  protocol_getProperty  |获取协议中的某个属性|\n| protocol_addMethodDescription| 为协议添加方法描述|\n| protocol_getMethodDescription|获取协议中某方法的描述|\n\n#### 7.ivar_xxx 系列函数\n\n| 函数名称    |    函数作用|\n| ---------------- | ------------- |\n| ivar_getName   |  获取Ivar名称|\n| ivar_getTypeEncoding | 获取类型编码|\n| ivar_getOffset |  获取偏移量|\n\n#### 8.sel_xxx 系列函数\n\n|函数名称  |    函数作用|\n| ---------------- | ------------- |\n| sel_getName  | 获取名称|\n| sel_getUid    | 注册方法|\n| sel_registerName | 注册方法|\n| sel_isEqual |  判断方法是否相等|\n\n#### 9.imp_xxx 系列函数\n\n|函数名称         |   函数作用|\n| ---------------- | ------------- |\n|imp_implementationWithBlock  | 通过代码块创建IMP|\n|imp_getBlock | 获取函数指针中的代码块|\n|imp_removeBlock |  移除IMP中的代码块|\n\n \n\n \n\n \n\n \n\n ","slug":"[iOS]Runtime-API的速查手册","published":1,"updated":"2018-07-10T10:31:10.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1ii0008rfz6scdk253o","content":"<h1 id=\"runtime-API的速查手册\"><a href=\"#runtime-API的速查手册\" class=\"headerlink\" title=\"runtime-API的速查手册\"></a>runtime-API的速查手册</h1><h4 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h4><ul>\n<li>objc_</li>\n<li>class_</li>\n<li>object_</li>\n<li>method_</li>\n<li>property_</li>\n<li>protocol_</li>\n<li>ivar_ ,sel_ ,imp_</li>\n</ul>\n<h4 id=\"1-objc-xxx-系列函数\"><a href=\"#1-objc-xxx-系列函数\" class=\"headerlink\" title=\"1.objc_xxx 系列函数\"></a>1.objc_xxx 系列函数</h4><p>  objc_ 系列函数关注于宏观使用,如类与协议的空间分配,注册,注销等操作</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>objc_getClass</td>\n<td>获取Class对象</td>\n</tr>\n<tr>\n<td>objc_getProtocol</td>\n<td>获取某个协议</td>\n</tr>\n<tr>\n<td>objc_getMetaClass</td>\n<td>获取MetaClass对象</td>\n</tr>\n<tr>\n<td>objc_copyProtocolList</td>\n<td>拷贝在运行时中注册过的协议列表</td>\n</tr>\n<tr>\n<td>objc_allocateClassPair</td>\n<td>分配空间,创建类(仅在 创建之后,注册之前 能够添加成员变量)</td>\n</tr>\n<tr>\n<td>objc_registerClassPair</td>\n<td>注册一个类(注册后方可使用该类创建对象)</td>\n</tr>\n<tr>\n<td>objc_disposeClassPair</td>\n<td>注销某个类</td>\n</tr>\n<tr>\n<td>objc_allocateProtocol</td>\n<td>开辟空间创建协议</td>\n</tr>\n<tr>\n<td>objc_registerProtocol</td>\n<td>注册一个协议</td>\n</tr>\n<tr>\n<td>objc_constructInstance</td>\n<td>构造一个实例对象(ARC下无效)</td>\n</tr>\n<tr>\n<td>objc_destructInstance</td>\n<td>析构一个实例对象(ARC下无效)</td>\n</tr>\n<tr>\n<td>objc_setAssociatedObject</td>\n<td>为实例对象关联对象</td>\n</tr>\n<tr>\n<td>objc_getAssociatedObject</td>\n<td>获取实例对象的关联对象</td>\n</tr>\n<tr>\n<td>objc_removeAssociatedObjects</td>\n<td>清空实例对象的所有关联对象</td>\n</tr>\n<tr>\n<td>objc_msgSend</td>\n<td>发送ObjC消息</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2-class-xxx-系列函数\"><a href=\"#2-class-xxx-系列函数\" class=\"headerlink\" title=\"2.class_xxx 系列函数\"></a>2.class_xxx 系列函数</h4><p>  class_系列函数关注于类的内部,如实例变量,属性,方法,协议等相关问题</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>class_addIvar</td>\n<td>为类添加实例变量</td>\n</tr>\n<tr>\n<td>class_addProperty</td>\n<td>为类添加属性</td>\n</tr>\n<tr>\n<td>class_addMethod</td>\n<td>为类添加方法</td>\n</tr>\n<tr>\n<td>class_addProtocol</td>\n<td>为类遵循协议</td>\n</tr>\n<tr>\n<td>class_replaceMethod</td>\n<td>替换类某方法的实现</td>\n</tr>\n<tr>\n<td>class_getName</td>\n<td>获取类名</td>\n</tr>\n<tr>\n<td>class_isMetaClass</td>\n<td>判断是否为元类</td>\n</tr>\n<tr>\n<td>class_getSuperclass</td>\n<td>获取某类的父类</td>\n</tr>\n<tr>\n<td>class_setSuperclass</td>\n<td>设置某类的父类</td>\n</tr>\n<tr>\n<td>class_getProperty</td>\n<td>获取某类的属性</td>\n</tr>\n<tr>\n<td>class_getInstanceVariable</td>\n<td>获取实例变量</td>\n</tr>\n<tr>\n<td>class_getClassVariable</td>\n<td>获取类变量</td>\n</tr>\n<tr>\n<td>class_getInstanceMethod</td>\n<td>获取实例方法</td>\n</tr>\n<tr>\n<td>class_getClassMethod</td>\n<td>获取类方法</td>\n</tr>\n<tr>\n<td>class_getMethodImplementation</td>\n<td>获取方法的实现</td>\n</tr>\n<tr>\n<td>class_getInstanceSize</td>\n<td>获取类的实例的大小</td>\n</tr>\n<tr>\n<td>class_respondsToSelector</td>\n<td>判断类是否实现某方法</td>\n</tr>\n<tr>\n<td>class_conformsToProtocol</td>\n<td>判断类是否遵循某协议</td>\n</tr>\n<tr>\n<td>class_createInstance</td>\n<td>创建类的实例</td>\n</tr>\n<tr>\n<td>class_copyIvarList</td>\n<td>拷贝类的实例变量列表</td>\n</tr>\n<tr>\n<td>class_copyMethodList</td>\n<td>拷贝类的方法列表</td>\n</tr>\n<tr>\n<td>class_copyProtocolList</td>\n<td>拷贝类遵循的协议列表</td>\n</tr>\n<tr>\n<td>class_copyPropertyList</td>\n<td>拷贝类的属性列表</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"3-object-xxx-系列函数\"><a href=\"#3-object-xxx-系列函数\" class=\"headerlink\" title=\"3.object_xxx 系列函数\"></a>3.object_xxx 系列函数</h4><p>  objcet_系列函数关注于对象的角度,如实例变量</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>object_copy</td>\n<td>对象copy(ARC无效)</td>\n</tr>\n<tr>\n<td>object_dispose</td>\n<td>对象释放(ARC无效)</td>\n</tr>\n<tr>\n<td>object_getClassName</td>\n<td>获取对象的类名</td>\n</tr>\n<tr>\n<td>object_getClass</td>\n<td>获取对象的Class</td>\n</tr>\n<tr>\n<td>object_setClass</td>\n<td>设置对象的Class</td>\n</tr>\n<tr>\n<td>object_getIvar</td>\n<td>获取对象中实例变量的值</td>\n</tr>\n<tr>\n<td>object_setIvar</td>\n<td>设置对象中实例变量的值</td>\n</tr>\n<tr>\n<td>object_getInstanceVariable</td>\n<td>获取对象中实例变量的值 (ARC中无效,使用object_getIvar)</td>\n</tr>\n<tr>\n<td>object_setInstanceVariable</td>\n<td>设置对象中实例变量的值 (ARC中无效,使用object_setIvar)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"4-method-xxx-系列函数\"><a href=\"#4-method-xxx-系列函数\" class=\"headerlink\" title=\"4.method_xxx 系列函数\"></a>4.method_xxx 系列函数</h4><p>  method_系列函数关注于方法内部,如果方法的参数及返回值类型和方法的实现</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>method_getName</td>\n<td>获取方法名</td>\n</tr>\n<tr>\n<td>method_getImplementation</td>\n<td>获取方法的实现</td>\n</tr>\n<tr>\n<td>method_getTypeEncoding</td>\n<td>获取方法的类型编码</td>\n</tr>\n<tr>\n<td>method_getNumberOfArguments</td>\n<td>获取方法的参数个数</td>\n</tr>\n<tr>\n<td>method_copyReturnType</td>\n<td>拷贝方法的返回类型</td>\n</tr>\n<tr>\n<td>method_getReturnType</td>\n<td>获取方法的返回类型</td>\n</tr>\n<tr>\n<td>method_copyArgumentType</td>\n<td>拷贝方法的参数类型</td>\n</tr>\n<tr>\n<td>method_getArgumentType</td>\n<td>获取方法的参数类型</td>\n</tr>\n<tr>\n<td>method_getDescription</td>\n<td>获取方法的描述</td>\n</tr>\n<tr>\n<td>method_setImplementation</td>\n<td>设置方法的实现</td>\n</tr>\n<tr>\n<td>method_exchangeImplementations</td>\n<td>替换方法的实现</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"5-property-xxx-系列函数\"><a href=\"#5-property-xxx-系列函数\" class=\"headerlink\" title=\"5.property_xxx 系列函数\"></a>5.property_xxx 系列函数</h4><p>property_系类函数关注与属性*内部,如属性的特性等</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>property_getName</td>\n<td>获取属性名</td>\n</tr>\n<tr>\n<td>property_getAttributes</td>\n<td>获取属性的特性列表</td>\n</tr>\n<tr>\n<td>property_copyAttributeList</td>\n<td>拷贝属性的特性列表</td>\n</tr>\n<tr>\n<td>property_copyAttributeValue</td>\n<td>拷贝属性中某特性的值</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"6-protocol-xxx-系列函数\"><a href=\"#6-protocol-xxx-系列函数\" class=\"headerlink\" title=\"6.protocol_xxx 系列函数\"></a>6.protocol_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocol_conformsToProtocol</td>\n<td>判断一个协议是否遵循另一个协议</td>\n</tr>\n<tr>\n<td>protocol_isEqual</td>\n<td>判断两个协议是否一致</td>\n</tr>\n<tr>\n<td>protocol_getName</td>\n<td>获取协议名称</td>\n</tr>\n<tr>\n<td>protocol_copyPropertyList</td>\n<td>拷贝协议的属性列表</td>\n</tr>\n<tr>\n<td>protocol_copyProtocolList</td>\n<td>拷贝某协议所遵循的协议列表</td>\n</tr>\n<tr>\n<td>protocol_copyMethodDescriptionList</td>\n<td>拷贝协议的方法列表</td>\n</tr>\n<tr>\n<td>protocol_addProtocol</td>\n<td>为一个协议遵循另一协议</td>\n</tr>\n<tr>\n<td>protocol_addProperty</td>\n<td>为协议添加属性</td>\n</tr>\n<tr>\n<td>protocol_getProperty</td>\n<td>获取协议中的某个属性</td>\n</tr>\n<tr>\n<td>protocol_addMethodDescription</td>\n<td>为协议添加方法描述</td>\n</tr>\n<tr>\n<td>protocol_getMethodDescription</td>\n<td>获取协议中某方法的描述</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"7-ivar-xxx-系列函数\"><a href=\"#7-ivar-xxx-系列函数\" class=\"headerlink\" title=\"7.ivar_xxx 系列函数\"></a>7.ivar_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ivar_getName</td>\n<td>获取Ivar名称</td>\n</tr>\n<tr>\n<td>ivar_getTypeEncoding</td>\n<td>获取类型编码</td>\n</tr>\n<tr>\n<td>ivar_getOffset</td>\n<td>获取偏移量</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"8-sel-xxx-系列函数\"><a href=\"#8-sel-xxx-系列函数\" class=\"headerlink\" title=\"8.sel_xxx 系列函数\"></a>8.sel_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sel_getName</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td>sel_getUid</td>\n<td>注册方法</td>\n</tr>\n<tr>\n<td>sel_registerName</td>\n<td>注册方法</td>\n</tr>\n<tr>\n<td>sel_isEqual</td>\n<td>判断方法是否相等</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"9-imp-xxx-系列函数\"><a href=\"#9-imp-xxx-系列函数\" class=\"headerlink\" title=\"9.imp_xxx 系列函数\"></a>9.imp_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>imp_implementationWithBlock</td>\n<td>通过代码块创建IMP</td>\n</tr>\n<tr>\n<td>imp_getBlock</td>\n<td>获取函数指针中的代码块</td>\n</tr>\n<tr>\n<td>imp_removeBlock</td>\n<td>移除IMP中的代码块</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"runtime-API的速查手册\"><a href=\"#runtime-API的速查手册\" class=\"headerlink\" title=\"runtime-API的速查手册\"></a>runtime-API的速查手册</h1><h4 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h4><ul>\n<li>objc_</li>\n<li>class_</li>\n<li>object_</li>\n<li>method_</li>\n<li>property_</li>\n<li>protocol_</li>\n<li>ivar_ ,sel_ ,imp_</li>\n</ul>\n<h4 id=\"1-objc-xxx-系列函数\"><a href=\"#1-objc-xxx-系列函数\" class=\"headerlink\" title=\"1.objc_xxx 系列函数\"></a>1.objc_xxx 系列函数</h4><p>  objc_ 系列函数关注于宏观使用,如类与协议的空间分配,注册,注销等操作</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>objc_getClass</td>\n<td>获取Class对象</td>\n</tr>\n<tr>\n<td>objc_getProtocol</td>\n<td>获取某个协议</td>\n</tr>\n<tr>\n<td>objc_getMetaClass</td>\n<td>获取MetaClass对象</td>\n</tr>\n<tr>\n<td>objc_copyProtocolList</td>\n<td>拷贝在运行时中注册过的协议列表</td>\n</tr>\n<tr>\n<td>objc_allocateClassPair</td>\n<td>分配空间,创建类(仅在 创建之后,注册之前 能够添加成员变量)</td>\n</tr>\n<tr>\n<td>objc_registerClassPair</td>\n<td>注册一个类(注册后方可使用该类创建对象)</td>\n</tr>\n<tr>\n<td>objc_disposeClassPair</td>\n<td>注销某个类</td>\n</tr>\n<tr>\n<td>objc_allocateProtocol</td>\n<td>开辟空间创建协议</td>\n</tr>\n<tr>\n<td>objc_registerProtocol</td>\n<td>注册一个协议</td>\n</tr>\n<tr>\n<td>objc_constructInstance</td>\n<td>构造一个实例对象(ARC下无效)</td>\n</tr>\n<tr>\n<td>objc_destructInstance</td>\n<td>析构一个实例对象(ARC下无效)</td>\n</tr>\n<tr>\n<td>objc_setAssociatedObject</td>\n<td>为实例对象关联对象</td>\n</tr>\n<tr>\n<td>objc_getAssociatedObject</td>\n<td>获取实例对象的关联对象</td>\n</tr>\n<tr>\n<td>objc_removeAssociatedObjects</td>\n<td>清空实例对象的所有关联对象</td>\n</tr>\n<tr>\n<td>objc_msgSend</td>\n<td>发送ObjC消息</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2-class-xxx-系列函数\"><a href=\"#2-class-xxx-系列函数\" class=\"headerlink\" title=\"2.class_xxx 系列函数\"></a>2.class_xxx 系列函数</h4><p>  class_系列函数关注于类的内部,如实例变量,属性,方法,协议等相关问题</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>class_addIvar</td>\n<td>为类添加实例变量</td>\n</tr>\n<tr>\n<td>class_addProperty</td>\n<td>为类添加属性</td>\n</tr>\n<tr>\n<td>class_addMethod</td>\n<td>为类添加方法</td>\n</tr>\n<tr>\n<td>class_addProtocol</td>\n<td>为类遵循协议</td>\n</tr>\n<tr>\n<td>class_replaceMethod</td>\n<td>替换类某方法的实现</td>\n</tr>\n<tr>\n<td>class_getName</td>\n<td>获取类名</td>\n</tr>\n<tr>\n<td>class_isMetaClass</td>\n<td>判断是否为元类</td>\n</tr>\n<tr>\n<td>class_getSuperclass</td>\n<td>获取某类的父类</td>\n</tr>\n<tr>\n<td>class_setSuperclass</td>\n<td>设置某类的父类</td>\n</tr>\n<tr>\n<td>class_getProperty</td>\n<td>获取某类的属性</td>\n</tr>\n<tr>\n<td>class_getInstanceVariable</td>\n<td>获取实例变量</td>\n</tr>\n<tr>\n<td>class_getClassVariable</td>\n<td>获取类变量</td>\n</tr>\n<tr>\n<td>class_getInstanceMethod</td>\n<td>获取实例方法</td>\n</tr>\n<tr>\n<td>class_getClassMethod</td>\n<td>获取类方法</td>\n</tr>\n<tr>\n<td>class_getMethodImplementation</td>\n<td>获取方法的实现</td>\n</tr>\n<tr>\n<td>class_getInstanceSize</td>\n<td>获取类的实例的大小</td>\n</tr>\n<tr>\n<td>class_respondsToSelector</td>\n<td>判断类是否实现某方法</td>\n</tr>\n<tr>\n<td>class_conformsToProtocol</td>\n<td>判断类是否遵循某协议</td>\n</tr>\n<tr>\n<td>class_createInstance</td>\n<td>创建类的实例</td>\n</tr>\n<tr>\n<td>class_copyIvarList</td>\n<td>拷贝类的实例变量列表</td>\n</tr>\n<tr>\n<td>class_copyMethodList</td>\n<td>拷贝类的方法列表</td>\n</tr>\n<tr>\n<td>class_copyProtocolList</td>\n<td>拷贝类遵循的协议列表</td>\n</tr>\n<tr>\n<td>class_copyPropertyList</td>\n<td>拷贝类的属性列表</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"3-object-xxx-系列函数\"><a href=\"#3-object-xxx-系列函数\" class=\"headerlink\" title=\"3.object_xxx 系列函数\"></a>3.object_xxx 系列函数</h4><p>  objcet_系列函数关注于对象的角度,如实例变量</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>object_copy</td>\n<td>对象copy(ARC无效)</td>\n</tr>\n<tr>\n<td>object_dispose</td>\n<td>对象释放(ARC无效)</td>\n</tr>\n<tr>\n<td>object_getClassName</td>\n<td>获取对象的类名</td>\n</tr>\n<tr>\n<td>object_getClass</td>\n<td>获取对象的Class</td>\n</tr>\n<tr>\n<td>object_setClass</td>\n<td>设置对象的Class</td>\n</tr>\n<tr>\n<td>object_getIvar</td>\n<td>获取对象中实例变量的值</td>\n</tr>\n<tr>\n<td>object_setIvar</td>\n<td>设置对象中实例变量的值</td>\n</tr>\n<tr>\n<td>object_getInstanceVariable</td>\n<td>获取对象中实例变量的值 (ARC中无效,使用object_getIvar)</td>\n</tr>\n<tr>\n<td>object_setInstanceVariable</td>\n<td>设置对象中实例变量的值 (ARC中无效,使用object_setIvar)</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"4-method-xxx-系列函数\"><a href=\"#4-method-xxx-系列函数\" class=\"headerlink\" title=\"4.method_xxx 系列函数\"></a>4.method_xxx 系列函数</h4><p>  method_系列函数关注于方法内部,如果方法的参数及返回值类型和方法的实现</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>method_getName</td>\n<td>获取方法名</td>\n</tr>\n<tr>\n<td>method_getImplementation</td>\n<td>获取方法的实现</td>\n</tr>\n<tr>\n<td>method_getTypeEncoding</td>\n<td>获取方法的类型编码</td>\n</tr>\n<tr>\n<td>method_getNumberOfArguments</td>\n<td>获取方法的参数个数</td>\n</tr>\n<tr>\n<td>method_copyReturnType</td>\n<td>拷贝方法的返回类型</td>\n</tr>\n<tr>\n<td>method_getReturnType</td>\n<td>获取方法的返回类型</td>\n</tr>\n<tr>\n<td>method_copyArgumentType</td>\n<td>拷贝方法的参数类型</td>\n</tr>\n<tr>\n<td>method_getArgumentType</td>\n<td>获取方法的参数类型</td>\n</tr>\n<tr>\n<td>method_getDescription</td>\n<td>获取方法的描述</td>\n</tr>\n<tr>\n<td>method_setImplementation</td>\n<td>设置方法的实现</td>\n</tr>\n<tr>\n<td>method_exchangeImplementations</td>\n<td>替换方法的实现</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"5-property-xxx-系列函数\"><a href=\"#5-property-xxx-系列函数\" class=\"headerlink\" title=\"5.property_xxx 系列函数\"></a>5.property_xxx 系列函数</h4><p>property_系类函数关注与属性*内部,如属性的特性等</p>\n<table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>property_getName</td>\n<td>获取属性名</td>\n</tr>\n<tr>\n<td>property_getAttributes</td>\n<td>获取属性的特性列表</td>\n</tr>\n<tr>\n<td>property_copyAttributeList</td>\n<td>拷贝属性的特性列表</td>\n</tr>\n<tr>\n<td>property_copyAttributeValue</td>\n<td>拷贝属性中某特性的值</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"6-protocol-xxx-系列函数\"><a href=\"#6-protocol-xxx-系列函数\" class=\"headerlink\" title=\"6.protocol_xxx 系列函数\"></a>6.protocol_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>protocol_conformsToProtocol</td>\n<td>判断一个协议是否遵循另一个协议</td>\n</tr>\n<tr>\n<td>protocol_isEqual</td>\n<td>判断两个协议是否一致</td>\n</tr>\n<tr>\n<td>protocol_getName</td>\n<td>获取协议名称</td>\n</tr>\n<tr>\n<td>protocol_copyPropertyList</td>\n<td>拷贝协议的属性列表</td>\n</tr>\n<tr>\n<td>protocol_copyProtocolList</td>\n<td>拷贝某协议所遵循的协议列表</td>\n</tr>\n<tr>\n<td>protocol_copyMethodDescriptionList</td>\n<td>拷贝协议的方法列表</td>\n</tr>\n<tr>\n<td>protocol_addProtocol</td>\n<td>为一个协议遵循另一协议</td>\n</tr>\n<tr>\n<td>protocol_addProperty</td>\n<td>为协议添加属性</td>\n</tr>\n<tr>\n<td>protocol_getProperty</td>\n<td>获取协议中的某个属性</td>\n</tr>\n<tr>\n<td>protocol_addMethodDescription</td>\n<td>为协议添加方法描述</td>\n</tr>\n<tr>\n<td>protocol_getMethodDescription</td>\n<td>获取协议中某方法的描述</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"7-ivar-xxx-系列函数\"><a href=\"#7-ivar-xxx-系列函数\" class=\"headerlink\" title=\"7.ivar_xxx 系列函数\"></a>7.ivar_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ivar_getName</td>\n<td>获取Ivar名称</td>\n</tr>\n<tr>\n<td>ivar_getTypeEncoding</td>\n<td>获取类型编码</td>\n</tr>\n<tr>\n<td>ivar_getOffset</td>\n<td>获取偏移量</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"8-sel-xxx-系列函数\"><a href=\"#8-sel-xxx-系列函数\" class=\"headerlink\" title=\"8.sel_xxx 系列函数\"></a>8.sel_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sel_getName</td>\n<td>获取名称</td>\n</tr>\n<tr>\n<td>sel_getUid</td>\n<td>注册方法</td>\n</tr>\n<tr>\n<td>sel_registerName</td>\n<td>注册方法</td>\n</tr>\n<tr>\n<td>sel_isEqual</td>\n<td>判断方法是否相等</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"9-imp-xxx-系列函数\"><a href=\"#9-imp-xxx-系列函数\" class=\"headerlink\" title=\"9.imp_xxx 系列函数\"></a>9.imp_xxx 系列函数</h4><table>\n<thead>\n<tr>\n<th>函数名称</th>\n<th>函数作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>imp_implementationWithBlock</td>\n<td>通过代码块创建IMP</td>\n</tr>\n<tr>\n<td>imp_getBlock</td>\n<td>获取函数指针中的代码块</td>\n</tr>\n<tr>\n<td>imp_removeBlock</td>\n<td>移除IMP中的代码块</td>\n</tr>\n</tbody>\n</table>\n"},{"title":"(施工ing) swift - 动态调用之performSelector","date":"2018-04-19T16:00:00.000Z","description":"iOS中的动态调用之performSelector.","_content":"\n# swift - 动态调用之performSelector.\n\n### 同步执行:\n\n```swift\npublic func perform(_ aSelector: Selector!) -> Unmanaged<AnyObject>!\npublic func perform(_ aSelector: Selector!, with object: Any!) -> Unmanaged<AnyObject>!\npublic func perform(_ aSelector: Selector!, with object1: Any!, with object2: Any!) -> Unmanaged<AnyObject>!\n```\n\n1. 以上函数归属于`NSObjectProtocol`.\n2. 以上函数均为同步执行.\n3. 以上函数与线程无关,在主线程/子线程均可直接调起指定函数.\n4. `object`必须为对象类型(int,double无法正确传值).\n5. 拥有返回值\n\n### 延迟执行(Delayed perform):\n\n```swift\nopen func perform(_ aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval, inModes modes: [RunLoopMode])\nopen func perform(_ aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval)\n```\n\n1. 以上函数归属于`NSObject`.\n\n2. 以上函数均为异步执行.\n\n3. 以上函数只能在主线程中执行，无法再其他线程中执行.\n\n4. 即使delay传参为0，也不会立即执行，而是在next runloop执行\n\n5. 有对应取消执行函数(只能在函数未到执行时间时执行有效.)\n\n   ```swift\n   open class func cancelPreviousPerformRequests(withTarget aTarget: Any, selector aSelector: Selector, object anArgument: Any?)\n   open class func cancelPreviousPerformRequests(withTarget aTarget: Any)\n   ```\n\n\n### 线程相关:\n\n```swift\nopen func performSelector(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)\nopen func performSelector(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool)  \n\nopen func perform(_ aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)\nopen func perform(_ aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool)\n\nopen func performSelector(inBackground aSelector: Selector, with arg: Any?)\n```\n\n1. 以上函数无论在主线程/子线程中执行,均会切换至指定线程中执行对应 `Selector`.\n2. `waitUntilDone`:是否等待当前线程执行结束执行.\n\n### 参数:\n\n 1. 直接使用perform方法参数要求是`NSObject`对象,\n\n    so: `int`,`double`之类的参数传值之后参数值一定不正确.(深坑)\n\n 2. `String`/`Array`/`Dictionary`类型由于可以映射`NSString`/`NSArray`/`Dictionary`,并不受影响.\n\n 3. 结构体类型可以采用`NSValue`包装的方式发送.\n\n\n### 返回值\n\n#### Unmanaged\n\n```swift\npublic static func fromOpaque(_ value: UnsafeRawPointer) -> Unmanaged<Instance>\npublic func toOpaque() -> UnsafeMutableRawPointer\npublic static func passRetained(_ value: Instance) -> Unmanaged<Instance>\npublic static func passUnretained(_ value: Instance) -> Unmanaged<Instance>\npublic func takeUnretainedValue() -> Instance\npublic func takeRetainedValue() -> Instance\npublic func retain() -> Unmanaged<Instance>\npublic func release()\npublic func autorelease() -> Unmanaged<Instance>\n```\n\n\n\n参考\n\n- [[Unmanaged](http://nshipster.cn/unmanaged/)]","source":"_posts/[iOS]performSelector.md","raw":"---\ntitle: (施工ing) swift - 动态调用之performSelector\ndate: 2018-04-20\ncategories: [ios]\ntags: [ios,swift]\ndescription: iOS中的动态调用之performSelector.\n---\n\n# swift - 动态调用之performSelector.\n\n### 同步执行:\n\n```swift\npublic func perform(_ aSelector: Selector!) -> Unmanaged<AnyObject>!\npublic func perform(_ aSelector: Selector!, with object: Any!) -> Unmanaged<AnyObject>!\npublic func perform(_ aSelector: Selector!, with object1: Any!, with object2: Any!) -> Unmanaged<AnyObject>!\n```\n\n1. 以上函数归属于`NSObjectProtocol`.\n2. 以上函数均为同步执行.\n3. 以上函数与线程无关,在主线程/子线程均可直接调起指定函数.\n4. `object`必须为对象类型(int,double无法正确传值).\n5. 拥有返回值\n\n### 延迟执行(Delayed perform):\n\n```swift\nopen func perform(_ aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval, inModes modes: [RunLoopMode])\nopen func perform(_ aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval)\n```\n\n1. 以上函数归属于`NSObject`.\n\n2. 以上函数均为异步执行.\n\n3. 以上函数只能在主线程中执行，无法再其他线程中执行.\n\n4. 即使delay传参为0，也不会立即执行，而是在next runloop执行\n\n5. 有对应取消执行函数(只能在函数未到执行时间时执行有效.)\n\n   ```swift\n   open class func cancelPreviousPerformRequests(withTarget aTarget: Any, selector aSelector: Selector, object anArgument: Any?)\n   open class func cancelPreviousPerformRequests(withTarget aTarget: Any)\n   ```\n\n\n### 线程相关:\n\n```swift\nopen func performSelector(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)\nopen func performSelector(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool)  \n\nopen func perform(_ aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)\nopen func perform(_ aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool)\n\nopen func performSelector(inBackground aSelector: Selector, with arg: Any?)\n```\n\n1. 以上函数无论在主线程/子线程中执行,均会切换至指定线程中执行对应 `Selector`.\n2. `waitUntilDone`:是否等待当前线程执行结束执行.\n\n### 参数:\n\n 1. 直接使用perform方法参数要求是`NSObject`对象,\n\n    so: `int`,`double`之类的参数传值之后参数值一定不正确.(深坑)\n\n 2. `String`/`Array`/`Dictionary`类型由于可以映射`NSString`/`NSArray`/`Dictionary`,并不受影响.\n\n 3. 结构体类型可以采用`NSValue`包装的方式发送.\n\n\n### 返回值\n\n#### Unmanaged\n\n```swift\npublic static func fromOpaque(_ value: UnsafeRawPointer) -> Unmanaged<Instance>\npublic func toOpaque() -> UnsafeMutableRawPointer\npublic static func passRetained(_ value: Instance) -> Unmanaged<Instance>\npublic static func passUnretained(_ value: Instance) -> Unmanaged<Instance>\npublic func takeUnretainedValue() -> Instance\npublic func takeRetainedValue() -> Instance\npublic func retain() -> Unmanaged<Instance>\npublic func release()\npublic func autorelease() -> Unmanaged<Instance>\n```\n\n\n\n参考\n\n- [[Unmanaged](http://nshipster.cn/unmanaged/)]","slug":"[iOS]performSelector","published":1,"updated":"2018-07-10T10:36:40.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1in000arfz6dlrymtld","content":"<h1 id=\"swift-动态调用之performSelector\"><a href=\"#swift-动态调用之performSelector\" class=\"headerlink\" title=\"swift - 动态调用之performSelector.\"></a>swift - 动态调用之performSelector.</h1><h3 id=\"同步执行\"><a href=\"#同步执行\" class=\"headerlink\" title=\"同步执行:\"></a>同步执行:</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector!)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">AnyObject</span>&gt;!</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector!, with object: Any!)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">AnyObject</span>&gt;!</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector!, with object1: Any!, with object2: Any!)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">AnyObject</span>&gt;!</span><br></pre></td></tr></table></figure>\n<ol>\n<li>以上函数归属于<code>NSObjectProtocol</code>.</li>\n<li>以上函数均为同步执行.</li>\n<li>以上函数与线程无关,在主线程/子线程均可直接调起指定函数.</li>\n<li><code>object</code>必须为对象类型(int,double无法正确传值).</li>\n<li>拥有返回值</li>\n</ol>\n<h3 id=\"延迟执行-Delayed-perform\"><a href=\"#延迟执行-Delayed-perform\" class=\"headerlink\" title=\"延迟执行(Delayed perform):\"></a>延迟执行(Delayed perform):</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval, inModes modes: [RunLoopMode])</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval)</span></span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>以上函数归属于<code>NSObject</code>.</p>\n</li>\n<li><p>以上函数均为异步执行.</p>\n</li>\n<li><p>以上函数只能在主线程中执行，无法再其他线程中执行.</p>\n</li>\n<li><p>即使delay传参为0，也不会立即执行，而是在next runloop执行</p>\n</li>\n<li><p>有对应取消执行函数(只能在函数未到执行时间时执行有效.)</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">func</span> <span class=\"title\">cancelPreviousPerformRequests</span>(<span class=\"title\">withTarget</span> <span class=\"title\">aTarget</span>: <span class=\"title\">Any</span>, <span class=\"title\">selector</span> <span class=\"title\">aSelector</span>: <span class=\"title\">Selector</span>, <span class=\"title\">object</span> <span class=\"title\">anArgument</span>: <span class=\"title\">Any</span>?)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">open</span> <span class=\"title\">class</span> <span class=\"title\">func</span> <span class=\"title\">cancelPreviousPerformRequests</span>(<span class=\"title\">withTarget</span> <span class=\"title\">aTarget</span>: <span class=\"title\">Any</span>)</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"线程相关\"><a href=\"#线程相关\" class=\"headerlink\" title=\"线程相关:\"></a>线程相关:</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">performSelector</span><span class=\"params\">(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">performSelector</span><span class=\"params\">(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool)</span></span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">performSelector</span><span class=\"params\">(inBackground aSelector: Selector, with arg: Any?)</span></span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>以上函数无论在主线程/子线程中执行,均会切换至指定线程中执行对应 <code>Selector</code>.</li>\n<li><code>waitUntilDone</code>:是否等待当前线程执行结束执行.</li>\n</ol>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数:\"></a>参数:</h3><ol>\n<li><p>直接使用perform方法参数要求是<code>NSObject</code>对象,</p>\n<p>so: <code>int</code>,<code>double</code>之类的参数传值之后参数值一定不正确.(深坑)</p>\n</li>\n<li><p><code>String</code>/<code>Array</code>/<code>Dictionary</code>类型由于可以映射<code>NSString</code>/<code>NSArray</code>/<code>Dictionary</code>,并不受影响.</p>\n</li>\n<li><p>结构体类型可以采用<code>NSValue</code>包装的方式发送.</p>\n</li>\n</ol>\n<h3 id=\"返回值\"><a href=\"#返回值\" class=\"headerlink\" title=\"返回值\"></a>返回值</h3><h4 id=\"Unmanaged\"><a href=\"#Unmanaged\" class=\"headerlink\" title=\"Unmanaged\"></a>Unmanaged</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fromOpaque</span><span class=\"params\">(<span class=\"number\">_</span> value: UnsafeRawPointer)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">toOpaque</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">UnsafeMutableRawPointer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">passRetained</span><span class=\"params\">(<span class=\"number\">_</span> value: Instance)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">passUnretained</span><span class=\"params\">(<span class=\"number\">_</span> value: Instance)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">takeUnretainedValue</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Instance</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">takeRetainedValue</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Instance</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">retain</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">release</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">autorelease</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>参考</p>\n<ul>\n<li>[<a href=\"http://nshipster.cn/unmanaged/\" target=\"_blank\" rel=\"noopener\">Unmanaged</a>]</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"swift-动态调用之performSelector\"><a href=\"#swift-动态调用之performSelector\" class=\"headerlink\" title=\"swift - 动态调用之performSelector.\"></a>swift - 动态调用之performSelector.</h1><h3 id=\"同步执行\"><a href=\"#同步执行\" class=\"headerlink\" title=\"同步执行:\"></a>同步执行:</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector!)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">AnyObject</span>&gt;!</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector!, with object: Any!)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">AnyObject</span>&gt;!</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector!, with object1: Any!, with object2: Any!)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">AnyObject</span>&gt;!</span><br></pre></td></tr></table></figure>\n<ol>\n<li>以上函数归属于<code>NSObjectProtocol</code>.</li>\n<li>以上函数均为同步执行.</li>\n<li>以上函数与线程无关,在主线程/子线程均可直接调起指定函数.</li>\n<li><code>object</code>必须为对象类型(int,double无法正确传值).</li>\n<li>拥有返回值</li>\n</ol>\n<h3 id=\"延迟执行-Delayed-perform\"><a href=\"#延迟执行-Delayed-perform\" class=\"headerlink\" title=\"延迟执行(Delayed perform):\"></a>延迟执行(Delayed perform):</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval, inModes modes: [RunLoopMode])</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, with anArgument: Any?, afterDelay delay: TimeInterval)</span></span></span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>以上函数归属于<code>NSObject</code>.</p>\n</li>\n<li><p>以上函数均为异步执行.</p>\n</li>\n<li><p>以上函数只能在主线程中执行，无法再其他线程中执行.</p>\n</li>\n<li><p>即使delay传参为0，也不会立即执行，而是在next runloop执行</p>\n</li>\n<li><p>有对应取消执行函数(只能在函数未到执行时间时执行有效.)</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">func</span> <span class=\"title\">cancelPreviousPerformRequests</span>(<span class=\"title\">withTarget</span> <span class=\"title\">aTarget</span>: <span class=\"title\">Any</span>, <span class=\"title\">selector</span> <span class=\"title\">aSelector</span>: <span class=\"title\">Selector</span>, <span class=\"title\">object</span> <span class=\"title\">anArgument</span>: <span class=\"title\">Any</span>?)</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">open</span> <span class=\"title\">class</span> <span class=\"title\">func</span> <span class=\"title\">cancelPreviousPerformRequests</span>(<span class=\"title\">withTarget</span> <span class=\"title\">aTarget</span>: <span class=\"title\">Any</span>)</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"线程相关\"><a href=\"#线程相关\" class=\"headerlink\" title=\"线程相关:\"></a>线程相关:</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">performSelector</span><span class=\"params\">(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">performSelector</span><span class=\"params\">(onMainThread aSelector: Selector, with arg: Any?, waitUntilDone wait: Bool)</span></span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool, modes array: [String]?)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">perform</span><span class=\"params\">(<span class=\"number\">_</span> aSelector: Selector, on thr: Thread, with arg: Any?, waitUntilDone wait: Bool)</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">performSelector</span><span class=\"params\">(inBackground aSelector: Selector, with arg: Any?)</span></span></span><br></pre></td></tr></table></figure>\n<ol>\n<li>以上函数无论在主线程/子线程中执行,均会切换至指定线程中执行对应 <code>Selector</code>.</li>\n<li><code>waitUntilDone</code>:是否等待当前线程执行结束执行.</li>\n</ol>\n<h3 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数:\"></a>参数:</h3><ol>\n<li><p>直接使用perform方法参数要求是<code>NSObject</code>对象,</p>\n<p>so: <code>int</code>,<code>double</code>之类的参数传值之后参数值一定不正确.(深坑)</p>\n</li>\n<li><p><code>String</code>/<code>Array</code>/<code>Dictionary</code>类型由于可以映射<code>NSString</code>/<code>NSArray</code>/<code>Dictionary</code>,并不受影响.</p>\n</li>\n<li><p>结构体类型可以采用<code>NSValue</code>包装的方式发送.</p>\n</li>\n</ol>\n<h3 id=\"返回值\"><a href=\"#返回值\" class=\"headerlink\" title=\"返回值\"></a>返回值</h3><h4 id=\"Unmanaged\"><a href=\"#Unmanaged\" class=\"headerlink\" title=\"Unmanaged\"></a>Unmanaged</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">fromOpaque</span><span class=\"params\">(<span class=\"number\">_</span> value: UnsafeRawPointer)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">toOpaque</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">UnsafeMutableRawPointer</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">passRetained</span><span class=\"params\">(<span class=\"number\">_</span> value: Instance)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">passUnretained</span><span class=\"params\">(<span class=\"number\">_</span> value: Instance)</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">takeUnretainedValue</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Instance</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">takeRetainedValue</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Instance</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">retain</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">release</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">autorelease</span><span class=\"params\">()</span></span> -&gt; <span class=\"type\">Unmanaged</span>&lt;<span class=\"type\">Instance</span>&gt;</span><br></pre></td></tr></table></figure>\n<p>参考</p>\n<ul>\n<li>[<a href=\"http://nshipster.cn/unmanaged/\" target=\"_blank\" rel=\"noopener\">Unmanaged</a>]</li>\n</ul>\n"},{"title":"iOS-本地通知","date":"2018-04-07T16:00:00.000Z","description":"iOS 上的本地通知实现.","_content":"\n# iOS-本地通知\n\n## 一 . UILocalNotification \n\n#### 0. Api支持\n\n   ```swift\n@available(iOS, introduced: 4.0, deprecated: 10.0, message: \"Use UserNotifications Framework's UNNotificationRequest\")\n   ```\n\n#### 1. 注册通知\n\n   ```swift\nlet settings = UIUserNotificationSettings(types: [.alert,.badge,.sound], categories: nil)\nUIApplication.shared.registerUserNotificationSettings(settings)\n   ```\n\n#### 2. 发送通知\n\n```swift\n // 创建本地通知\n let note = UILocalNotification()\n // 设置通知发送的时间\n note.fireDate = date\n // 标题\n note.alertTitle = \"通知标题\"\n // 设置通知内容\n note.alertBody = \"通知内容\"\n // 设置通过到来的声音\n note.soundName = UILocalNotificationDefaultSoundName\n // 设置应用图标左上角显示的数字\n note.applicationIconBadgeNumber = 2\n // 设置一些额外的信息\n note.userInfo = [\"key\":\"value\"]\n // 执行通知\n UIApplication.shared.scheduleLocalNotification(note)\n```\n\n#### 3. 通知接收\n\n   ```swift\n/// app处于前台 / app处于后台时\nfunc application(_ application: UIApplication, didReceive notification: UILocalNotification) {\n/// doSomeThing  \n}\n   ```\n\n## 二 . UserNotifications  \n\n#### 0. Api支持:\n\n```swift\n@available(iOS 10.0, *)\n```\n\n#### 1. 注册通知\n\n   ```swift\nlet center = UNUserNotificationCenter.current()\n/// 需要响应事件或需在前台时显示通知 需要实现该代理\ncenter.delegate = self as UNUserNotificationCenterDelegate\n/// 注册通知响应类型\ncenter.requestAuthorization(options: [.alert,.badge,.carPlay,.sound]) { (res, err) in\n   \tif res { print(err) }\n}\n   ```\n\n#### 2. 发送通知\n\n   - 构建内容: [UNMutableNotificationContent](https://developer.apple.com/documentation/usernotifications/unmutablenotificationcontent)\n\n     ```swift\n     let content = UNMutableNotificationContent()\n     content.badge = 55\n     content.body = \"body\"\n     content.title = \"title\"\n     content.subtitle = \"subtitle\"\n     content.userInfo = [\"key\": \"自定义参数\"]\n     content.launchImageName = \"logo.png\"\n     ```\n\n   - 构建触发器: `UNNotificationTrigger`\n\n     - 时间触发器: [UNTimeIntervalNotificationTrigger](https://developer.apple.com/documentation/usernotifications/UNTimeIntervalNotificationTrigger)\n\n       ```swift\n       // 5s 后触发\n       let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 5, repeats: false)\n       // 每隔 60s 重复触发 (重复触发要求时间间隔大于 60s)\n       let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 60, repeats: true)\n       ```\n\n     - 日历触发器: [UNCalendarNotificationTrigger ](https://developer.apple.com/documentation/usernotifications/uncalendarnotificationtrigger)\n\n       ```swift\n       //每周一早上 8：00 触发 (周日为一周开始)\n       var components = DateComponents()\n       components.weekday = 2\n       components.hour = 8\n       trigger = UNCalendarNotificationTrigger(dateMatching: components, repeats: true)\n       \n       /* 扩展:\n       DateComponents:  一星期: [第一天为星期天]，[最后一天为星期六]\n       [ISO 8601]: 一星期: [第一天为星期一]，[最后一天为星期天]\n       url: https://www.iso.org/iso-8601-date-and-time-format.html\n       8/\n       ```\n\n     - 地理围栏触发器: [UNLocationNotificationTrigger](https://developer.apple.com/documentation/usernotifications/UNLocationNotificationTrigger)\n\n       1. 需导入定位库` import CoreLocation `,\n       2. CLRegion 有 2个子类分别为\n          - [CLCircularRegion](https://developer.apple.com/documentation/corelocation/clcircularregion): 经纬度-地理围栏\n          - [CLBeaconRegion](https://developer.apple.com/documentation/corelocation/clbeaconregion): iBeacon设备-地理围栏\n\n       ```swift\n       // 1. 经纬度 地理围栏\n       //距离(30, 30）点 20 米 处发起通知\n       let coor = CLLocationCoordinate2D(latitude: 30.00, longitude: 30.00)\n       var region = CLCircularRegion(center: coor,radius: 20,identifier: \"regionidentifier\")\n       // 退出围栏时触发\n       region.notifyOnExit = true\n       // 进入围栏时触发\n       region.notifyOnEntry = true\n       trigger = UNLocationNotificationTrigger(region: region, repeats: isRepeats)\n       \n       // 2. iBeacon\n       // 还在探索...\n       ```\n\n     - 发送通知\n\n       ```swift\n       let req = UNNotificationRequest(identifier: \"identifier\", content: content, trigger: trigger)\n       UNUserNotificationCenter.current().add(req, withCompletionHandler: nil)\n       ```\n\n#### 3. 通知接收\n\n```swift\n // 处理通知激活事件\n func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {\n     completionHandler()\n }\n   \n // 如果需要在应用内展示通知则可实现该代理函数\n func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {\n     completionHandler([.alert,.badge,.sound])\n }\n```\n\n\n​     \n\n","source":"_posts/[iOS]本地通知.md","raw":"---\ntitle: iOS-本地通知\ndate: 2018-04-08 \ncategories: [ios]\ntags: [ios,Notification]\ndescription: iOS 上的本地通知实现.\n---\n\n# iOS-本地通知\n\n## 一 . UILocalNotification \n\n#### 0. Api支持\n\n   ```swift\n@available(iOS, introduced: 4.0, deprecated: 10.0, message: \"Use UserNotifications Framework's UNNotificationRequest\")\n   ```\n\n#### 1. 注册通知\n\n   ```swift\nlet settings = UIUserNotificationSettings(types: [.alert,.badge,.sound], categories: nil)\nUIApplication.shared.registerUserNotificationSettings(settings)\n   ```\n\n#### 2. 发送通知\n\n```swift\n // 创建本地通知\n let note = UILocalNotification()\n // 设置通知发送的时间\n note.fireDate = date\n // 标题\n note.alertTitle = \"通知标题\"\n // 设置通知内容\n note.alertBody = \"通知内容\"\n // 设置通过到来的声音\n note.soundName = UILocalNotificationDefaultSoundName\n // 设置应用图标左上角显示的数字\n note.applicationIconBadgeNumber = 2\n // 设置一些额外的信息\n note.userInfo = [\"key\":\"value\"]\n // 执行通知\n UIApplication.shared.scheduleLocalNotification(note)\n```\n\n#### 3. 通知接收\n\n   ```swift\n/// app处于前台 / app处于后台时\nfunc application(_ application: UIApplication, didReceive notification: UILocalNotification) {\n/// doSomeThing  \n}\n   ```\n\n## 二 . UserNotifications  \n\n#### 0. Api支持:\n\n```swift\n@available(iOS 10.0, *)\n```\n\n#### 1. 注册通知\n\n   ```swift\nlet center = UNUserNotificationCenter.current()\n/// 需要响应事件或需在前台时显示通知 需要实现该代理\ncenter.delegate = self as UNUserNotificationCenterDelegate\n/// 注册通知响应类型\ncenter.requestAuthorization(options: [.alert,.badge,.carPlay,.sound]) { (res, err) in\n   \tif res { print(err) }\n}\n   ```\n\n#### 2. 发送通知\n\n   - 构建内容: [UNMutableNotificationContent](https://developer.apple.com/documentation/usernotifications/unmutablenotificationcontent)\n\n     ```swift\n     let content = UNMutableNotificationContent()\n     content.badge = 55\n     content.body = \"body\"\n     content.title = \"title\"\n     content.subtitle = \"subtitle\"\n     content.userInfo = [\"key\": \"自定义参数\"]\n     content.launchImageName = \"logo.png\"\n     ```\n\n   - 构建触发器: `UNNotificationTrigger`\n\n     - 时间触发器: [UNTimeIntervalNotificationTrigger](https://developer.apple.com/documentation/usernotifications/UNTimeIntervalNotificationTrigger)\n\n       ```swift\n       // 5s 后触发\n       let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 5, repeats: false)\n       // 每隔 60s 重复触发 (重复触发要求时间间隔大于 60s)\n       let trigger = UNTimeIntervalNotificationTrigger(timeInterval: 60, repeats: true)\n       ```\n\n     - 日历触发器: [UNCalendarNotificationTrigger ](https://developer.apple.com/documentation/usernotifications/uncalendarnotificationtrigger)\n\n       ```swift\n       //每周一早上 8：00 触发 (周日为一周开始)\n       var components = DateComponents()\n       components.weekday = 2\n       components.hour = 8\n       trigger = UNCalendarNotificationTrigger(dateMatching: components, repeats: true)\n       \n       /* 扩展:\n       DateComponents:  一星期: [第一天为星期天]，[最后一天为星期六]\n       [ISO 8601]: 一星期: [第一天为星期一]，[最后一天为星期天]\n       url: https://www.iso.org/iso-8601-date-and-time-format.html\n       8/\n       ```\n\n     - 地理围栏触发器: [UNLocationNotificationTrigger](https://developer.apple.com/documentation/usernotifications/UNLocationNotificationTrigger)\n\n       1. 需导入定位库` import CoreLocation `,\n       2. CLRegion 有 2个子类分别为\n          - [CLCircularRegion](https://developer.apple.com/documentation/corelocation/clcircularregion): 经纬度-地理围栏\n          - [CLBeaconRegion](https://developer.apple.com/documentation/corelocation/clbeaconregion): iBeacon设备-地理围栏\n\n       ```swift\n       // 1. 经纬度 地理围栏\n       //距离(30, 30）点 20 米 处发起通知\n       let coor = CLLocationCoordinate2D(latitude: 30.00, longitude: 30.00)\n       var region = CLCircularRegion(center: coor,radius: 20,identifier: \"regionidentifier\")\n       // 退出围栏时触发\n       region.notifyOnExit = true\n       // 进入围栏时触发\n       region.notifyOnEntry = true\n       trigger = UNLocationNotificationTrigger(region: region, repeats: isRepeats)\n       \n       // 2. iBeacon\n       // 还在探索...\n       ```\n\n     - 发送通知\n\n       ```swift\n       let req = UNNotificationRequest(identifier: \"identifier\", content: content, trigger: trigger)\n       UNUserNotificationCenter.current().add(req, withCompletionHandler: nil)\n       ```\n\n#### 3. 通知接收\n\n```swift\n // 处理通知激活事件\n func userNotificationCenter(_ center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping () -> Void) {\n     completionHandler()\n }\n   \n // 如果需要在应用内展示通知则可实现该代理函数\n func userNotificationCenter(_ center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping (UNNotificationPresentationOptions) -> Void) {\n     completionHandler([.alert,.badge,.sound])\n }\n```\n\n\n​     \n\n","slug":"[iOS]本地通知","published":1,"updated":"2018-10-16T07:24:23.260Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1it000erfz6c1ep6i4c","content":"<h1 id=\"iOS-本地通知\"><a href=\"#iOS-本地通知\" class=\"headerlink\" title=\"iOS-本地通知\"></a>iOS-本地通知</h1><h2 id=\"一-UILocalNotification\"><a href=\"#一-UILocalNotification\" class=\"headerlink\" title=\"一 . UILocalNotification\"></a>一 . UILocalNotification</h2><h4 id=\"0-Api支持\"><a href=\"#0-Api支持\" class=\"headerlink\" title=\"0. Api支持\"></a>0. Api支持</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@available</span>(iOS, introduced: <span class=\"number\">4.0</span>, deprecated: <span class=\"number\">10.0</span>, message: <span class=\"string\">\"Use UserNotifications Framework's UNNotificationRequest\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-注册通知\"><a href=\"#1-注册通知\" class=\"headerlink\" title=\"1. 注册通知\"></a>1. 注册通知</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> settings = <span class=\"type\">UIUserNotificationSettings</span>(types: [.alert,.badge,.sound], categories: <span class=\"literal\">nil</span>)</span><br><span class=\"line\"><span class=\"type\">UIApplication</span>.shared.registerUserNotificationSettings(settings)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-发送通知\"><a href=\"#2-发送通知\" class=\"headerlink\" title=\"2. 发送通知\"></a>2. 发送通知</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建本地通知</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> note = <span class=\"type\">UILocalNotification</span>()</span><br><span class=\"line\"><span class=\"comment\">// 设置通知发送的时间</span></span><br><span class=\"line\">note.fireDate = date</span><br><span class=\"line\"><span class=\"comment\">// 标题</span></span><br><span class=\"line\">note.alertTitle = <span class=\"string\">\"通知标题\"</span></span><br><span class=\"line\"><span class=\"comment\">// 设置通知内容</span></span><br><span class=\"line\">note.alertBody = <span class=\"string\">\"通知内容\"</span></span><br><span class=\"line\"><span class=\"comment\">// 设置通过到来的声音</span></span><br><span class=\"line\">note.soundName = <span class=\"type\">UILocalNotificationDefaultSoundName</span></span><br><span class=\"line\"><span class=\"comment\">// 设置应用图标左上角显示的数字</span></span><br><span class=\"line\">note.applicationIconBadgeNumber = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">// 设置一些额外的信息</span></span><br><span class=\"line\">note.userInfo = [<span class=\"string\">\"key\"</span>:<span class=\"string\">\"value\"</span>]</span><br><span class=\"line\"><span class=\"comment\">// 执行通知</span></span><br><span class=\"line\"><span class=\"type\">UIApplication</span>.shared.scheduleLocalNotification(note)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-通知接收\"><a href=\"#3-通知接收\" class=\"headerlink\" title=\"3. 通知接收\"></a>3. 通知接收</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// app处于前台 / app处于后台时</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">application</span><span class=\"params\">(<span class=\"number\">_</span> application: UIApplication, didReceive notification: UILocalNotification)</span></span> &#123;</span><br><span class=\"line\"><span class=\"comment\">/// doSomeThing  </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-UserNotifications\"><a href=\"#二-UserNotifications\" class=\"headerlink\" title=\"二 . UserNotifications\"></a>二 . UserNotifications</h2><h4 id=\"0-Api支持-1\"><a href=\"#0-Api支持-1\" class=\"headerlink\" title=\"0. Api支持:\"></a>0. Api支持:</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@available</span>(iOS <span class=\"number\">10.0</span>, *)</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-注册通知-1\"><a href=\"#1-注册通知-1\" class=\"headerlink\" title=\"1. 注册通知\"></a>1. 注册通知</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> center = <span class=\"type\">UNUserNotificationCenter</span>.current()</span><br><span class=\"line\"><span class=\"comment\">/// 需要响应事件或需在前台时显示通知 需要实现该代理</span></span><br><span class=\"line\">center.delegate = <span class=\"keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"type\">UNUserNotificationCenterDelegate</span></span><br><span class=\"line\"><span class=\"comment\">/// 注册通知响应类型</span></span><br><span class=\"line\">center.requestAuthorization(options: [.alert,.badge,.carPlay,.sound]) &#123; (res, err) <span class=\"keyword\">in</span></span><br><span class=\"line\">   \t<span class=\"keyword\">if</span> res &#123; <span class=\"built_in\">print</span>(err) &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-发送通知-1\"><a href=\"#2-发送通知-1\" class=\"headerlink\" title=\"2. 发送通知\"></a>2. 发送通知</h4><ul>\n<li><p>构建内容: <a href=\"https://developer.apple.com/documentation/usernotifications/unmutablenotificationcontent\" target=\"_blank\" rel=\"noopener\">UNMutableNotificationContent</a></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> content = <span class=\"type\">UNMutableNotificationContent</span>()</span><br><span class=\"line\">content.badge = <span class=\"number\">55</span></span><br><span class=\"line\">content.body = <span class=\"string\">\"body\"</span></span><br><span class=\"line\">content.title = <span class=\"string\">\"title\"</span></span><br><span class=\"line\">content.subtitle = <span class=\"string\">\"subtitle\"</span></span><br><span class=\"line\">content.userInfo = [<span class=\"string\">\"key\"</span>: <span class=\"string\">\"自定义参数\"</span>]</span><br><span class=\"line\">content.launchImageName = <span class=\"string\">\"logo.png\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建触发器: <code>UNNotificationTrigger</code></p>\n<ul>\n<li><p>时间触发器: <a href=\"https://developer.apple.com/documentation/usernotifications/UNTimeIntervalNotificationTrigger\" target=\"_blank\" rel=\"noopener\">UNTimeIntervalNotificationTrigger</a></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 5s 后触发</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> trigger = <span class=\"type\">UNTimeIntervalNotificationTrigger</span>(timeInterval: <span class=\"number\">5</span>, repeats: <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"comment\">// 每隔 60s 重复触发 (重复触发要求时间间隔大于 60s)</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> trigger = <span class=\"type\">UNTimeIntervalNotificationTrigger</span>(timeInterval: <span class=\"number\">60</span>, repeats: <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>日历触发器: <a href=\"https://developer.apple.com/documentation/usernotifications/uncalendarnotificationtrigger\" target=\"_blank\" rel=\"noopener\">UNCalendarNotificationTrigger </a></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//每周一早上 8：00 触发 (周日为一周开始)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> components = <span class=\"type\">DateComponents</span>()</span><br><span class=\"line\">components.weekday = <span class=\"number\">2</span></span><br><span class=\"line\">components.hour = <span class=\"number\">8</span></span><br><span class=\"line\">trigger = <span class=\"type\">UNCalendarNotificationTrigger</span>(dateMatching: components, repeats: <span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 扩展:</span></span><br><span class=\"line\"><span class=\"comment\">DateComponents:  一星期: [第一天为星期天]，[最后一天为星期六]</span></span><br><span class=\"line\"><span class=\"comment\">[ISO 8601]: 一星期: [第一天为星期一]，[最后一天为星期天]</span></span><br><span class=\"line\"><span class=\"comment\">url: https://www.iso.org/iso-8601-date-and-time-format.html</span></span><br><span class=\"line\"><span class=\"comment\">8/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>地理围栏触发器: <a href=\"https://developer.apple.com/documentation/usernotifications/UNLocationNotificationTrigger\" target=\"_blank\" rel=\"noopener\">UNLocationNotificationTrigger</a></p>\n<ol>\n<li>需导入定位库<code>import CoreLocation</code>,</li>\n<li>CLRegion 有 2个子类分别为<ul>\n<li><a href=\"https://developer.apple.com/documentation/corelocation/clcircularregion\" target=\"_blank\" rel=\"noopener\">CLCircularRegion</a>: 经纬度-地理围栏</li>\n<li><a href=\"https://developer.apple.com/documentation/corelocation/clbeaconregion\" target=\"_blank\" rel=\"noopener\">CLBeaconRegion</a>: iBeacon设备-地理围栏</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 经纬度 地理围栏</span></span><br><span class=\"line\"><span class=\"comment\">//距离(30, 30）点 20 米 处发起通知</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> coor = <span class=\"type\">CLLocationCoordinate2D</span>(latitude: <span class=\"number\">30.00</span>, longitude: <span class=\"number\">30.00</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> region = <span class=\"type\">CLCircularRegion</span>(center: coor,radius: <span class=\"number\">20</span>,identifier: <span class=\"string\">\"regionidentifier\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// 退出围栏时触发</span></span><br><span class=\"line\">region.notifyOnExit = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">// 进入围栏时触发</span></span><br><span class=\"line\">region.notifyOnEntry = <span class=\"literal\">true</span></span><br><span class=\"line\">trigger = <span class=\"type\">UNLocationNotificationTrigger</span>(region: region, repeats: isRepeats)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. iBeacon</span></span><br><span class=\"line\"><span class=\"comment\">// 还在探索...</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发送通知</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> req = <span class=\"type\">UNNotificationRequest</span>(identifier: <span class=\"string\">\"identifier\"</span>, content: content, trigger: trigger)</span><br><span class=\"line\"><span class=\"type\">UNUserNotificationCenter</span>.current().add(req, withCompletionHandler: <span class=\"literal\">nil</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-通知接收-1\"><a href=\"#3-通知接收-1\" class=\"headerlink\" title=\"3. 通知接收\"></a>3. 通知接收</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 处理通知激活事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">userNotificationCenter</span><span class=\"params\">(<span class=\"number\">_</span> center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping <span class=\"params\">()</span></span></span> -&gt; <span class=\"type\">Void</span>) &#123;</span><br><span class=\"line\">    completionHandler()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 如果需要在应用内展示通知则可实现该代理函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">userNotificationCenter</span><span class=\"params\">(<span class=\"number\">_</span> center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping <span class=\"params\">(UNNotificationPresentationOptions)</span></span></span> -&gt; <span class=\"type\">Void</span>) &#123;</span><br><span class=\"line\">    completionHandler([.alert,.badge,.sound])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​     </p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"iOS-本地通知\"><a href=\"#iOS-本地通知\" class=\"headerlink\" title=\"iOS-本地通知\"></a>iOS-本地通知</h1><h2 id=\"一-UILocalNotification\"><a href=\"#一-UILocalNotification\" class=\"headerlink\" title=\"一 . UILocalNotification\"></a>一 . UILocalNotification</h2><h4 id=\"0-Api支持\"><a href=\"#0-Api支持\" class=\"headerlink\" title=\"0. Api支持\"></a>0. Api支持</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@available</span>(iOS, introduced: <span class=\"number\">4.0</span>, deprecated: <span class=\"number\">10.0</span>, message: <span class=\"string\">\"Use UserNotifications Framework's UNNotificationRequest\"</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-注册通知\"><a href=\"#1-注册通知\" class=\"headerlink\" title=\"1. 注册通知\"></a>1. 注册通知</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> settings = <span class=\"type\">UIUserNotificationSettings</span>(types: [.alert,.badge,.sound], categories: <span class=\"literal\">nil</span>)</span><br><span class=\"line\"><span class=\"type\">UIApplication</span>.shared.registerUserNotificationSettings(settings)</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-发送通知\"><a href=\"#2-发送通知\" class=\"headerlink\" title=\"2. 发送通知\"></a>2. 发送通知</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 创建本地通知</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> note = <span class=\"type\">UILocalNotification</span>()</span><br><span class=\"line\"><span class=\"comment\">// 设置通知发送的时间</span></span><br><span class=\"line\">note.fireDate = date</span><br><span class=\"line\"><span class=\"comment\">// 标题</span></span><br><span class=\"line\">note.alertTitle = <span class=\"string\">\"通知标题\"</span></span><br><span class=\"line\"><span class=\"comment\">// 设置通知内容</span></span><br><span class=\"line\">note.alertBody = <span class=\"string\">\"通知内容\"</span></span><br><span class=\"line\"><span class=\"comment\">// 设置通过到来的声音</span></span><br><span class=\"line\">note.soundName = <span class=\"type\">UILocalNotificationDefaultSoundName</span></span><br><span class=\"line\"><span class=\"comment\">// 设置应用图标左上角显示的数字</span></span><br><span class=\"line\">note.applicationIconBadgeNumber = <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\">// 设置一些额外的信息</span></span><br><span class=\"line\">note.userInfo = [<span class=\"string\">\"key\"</span>:<span class=\"string\">\"value\"</span>]</span><br><span class=\"line\"><span class=\"comment\">// 执行通知</span></span><br><span class=\"line\"><span class=\"type\">UIApplication</span>.shared.scheduleLocalNotification(note)</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-通知接收\"><a href=\"#3-通知接收\" class=\"headerlink\" title=\"3. 通知接收\"></a>3. 通知接收</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/// app处于前台 / app处于后台时</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">application</span><span class=\"params\">(<span class=\"number\">_</span> application: UIApplication, didReceive notification: UILocalNotification)</span></span> &#123;</span><br><span class=\"line\"><span class=\"comment\">/// doSomeThing  </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"二-UserNotifications\"><a href=\"#二-UserNotifications\" class=\"headerlink\" title=\"二 . UserNotifications\"></a>二 . UserNotifications</h2><h4 id=\"0-Api支持-1\"><a href=\"#0-Api支持-1\" class=\"headerlink\" title=\"0. Api支持:\"></a>0. Api支持:</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@available</span>(iOS <span class=\"number\">10.0</span>, *)</span><br></pre></td></tr></table></figure>\n<h4 id=\"1-注册通知-1\"><a href=\"#1-注册通知-1\" class=\"headerlink\" title=\"1. 注册通知\"></a>1. 注册通知</h4>   <figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> center = <span class=\"type\">UNUserNotificationCenter</span>.current()</span><br><span class=\"line\"><span class=\"comment\">/// 需要响应事件或需在前台时显示通知 需要实现该代理</span></span><br><span class=\"line\">center.delegate = <span class=\"keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"type\">UNUserNotificationCenterDelegate</span></span><br><span class=\"line\"><span class=\"comment\">/// 注册通知响应类型</span></span><br><span class=\"line\">center.requestAuthorization(options: [.alert,.badge,.carPlay,.sound]) &#123; (res, err) <span class=\"keyword\">in</span></span><br><span class=\"line\">   \t<span class=\"keyword\">if</span> res &#123; <span class=\"built_in\">print</span>(err) &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-发送通知-1\"><a href=\"#2-发送通知-1\" class=\"headerlink\" title=\"2. 发送通知\"></a>2. 发送通知</h4><ul>\n<li><p>构建内容: <a href=\"https://developer.apple.com/documentation/usernotifications/unmutablenotificationcontent\" target=\"_blank\" rel=\"noopener\">UNMutableNotificationContent</a></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> content = <span class=\"type\">UNMutableNotificationContent</span>()</span><br><span class=\"line\">content.badge = <span class=\"number\">55</span></span><br><span class=\"line\">content.body = <span class=\"string\">\"body\"</span></span><br><span class=\"line\">content.title = <span class=\"string\">\"title\"</span></span><br><span class=\"line\">content.subtitle = <span class=\"string\">\"subtitle\"</span></span><br><span class=\"line\">content.userInfo = [<span class=\"string\">\"key\"</span>: <span class=\"string\">\"自定义参数\"</span>]</span><br><span class=\"line\">content.launchImageName = <span class=\"string\">\"logo.png\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>构建触发器: <code>UNNotificationTrigger</code></p>\n<ul>\n<li><p>时间触发器: <a href=\"https://developer.apple.com/documentation/usernotifications/UNTimeIntervalNotificationTrigger\" target=\"_blank\" rel=\"noopener\">UNTimeIntervalNotificationTrigger</a></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 5s 后触发</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> trigger = <span class=\"type\">UNTimeIntervalNotificationTrigger</span>(timeInterval: <span class=\"number\">5</span>, repeats: <span class=\"literal\">false</span>)</span><br><span class=\"line\"><span class=\"comment\">// 每隔 60s 重复触发 (重复触发要求时间间隔大于 60s)</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> trigger = <span class=\"type\">UNTimeIntervalNotificationTrigger</span>(timeInterval: <span class=\"number\">60</span>, repeats: <span class=\"literal\">true</span>)</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>日历触发器: <a href=\"https://developer.apple.com/documentation/usernotifications/uncalendarnotificationtrigger\" target=\"_blank\" rel=\"noopener\">UNCalendarNotificationTrigger </a></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//每周一早上 8：00 触发 (周日为一周开始)</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> components = <span class=\"type\">DateComponents</span>()</span><br><span class=\"line\">components.weekday = <span class=\"number\">2</span></span><br><span class=\"line\">components.hour = <span class=\"number\">8</span></span><br><span class=\"line\">trigger = <span class=\"type\">UNCalendarNotificationTrigger</span>(dateMatching: components, repeats: <span class=\"literal\">true</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 扩展:</span></span><br><span class=\"line\"><span class=\"comment\">DateComponents:  一星期: [第一天为星期天]，[最后一天为星期六]</span></span><br><span class=\"line\"><span class=\"comment\">[ISO 8601]: 一星期: [第一天为星期一]，[最后一天为星期天]</span></span><br><span class=\"line\"><span class=\"comment\">url: https://www.iso.org/iso-8601-date-and-time-format.html</span></span><br><span class=\"line\"><span class=\"comment\">8/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>地理围栏触发器: <a href=\"https://developer.apple.com/documentation/usernotifications/UNLocationNotificationTrigger\" target=\"_blank\" rel=\"noopener\">UNLocationNotificationTrigger</a></p>\n<ol>\n<li>需导入定位库<code>import CoreLocation</code>,</li>\n<li>CLRegion 有 2个子类分别为<ul>\n<li><a href=\"https://developer.apple.com/documentation/corelocation/clcircularregion\" target=\"_blank\" rel=\"noopener\">CLCircularRegion</a>: 经纬度-地理围栏</li>\n<li><a href=\"https://developer.apple.com/documentation/corelocation/clbeaconregion\" target=\"_blank\" rel=\"noopener\">CLBeaconRegion</a>: iBeacon设备-地理围栏</li>\n</ul>\n</li>\n</ol>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 经纬度 地理围栏</span></span><br><span class=\"line\"><span class=\"comment\">//距离(30, 30）点 20 米 处发起通知</span></span><br><span class=\"line\"><span class=\"keyword\">let</span> coor = <span class=\"type\">CLLocationCoordinate2D</span>(latitude: <span class=\"number\">30.00</span>, longitude: <span class=\"number\">30.00</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> region = <span class=\"type\">CLCircularRegion</span>(center: coor,radius: <span class=\"number\">20</span>,identifier: <span class=\"string\">\"regionidentifier\"</span>)</span><br><span class=\"line\"><span class=\"comment\">// 退出围栏时触发</span></span><br><span class=\"line\">region.notifyOnExit = <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">// 进入围栏时触发</span></span><br><span class=\"line\">region.notifyOnEntry = <span class=\"literal\">true</span></span><br><span class=\"line\">trigger = <span class=\"type\">UNLocationNotificationTrigger</span>(region: region, repeats: isRepeats)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 2. iBeacon</span></span><br><span class=\"line\"><span class=\"comment\">// 还在探索...</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>发送通知</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> req = <span class=\"type\">UNNotificationRequest</span>(identifier: <span class=\"string\">\"identifier\"</span>, content: content, trigger: trigger)</span><br><span class=\"line\"><span class=\"type\">UNUserNotificationCenter</span>.current().add(req, withCompletionHandler: <span class=\"literal\">nil</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3-通知接收-1\"><a href=\"#3-通知接收-1\" class=\"headerlink\" title=\"3. 通知接收\"></a>3. 通知接收</h4><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 处理通知激活事件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">userNotificationCenter</span><span class=\"params\">(<span class=\"number\">_</span> center: UNUserNotificationCenter, didReceive response: UNNotificationResponse, withCompletionHandler completionHandler: @escaping <span class=\"params\">()</span></span></span> -&gt; <span class=\"type\">Void</span>) &#123;</span><br><span class=\"line\">    completionHandler()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 如果需要在应用内展示通知则可实现该代理函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">userNotificationCenter</span><span class=\"params\">(<span class=\"number\">_</span> center: UNUserNotificationCenter, willPresent notification: UNNotification, withCompletionHandler completionHandler: @escaping <span class=\"params\">(UNNotificationPresentationOptions)</span></span></span> -&gt; <span class=\"type\">Void</span>) &#123;</span><br><span class=\"line\">    completionHandler([.alert,.badge,.sound])</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​     </p>\n"},{"title":"Swift-计算函数运行时间","date":"2018-04-07T16:00:00.000Z","_content":"\n### Date\n\n```swift\n  let t0 = Date()\n  sleep(2)\n  let t1 = Date()\n  print(t1.timeIntervalSince(t0)  * 1000 * 1000 * 1000)\n```\n\n### CFDate\n\n```swift\n  let t0 = CFAbsoluteTimeGetCurrent()\n  sleep(2)\n  let t1 = CFAbsoluteTimeGetCurrent()\n  print((t1 - t0) * 1000 * 1000 * 1000)\n```\n\n### ProcessInfo\n\n```swift\n  let t0 = ProcessInfo.processInfo.systemUptime\n  sleep(2)\n  let t1 = ProcessInfo.processInfo.systemUptime\n  print((t1 - t0) * 1000 * 1000 * 1000)\n```\n\n<!--more-->\n\n### Mach \n\n1. 时间例程依赖于所需要测量的时间域.\n2. 某些情况下使用诸如clock()或getrusage()函数来做些简单的数学运算就足够了.\n\n####mach_absolute_time\n\n1. mach_absolute_time是一个CPU/总线依赖函数，返回一个基于系统启动后的时钟”嘀嗒”数.\n2. mach_absolute_time可以获得纳秒级精度的时间.\n\n```\n// 获取转换因子\nvar info = mach_timebase_info_data_t()\nmach_timebase_info(&info)\n// 获取开始时间\nlet t0 = mach_absolute_time()\nsleep(2)\n// 获取结束时间\nlet t1 = mach_absolute_time()\nprint(UInt32(t1 - t0) * info.numer / info.denom)\n```\n\n3. [Apple 官方对某个开发者的提问What time units does it use?进行的回复](https://developer.apple.com/library/content/qa/qa1398/_index.html)","source":"_posts/[iOS]获取函数运行时间.md","raw":"---\ntitle: Swift-计算函数运行时间\ndate: 2018-04-08 \ncategories: [ios]\ntags: [ios,swift]\n---\n\n### Date\n\n```swift\n  let t0 = Date()\n  sleep(2)\n  let t1 = Date()\n  print(t1.timeIntervalSince(t0)  * 1000 * 1000 * 1000)\n```\n\n### CFDate\n\n```swift\n  let t0 = CFAbsoluteTimeGetCurrent()\n  sleep(2)\n  let t1 = CFAbsoluteTimeGetCurrent()\n  print((t1 - t0) * 1000 * 1000 * 1000)\n```\n\n### ProcessInfo\n\n```swift\n  let t0 = ProcessInfo.processInfo.systemUptime\n  sleep(2)\n  let t1 = ProcessInfo.processInfo.systemUptime\n  print((t1 - t0) * 1000 * 1000 * 1000)\n```\n\n<!--more-->\n\n### Mach \n\n1. 时间例程依赖于所需要测量的时间域.\n2. 某些情况下使用诸如clock()或getrusage()函数来做些简单的数学运算就足够了.\n\n####mach_absolute_time\n\n1. mach_absolute_time是一个CPU/总线依赖函数，返回一个基于系统启动后的时钟”嘀嗒”数.\n2. mach_absolute_time可以获得纳秒级精度的时间.\n\n```\n// 获取转换因子\nvar info = mach_timebase_info_data_t()\nmach_timebase_info(&info)\n// 获取开始时间\nlet t0 = mach_absolute_time()\nsleep(2)\n// 获取结束时间\nlet t1 = mach_absolute_time()\nprint(UInt32(t1 - t0) * info.numer / info.denom)\n```\n\n3. [Apple 官方对某个开发者的提问What time units does it use?进行的回复](https://developer.apple.com/library/content/qa/qa1398/_index.html)","slug":"[iOS]获取函数运行时间","published":1,"updated":"2018-07-10T10:32:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1iw000grfz627wr1qcz","content":"<h3 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> t0 = <span class=\"type\">Date</span>()</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> t1 = <span class=\"type\">Date</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1.timeIntervalSince(t0)  * <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"CFDate\"><a href=\"#CFDate\" class=\"headerlink\" title=\"CFDate\"></a>CFDate</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> t0 = <span class=\"type\">CFAbsoluteTimeGetCurrent</span>()</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> t1 = <span class=\"type\">CFAbsoluteTimeGetCurrent</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>((t1 - t0) * <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ProcessInfo\"><a href=\"#ProcessInfo\" class=\"headerlink\" title=\"ProcessInfo\"></a>ProcessInfo</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> t0 = <span class=\"type\">ProcessInfo</span>.processInfo.systemUptime</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> t1 = <span class=\"type\">ProcessInfo</span>.processInfo.systemUptime</span><br><span class=\"line\"><span class=\"built_in\">print</span>((t1 - t0) * <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"Mach\"><a href=\"#Mach\" class=\"headerlink\" title=\"Mach\"></a>Mach</h3><ol>\n<li>时间例程依赖于所需要测量的时间域.</li>\n<li>某些情况下使用诸如clock()或getrusage()函数来做些简单的数学运算就足够了.</li>\n</ol>\n<p>####mach_absolute_time</p>\n<ol>\n<li>mach_absolute_time是一个CPU/总线依赖函数，返回一个基于系统启动后的时钟”嘀嗒”数.</li>\n<li>mach_absolute_time可以获得纳秒级精度的时间.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 获取转换因子</span><br><span class=\"line\">var info = mach_timebase_info_data_t()</span><br><span class=\"line\">mach_timebase_info(&amp;info)</span><br><span class=\"line\">// 获取开始时间</span><br><span class=\"line\">let t0 = mach_absolute_time()</span><br><span class=\"line\">sleep(2)</span><br><span class=\"line\">// 获取结束时间</span><br><span class=\"line\">let t1 = mach_absolute_time()</span><br><span class=\"line\">print(UInt32(t1 - t0) * info.numer / info.denom)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><a href=\"https://developer.apple.com/library/content/qa/qa1398/_index.html\" target=\"_blank\" rel=\"noopener\">Apple 官方对某个开发者的提问What time units does it use?进行的回复</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> t0 = <span class=\"type\">Date</span>()</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> t1 = <span class=\"type\">Date</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(t1.timeIntervalSince(t0)  * <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"CFDate\"><a href=\"#CFDate\" class=\"headerlink\" title=\"CFDate\"></a>CFDate</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> t0 = <span class=\"type\">CFAbsoluteTimeGetCurrent</span>()</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> t1 = <span class=\"type\">CFAbsoluteTimeGetCurrent</span>()</span><br><span class=\"line\"><span class=\"built_in\">print</span>((t1 - t0) * <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ProcessInfo\"><a href=\"#ProcessInfo\" class=\"headerlink\" title=\"ProcessInfo\"></a>ProcessInfo</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> t0 = <span class=\"type\">ProcessInfo</span>.processInfo.systemUptime</span><br><span class=\"line\">sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> t1 = <span class=\"type\">ProcessInfo</span>.processInfo.systemUptime</span><br><span class=\"line\"><span class=\"built_in\">print</span>((t1 - t0) * <span class=\"number\">1000</span> * <span class=\"number\">1000</span> * <span class=\"number\">1000</span>)</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"Mach\"><a href=\"#Mach\" class=\"headerlink\" title=\"Mach\"></a>Mach</h3><ol>\n<li>时间例程依赖于所需要测量的时间域.</li>\n<li>某些情况下使用诸如clock()或getrusage()函数来做些简单的数学运算就足够了.</li>\n</ol>\n<p>####mach_absolute_time</p>\n<ol>\n<li>mach_absolute_time是一个CPU/总线依赖函数，返回一个基于系统启动后的时钟”嘀嗒”数.</li>\n<li>mach_absolute_time可以获得纳秒级精度的时间.</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 获取转换因子</span><br><span class=\"line\">var info = mach_timebase_info_data_t()</span><br><span class=\"line\">mach_timebase_info(&amp;info)</span><br><span class=\"line\">// 获取开始时间</span><br><span class=\"line\">let t0 = mach_absolute_time()</span><br><span class=\"line\">sleep(2)</span><br><span class=\"line\">// 获取结束时间</span><br><span class=\"line\">let t1 = mach_absolute_time()</span><br><span class=\"line\">print(UInt32(t1 - t0) * info.numer / info.denom)</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li><a href=\"https://developer.apple.com/library/content/qa/qa1398/_index.html\" target=\"_blank\" rel=\"noopener\">Apple 官方对某个开发者的提问What time units does it use?进行的回复</a></li>\n</ol>"},{"title":"javascript:将callback函数封装为promise对象.","date":"2018-07-08T16:00:00.000Z","description":"将callback函数封装为promise对象.","_content":"\n# 将callback函数封装为promise对象\n\n[代码传送门](https://github.com/linhay/dustdin/blob/master/javascript/callback%20to%20promise.js)\n\n### 1. callback函数:\n\n```javascript\n// callback\nfunction funcCallback(value1, value2, callback) {\n    setTimeout(function () {\n        callback('value1: ' + value1 + \" | \" + 'value2: ' + value2)\n    }, 2000)\n}\n\n// 调用\nfuncCallback(1, 2, function (res) {\n    console.log(\"--funcCallback--\")\n    console.log(res)\n})\n\n/* log\n--funcCallback--\nvalue1: 1 | value2: 2\n*/\n```\n\n### 2. Promise形式封装:\n\n```javascript\n// primse\nfunction funcPromise(value1, value2) {\n    return new Promise((resolve, reject) => {\n        funcCallback(value1, value2, resolve, reject);\n    });\n}\n\n// 调用\nfuncPromise(3,4).then((result) => {\n    console.log(\"--funcPromise--\")\n    console.log(result)\n}).catch((err) => {\n    console.log(\"--funcPromise--\")\n    console.log(err)\n});\n\n/* log\n--funcPromise--\nvalue1: 3 | value2: 4\n*/\n```\n\n### 3. async/await形式(我没理解错的话其实是Promise的语法糖?):\n\n```javascript\nasync function funcAsync(value1, value2) {\n    try {\n        let result = await funcPromise(value1, value2);\n        console.log(\"--funcAsync--\")\n        console.log(result)\n    } catch (err) {\n        console.log(\"--funcAsync--\")\n        console.log(err)\n    }\n}\n// 调用\nfuncAsync(5,6)\n\n/*\n--funcAsync--\nvalue1: 5 | value2: 6\n*/\n```\n","source":"_posts/[javascript]将callback函数封装为promise对象.md","raw":"---\ntitle: javascript:将callback函数封装为promise对象.\ndate: 2018-07-09\ncategories: [javascript]\ntags: [javascript,function,callback,promise]\ndescription: 将callback函数封装为promise对象.\n---\n\n# 将callback函数封装为promise对象\n\n[代码传送门](https://github.com/linhay/dustdin/blob/master/javascript/callback%20to%20promise.js)\n\n### 1. callback函数:\n\n```javascript\n// callback\nfunction funcCallback(value1, value2, callback) {\n    setTimeout(function () {\n        callback('value1: ' + value1 + \" | \" + 'value2: ' + value2)\n    }, 2000)\n}\n\n// 调用\nfuncCallback(1, 2, function (res) {\n    console.log(\"--funcCallback--\")\n    console.log(res)\n})\n\n/* log\n--funcCallback--\nvalue1: 1 | value2: 2\n*/\n```\n\n### 2. Promise形式封装:\n\n```javascript\n// primse\nfunction funcPromise(value1, value2) {\n    return new Promise((resolve, reject) => {\n        funcCallback(value1, value2, resolve, reject);\n    });\n}\n\n// 调用\nfuncPromise(3,4).then((result) => {\n    console.log(\"--funcPromise--\")\n    console.log(result)\n}).catch((err) => {\n    console.log(\"--funcPromise--\")\n    console.log(err)\n});\n\n/* log\n--funcPromise--\nvalue1: 3 | value2: 4\n*/\n```\n\n### 3. async/await形式(我没理解错的话其实是Promise的语法糖?):\n\n```javascript\nasync function funcAsync(value1, value2) {\n    try {\n        let result = await funcPromise(value1, value2);\n        console.log(\"--funcAsync--\")\n        console.log(result)\n    } catch (err) {\n        console.log(\"--funcAsync--\")\n        console.log(err)\n    }\n}\n// 调用\nfuncAsync(5,6)\n\n/*\n--funcAsync--\nvalue1: 5 | value2: 6\n*/\n```\n","slug":"[javascript]将callback函数封装为promise对象","published":1,"updated":"2018-07-10T10:32:21.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1j0000lrfz63cznea9s","content":"<h1 id=\"将callback函数封装为promise对象\"><a href=\"#将callback函数封装为promise对象\" class=\"headerlink\" title=\"将callback函数封装为promise对象\"></a>将callback函数封装为promise对象</h1><p><a href=\"https://github.com/linhay/dustdin/blob/master/javascript/callback%20to%20promise.js\" target=\"_blank\" rel=\"noopener\">代码传送门</a></p>\n<h3 id=\"1-callback函数\"><a href=\"#1-callback函数\" class=\"headerlink\" title=\"1. callback函数:\"></a>1. callback函数:</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// callback</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funcCallback</span>(<span class=\"params\">value1, value2, callback</span>) </span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        callback(<span class=\"string\">'value1: '</span> + value1 + <span class=\"string\">\" | \"</span> + <span class=\"string\">'value2: '</span> + value2)</span><br><span class=\"line\">    &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">funcCallback(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcCallback--\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* log</span></span><br><span class=\"line\"><span class=\"comment\">--funcCallback--</span></span><br><span class=\"line\"><span class=\"comment\">value1: 1 | value2: 2</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-Promise形式封装\"><a href=\"#2-Promise形式封装\" class=\"headerlink\" title=\"2. Promise形式封装:\"></a>2. Promise形式封装:</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// primse</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funcPromise</span>(<span class=\"params\">value1, value2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        funcCallback(value1, value2, resolve, reject);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">funcPromise(<span class=\"number\">3</span>,<span class=\"number\">4</span>).then(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcPromise--\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcPromise--\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* log</span></span><br><span class=\"line\"><span class=\"comment\">--funcPromise--</span></span><br><span class=\"line\"><span class=\"comment\">value1: 3 | value2: 4</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-async-await形式-我没理解错的话其实是Promise的语法糖\"><a href=\"#3-async-await形式-我没理解错的话其实是Promise的语法糖\" class=\"headerlink\" title=\"3. async/await形式(我没理解错的话其实是Promise的语法糖?):\"></a>3. async/await形式(我没理解错的话其实是Promise的语法糖?):</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funcAsync</span>(<span class=\"params\">value1, value2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> funcPromise(value1, value2);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcAsync--\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcAsync--\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">funcAsync(<span class=\"number\">5</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">--funcAsync--</span></span><br><span class=\"line\"><span class=\"comment\">value1: 5 | value2: 6</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"将callback函数封装为promise对象\"><a href=\"#将callback函数封装为promise对象\" class=\"headerlink\" title=\"将callback函数封装为promise对象\"></a>将callback函数封装为promise对象</h1><p><a href=\"https://github.com/linhay/dustdin/blob/master/javascript/callback%20to%20promise.js\" target=\"_blank\" rel=\"noopener\">代码传送门</a></p>\n<h3 id=\"1-callback函数\"><a href=\"#1-callback函数\" class=\"headerlink\" title=\"1. callback函数:\"></a>1. callback函数:</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// callback</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funcCallback</span>(<span class=\"params\">value1, value2, callback</span>) </span>&#123;</span><br><span class=\"line\">    setTimeout(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        callback(<span class=\"string\">'value1: '</span> + value1 + <span class=\"string\">\" | \"</span> + <span class=\"string\">'value2: '</span> + value2)</span><br><span class=\"line\">    &#125;, <span class=\"number\">2000</span>)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">funcCallback(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">res</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcCallback--\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(res)</span><br><span class=\"line\">&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* log</span></span><br><span class=\"line\"><span class=\"comment\">--funcCallback--</span></span><br><span class=\"line\"><span class=\"comment\">value1: 1 | value2: 2</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-Promise形式封装\"><a href=\"#2-Promise形式封装\" class=\"headerlink\" title=\"2. Promise形式封装:\"></a>2. Promise形式封装:</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// primse</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funcPromise</span>(<span class=\"params\">value1, value2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        funcCallback(value1, value2, resolve, reject);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">funcPromise(<span class=\"number\">3</span>,<span class=\"number\">4</span>).then(<span class=\"function\">(<span class=\"params\">result</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcPromise--\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">&#125;).catch(<span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcPromise--\"</span>)</span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* log</span></span><br><span class=\"line\"><span class=\"comment\">--funcPromise--</span></span><br><span class=\"line\"><span class=\"comment\">value1: 3 | value2: 4</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"3-async-await形式-我没理解错的话其实是Promise的语法糖\"><a href=\"#3-async-await形式-我没理解错的话其实是Promise的语法糖\" class=\"headerlink\" title=\"3. async/await形式(我没理解错的话其实是Promise的语法糖?):\"></a>3. async/await形式(我没理解错的话其实是Promise的语法糖?):</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funcAsync</span>(<span class=\"params\">value1, value2</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> result = <span class=\"keyword\">await</span> funcPromise(value1, value2);</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcAsync--\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(result)</span><br><span class=\"line\">    &#125; <span class=\"keyword\">catch</span> (err) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(<span class=\"string\">\"--funcAsync--\"</span>)</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.log(err)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用</span></span><br><span class=\"line\">funcAsync(<span class=\"number\">5</span>,<span class=\"number\">6</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">--funcAsync--</span></span><br><span class=\"line\"><span class=\"comment\">value1: 5 | value2: 6</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n"},{"title":"Docker 部署","date":"2018-09-04T16:00:00.000Z","description":"Docker","_content":"\n# Docker部署\n\n```shell\n# 更新包管理仓库\napt-get update\n# 增加CA证书\napt-get install apt-transport-https ca-certificates -y\n# 添加GPG Key\nsudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n# 创建docker.list文件\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" > /etc/apt/sources.list.d/docker.list\n\n# 更新包管理仓库\napt-get update\n# 清除过时的源\napt-get purge lxc-docker\n# 验证下APT是从正确的库源下载应用的\napt-cache policy docker-engine\n# 更新包管理仓库\napt-get update\n# 安装 linux-image-extra\napt-get install linux-image-extra-$(uname -r)\n# 更新包管理仓库\napt-get update\n# 通过apt命令在线安装docker\napt-get install docker-engine -y\n\n# 开启docker的守护进程（Docker服务开启）\nservice docker start\n# Hello world的来测试安装成功\ndocker run hello-world\n# 查看正在运行的容器\ndocker ps -ls\n```","source":"_posts/[server]Docker.md","raw":"---\ntitle: Docker 部署\ndate: 2018-09-05\ncategories: [server]\ntags: [docker,server,ubuntu]\ndescription: Docker\n---\n\n# Docker部署\n\n```shell\n# 更新包管理仓库\napt-get update\n# 增加CA证书\napt-get install apt-transport-https ca-certificates -y\n# 添加GPG Key\nsudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D\n# 创建docker.list文件\necho \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" > /etc/apt/sources.list.d/docker.list\n\n# 更新包管理仓库\napt-get update\n# 清除过时的源\napt-get purge lxc-docker\n# 验证下APT是从正确的库源下载应用的\napt-cache policy docker-engine\n# 更新包管理仓库\napt-get update\n# 安装 linux-image-extra\napt-get install linux-image-extra-$(uname -r)\n# 更新包管理仓库\napt-get update\n# 通过apt命令在线安装docker\napt-get install docker-engine -y\n\n# 开启docker的守护进程（Docker服务开启）\nservice docker start\n# Hello world的来测试安装成功\ndocker run hello-world\n# 查看正在运行的容器\ndocker ps -ls\n```","slug":"[server]Docker","published":1,"updated":"2018-09-05T07:27:20.867Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1j6000nrfz6nkhfkjtf","content":"<h1 id=\"Docker部署\"><a href=\"#Docker部署\" class=\"headerlink\" title=\"Docker部署\"></a>Docker部署</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 增加CA证书</span><br><span class=\"line\">apt-get install apt-transport-https ca-certificates -y</span><br><span class=\"line\"><span class=\"meta\">#</span> 添加GPG Key</span><br><span class=\"line\">sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class=\"line\"><span class=\"meta\">#</span> 创建docker.list文件</span><br><span class=\"line\">echo \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" &gt; /etc/apt/sources.list.d/docker.list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 清除过时的源</span><br><span class=\"line\">apt-get purge lxc-docker</span><br><span class=\"line\"><span class=\"meta\">#</span> 验证下APT是从正确的库源下载应用的</span><br><span class=\"line\">apt-cache policy docker-engine</span><br><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 linux-image-extra</span><br><span class=\"line\">apt-get install linux-image-extra-$(uname -r)</span><br><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 通过apt命令在线安装docker</span><br><span class=\"line\">apt-get install docker-engine -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 开启docker的守护进程（Docker服务开启）</span><br><span class=\"line\">service docker start</span><br><span class=\"line\"><span class=\"meta\">#</span> Hello world的来测试安装成功</span><br><span class=\"line\">docker run hello-world</span><br><span class=\"line\"><span class=\"meta\">#</span> 查看正在运行的容器</span><br><span class=\"line\">docker ps -ls</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Docker部署\"><a href=\"#Docker部署\" class=\"headerlink\" title=\"Docker部署\"></a>Docker部署</h1><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 增加CA证书</span><br><span class=\"line\">apt-get install apt-transport-https ca-certificates -y</span><br><span class=\"line\"><span class=\"meta\">#</span> 添加GPG Key</span><br><span class=\"line\">sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D</span><br><span class=\"line\"><span class=\"meta\">#</span> 创建docker.list文件</span><br><span class=\"line\">echo \"deb https://apt.dockerproject.org/repo ubuntu-xenial main\" &gt; /etc/apt/sources.list.d/docker.list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 清除过时的源</span><br><span class=\"line\">apt-get purge lxc-docker</span><br><span class=\"line\"><span class=\"meta\">#</span> 验证下APT是从正确的库源下载应用的</span><br><span class=\"line\">apt-cache policy docker-engine</span><br><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 安装 linux-image-extra</span><br><span class=\"line\">apt-get install linux-image-extra-$(uname -r)</span><br><span class=\"line\"><span class=\"meta\">#</span> 更新包管理仓库</span><br><span class=\"line\">apt-get update</span><br><span class=\"line\"><span class=\"meta\">#</span> 通过apt命令在线安装docker</span><br><span class=\"line\">apt-get install docker-engine -y</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span> 开启docker的守护进程（Docker服务开启）</span><br><span class=\"line\">service docker start</span><br><span class=\"line\"><span class=\"meta\">#</span> Hello world的来测试安装成功</span><br><span class=\"line\">docker run hello-world</span><br><span class=\"line\"><span class=\"meta\">#</span> 查看正在运行的容器</span><br><span class=\"line\">docker ps -ls</span><br></pre></td></tr></table></figure>"},{"title":"nginx配置","date":"2018-04-08T16:00:00.000Z","description":"Nginx配置https与端口映射.","_content":"\n# nginx配置\n\n### 安装\n\n```shell\nubuntu\napt-get install nginx\n```\n\n### 命令\n\n1. 启动\n\n   ```\n   nginx\n   ```\n\n2. 重新加载配置文件\n\n   ```\n   nginx -s reload\n   ```\n\n3. 停止\n\n   ```\n   nginx -s stop\n   ```\n\n### 目录\n\n1. nginx.conf: `/etc/nginx/nginx.conf`\n2. log: `/var/log/nginx/access.log`\n\n### https设置\n\n1. 证书申请\n\n2. 一些注意事项\n\n   1. 云厂商**安全组**配置相应**入站端口规则**\n   2. 二级域名也需要添加至dns解析中\n   3. dv型ssl证书二级域名页需要单独申请\n\n3. nginx配置\n\n   1. 将相应证书放置于/etc/nginx目录中\n   2. nginx.conf添加443端口配置\n\n   ```ruby\n   server {\n   \tlisten 443;\n   \tserver_name www.linhey.com; #填写绑定证书的域名\n   \tssl on;\n   \tssl_certificate 1_www.linhey.com_bundle.crt;\n   \tssl_certificate_key 2_www.linhey.com.key;\n   \tssl_session_timeout 5m;\n   \tssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置\n   \tssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置\n   \tssl_prefer_server_ciphers on;\n   \tlocation / {\n   \t\tproxy_redirect off;\n   \t\tproxy_pass http://localhost:3000;\n   \t\t}\n   \t}\n   ```\n\n### http自动跳转https\n\n```ruby\n    server{\n        listen 80;\n        server_name www.linhey.com;\n        # 转向对应的https链接\n        rewrite ^(.*) https://$server_name$request_uri;\n    }\n\n    server {\n        listen 443;\n        server_name www.linhey.com;\n        ssl on;\n        ssl_certificate 1_www.linhey.com_bundle.crt;\n        ssl_certificate_key 2_www.linhey.com.key;\n        ssl_session_timeout 5m;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n        ssl_prefer_server_ciphers on;\n        location / {\n            proxy_redirect off;\n            proxy_pass http://localhost:3000;\n        }\n    }\n```\n\n### 静态资源配置\n\n```ruby\n server {\n        listen 443;\n        server_name www.linhey.com;\n\t\t# 多个 location 依次匹配,直至匹配成功.\n     \n\t\tlocation /JSBridge {\n\t\t# alias响应的路径：配置路径+静态文件(去除location中配置的路径)\n\t\t# 查询路径: /root/html/JSBridge\n        alias /root/html/JSBridge;\n        autoindex on;\n        }\n     \n\t\tlocation /blog {\n            autoindex on;\n            autoindex_exact_size off;\n            autoindex_localtime on;\n            # 优先加载索引文件\n            index index.html;\n            # root响应的路径：配置的路径+完整访问路径(完整的location配置路径+静态文件)\n            # 查询路径: /root/html/blog\n            root /root/html;  \n        }\n    }\n```\n\n\n\n### 端口映射\n\n```ruby\n server {\n        listen 443;\n        server_name www.linhey.com;\n        location / {\n            proxy_redirect off;\n            # 映射本地端口\n            proxy_pass http://localhost:3000;\n        }\n    }\n```\n\n### 多端口映射\n\n```ruby\n server {\n        listen 443;\n        server_name www.linhey.com;\n        location / {\n            proxy_redirect off;\n\t\t\t# 映射本地端口\n            proxy_pass http://localhost:3000;\n        }\n    }\n\n server {\n        listen 443;\n        server_name api.linhey.com;\n        location / {\n            proxy_redirect off;\n\t\t\t# 映射本地端口\n            proxy_pass http://localhost:3001;\n        }\n    }\n```\n\n### error\n\n1.Permission denied\n\n```\nuser nginx; => user root;\n```\n\n","source":"_posts/[server]Nginx-配置.md","raw":"---\ntitle: nginx配置\ndate: 2018-04-09\ncategories: [server]\ntags: [nginx,server,ubuntu]\ndescription: Nginx配置https与端口映射.\n---\n\n# nginx配置\n\n### 安装\n\n```shell\nubuntu\napt-get install nginx\n```\n\n### 命令\n\n1. 启动\n\n   ```\n   nginx\n   ```\n\n2. 重新加载配置文件\n\n   ```\n   nginx -s reload\n   ```\n\n3. 停止\n\n   ```\n   nginx -s stop\n   ```\n\n### 目录\n\n1. nginx.conf: `/etc/nginx/nginx.conf`\n2. log: `/var/log/nginx/access.log`\n\n### https设置\n\n1. 证书申请\n\n2. 一些注意事项\n\n   1. 云厂商**安全组**配置相应**入站端口规则**\n   2. 二级域名也需要添加至dns解析中\n   3. dv型ssl证书二级域名页需要单独申请\n\n3. nginx配置\n\n   1. 将相应证书放置于/etc/nginx目录中\n   2. nginx.conf添加443端口配置\n\n   ```ruby\n   server {\n   \tlisten 443;\n   \tserver_name www.linhey.com; #填写绑定证书的域名\n   \tssl on;\n   \tssl_certificate 1_www.linhey.com_bundle.crt;\n   \tssl_certificate_key 2_www.linhey.com.key;\n   \tssl_session_timeout 5m;\n   \tssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置\n   \tssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#按照这个套件配置\n   \tssl_prefer_server_ciphers on;\n   \tlocation / {\n   \t\tproxy_redirect off;\n   \t\tproxy_pass http://localhost:3000;\n   \t\t}\n   \t}\n   ```\n\n### http自动跳转https\n\n```ruby\n    server{\n        listen 80;\n        server_name www.linhey.com;\n        # 转向对应的https链接\n        rewrite ^(.*) https://$server_name$request_uri;\n    }\n\n    server {\n        listen 443;\n        server_name www.linhey.com;\n        ssl on;\n        ssl_certificate 1_www.linhey.com_bundle.crt;\n        ssl_certificate_key 2_www.linhey.com.key;\n        ssl_session_timeout 5m;\n        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n        ssl_prefer_server_ciphers on;\n        location / {\n            proxy_redirect off;\n            proxy_pass http://localhost:3000;\n        }\n    }\n```\n\n### 静态资源配置\n\n```ruby\n server {\n        listen 443;\n        server_name www.linhey.com;\n\t\t# 多个 location 依次匹配,直至匹配成功.\n     \n\t\tlocation /JSBridge {\n\t\t# alias响应的路径：配置路径+静态文件(去除location中配置的路径)\n\t\t# 查询路径: /root/html/JSBridge\n        alias /root/html/JSBridge;\n        autoindex on;\n        }\n     \n\t\tlocation /blog {\n            autoindex on;\n            autoindex_exact_size off;\n            autoindex_localtime on;\n            # 优先加载索引文件\n            index index.html;\n            # root响应的路径：配置的路径+完整访问路径(完整的location配置路径+静态文件)\n            # 查询路径: /root/html/blog\n            root /root/html;  \n        }\n    }\n```\n\n\n\n### 端口映射\n\n```ruby\n server {\n        listen 443;\n        server_name www.linhey.com;\n        location / {\n            proxy_redirect off;\n            # 映射本地端口\n            proxy_pass http://localhost:3000;\n        }\n    }\n```\n\n### 多端口映射\n\n```ruby\n server {\n        listen 443;\n        server_name www.linhey.com;\n        location / {\n            proxy_redirect off;\n\t\t\t# 映射本地端口\n            proxy_pass http://localhost:3000;\n        }\n    }\n\n server {\n        listen 443;\n        server_name api.linhey.com;\n        location / {\n            proxy_redirect off;\n\t\t\t# 映射本地端口\n            proxy_pass http://localhost:3001;\n        }\n    }\n```\n\n### error\n\n1.Permission denied\n\n```\nuser nginx; => user root;\n```\n\n","slug":"[server]Nginx-配置","published":1,"updated":"2018-08-08T05:56:26.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1j9000srfz6skr9lsuk","content":"<h1 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h1><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu</span><br><span class=\"line\">apt-get install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><ol>\n<li><p>启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新加载配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>停止</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s stop</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><ol>\n<li>nginx.conf: <code>/etc/nginx/nginx.conf</code></li>\n<li>log: <code>/var/log/nginx/access.log</code></li>\n</ol>\n<h3 id=\"https设置\"><a href=\"#https设置\" class=\"headerlink\" title=\"https设置\"></a>https设置</h3><ol>\n<li><p>证书申请</p>\n</li>\n<li><p>一些注意事项</p>\n<ol>\n<li>云厂商<strong>安全组</strong>配置相应<strong>入站端口规则</strong></li>\n<li>二级域名也需要添加至dns解析中</li>\n<li>dv型ssl证书二级域名页需要单独申请</li>\n</ol>\n</li>\n<li><p>nginx配置</p>\n<ol>\n<li>将相应证书放置于/etc/nginx目录中</li>\n<li>nginx.conf添加443端口配置</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">\tlisten <span class=\"number\">443</span>;</span><br><span class=\"line\">\tserver_name www.linhey.com; <span class=\"comment\">#填写绑定证书的域名</span></span><br><span class=\"line\">\tssl on;</span><br><span class=\"line\">\tssl_certificate <span class=\"number\">1_</span>www.linhey.com_bundle.crt;</span><br><span class=\"line\">\tssl_certificate_key <span class=\"number\">2_</span>www.linhey.com.key;</span><br><span class=\"line\">\tssl_session_timeout <span class=\"number\">5</span>m;</span><br><span class=\"line\">\tssl_protocols TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>; <span class=\"comment\">#按照这个协议配置</span></span><br><span class=\"line\">\tssl_ciphers ECDHE-RSA-AES128-GCM-<span class=\"symbol\">SHA256:</span><span class=\"symbol\">HIGH:</span>!<span class=\"symbol\">aNULL:</span>!<span class=\"symbol\">MD5:</span>!<span class=\"symbol\">RC4:</span>!DHE;<span class=\"comment\">#按照这个套件配置</span></span><br><span class=\"line\">\tssl_prefer_server_ciphers on;</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\tproxy_redirect off;</span><br><span class=\"line\">\t\tproxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"http自动跳转https\"><a href=\"#http自动跳转https\" class=\"headerlink\" title=\"http自动跳转https\"></a>http自动跳转https</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">    listen <span class=\"number\">80</span>;</span><br><span class=\"line\">    server_name www.linhey.com;</span><br><span class=\"line\">    <span class=\"comment\"># 转向对应的https链接</span></span><br><span class=\"line\">    rewrite ^(.*) <span class=\"symbol\">https:</span>/<span class=\"regexp\">/$server_name$request_uri;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">server &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    listen 443;</span></span><br><span class=\"line\"><span class=\"regexp\">    server_name www.linhey.com;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl on;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_certificate 1_www.linhey.com_bundle.crt;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_certificate_key 2_www.linhey.com.key;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_session_timeout 5m;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_prefer_server_ciphers on;</span></span><br><span class=\"line\"><span class=\"regexp\">    location /</span> &#123;</span><br><span class=\"line\">        proxy_redirect off;</span><br><span class=\"line\">        proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"静态资源配置\"><a href=\"#静态资源配置\" class=\"headerlink\" title=\"静态资源配置\"></a>静态资源配置</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen <span class=\"number\">443</span>;</span><br><span class=\"line\">       server_name www.linhey.com;</span><br><span class=\"line\">\t<span class=\"comment\"># 多个 location 依次匹配,直至匹配成功.</span></span><br><span class=\"line\">    </span><br><span class=\"line\">\tlocation /JSBridge &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># alias响应的路径：配置路径+静态文件(去除location中配置的路径)</span></span><br><span class=\"line\">\t<span class=\"comment\"># 查询路径: /root/html/JSBridge</span></span><br><span class=\"line\">       <span class=\"keyword\">alias</span> /root/html/JSBridge;</span><br><span class=\"line\">       autoindex on;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tlocation /blog &#123;</span><br><span class=\"line\">           autoindex on;</span><br><span class=\"line\">           autoindex_exact_size off;</span><br><span class=\"line\">           autoindex_localtime on;</span><br><span class=\"line\">           <span class=\"comment\"># 优先加载索引文件</span></span><br><span class=\"line\">           index index.html;</span><br><span class=\"line\">           <span class=\"comment\"># root响应的路径：配置的路径+完整访问路径(完整的location配置路径+静态文件)</span></span><br><span class=\"line\">           <span class=\"comment\"># 查询路径: /root/html/blog</span></span><br><span class=\"line\">           root /root/html;  </span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"端口映射\"><a href=\"#端口映射\" class=\"headerlink\" title=\"端口映射\"></a>端口映射</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen <span class=\"number\">443</span>;</span><br><span class=\"line\">       server_name www.linhey.com;</span><br><span class=\"line\">       location / &#123;</span><br><span class=\"line\">           proxy_redirect off;</span><br><span class=\"line\">           <span class=\"comment\"># 映射本地端口</span></span><br><span class=\"line\">           proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">       &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">   &#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"多端口映射\"><a href=\"#多端口映射\" class=\"headerlink\" title=\"多端口映射\"></a>多端口映射</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen <span class=\"number\">443</span>;</span><br><span class=\"line\">       server_name www.linhey.com;</span><br><span class=\"line\">       location / &#123;</span><br><span class=\"line\">           proxy_redirect off;</span><br><span class=\"line\">\t\t<span class=\"comment\"># 映射本地端口</span></span><br><span class=\"line\">           proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">       &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">   &#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">server &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">       listen 443;</span></span><br><span class=\"line\"><span class=\"regexp\">       server_name api.linhey.com;</span></span><br><span class=\"line\"><span class=\"regexp\">       location /</span> &#123;</span><br><span class=\"line\">           proxy_redirect off;</span><br><span class=\"line\">\t\t<span class=\"comment\"># 映射本地端口</span></span><br><span class=\"line\">           proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3001;</span></span><br><span class=\"line\"><span class=\"regexp\">       &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">   &#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"error\"><a href=\"#error\" class=\"headerlink\" title=\"error\"></a>error</h3><p>1.Permission denied</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user nginx; =&gt; user root;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"nginx配置\"><a href=\"#nginx配置\" class=\"headerlink\" title=\"nginx配置\"></a>nginx配置</h1><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ubuntu</span><br><span class=\"line\">apt-get install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><ol>\n<li><p>启动</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重新加载配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>停止</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s stop</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><ol>\n<li>nginx.conf: <code>/etc/nginx/nginx.conf</code></li>\n<li>log: <code>/var/log/nginx/access.log</code></li>\n</ol>\n<h3 id=\"https设置\"><a href=\"#https设置\" class=\"headerlink\" title=\"https设置\"></a>https设置</h3><ol>\n<li><p>证书申请</p>\n</li>\n<li><p>一些注意事项</p>\n<ol>\n<li>云厂商<strong>安全组</strong>配置相应<strong>入站端口规则</strong></li>\n<li>二级域名也需要添加至dns解析中</li>\n<li>dv型ssl证书二级域名页需要单独申请</li>\n</ol>\n</li>\n<li><p>nginx配置</p>\n<ol>\n<li>将相应证书放置于/etc/nginx目录中</li>\n<li>nginx.conf添加443端口配置</li>\n</ol>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">\tlisten <span class=\"number\">443</span>;</span><br><span class=\"line\">\tserver_name www.linhey.com; <span class=\"comment\">#填写绑定证书的域名</span></span><br><span class=\"line\">\tssl on;</span><br><span class=\"line\">\tssl_certificate <span class=\"number\">1_</span>www.linhey.com_bundle.crt;</span><br><span class=\"line\">\tssl_certificate_key <span class=\"number\">2_</span>www.linhey.com.key;</span><br><span class=\"line\">\tssl_session_timeout <span class=\"number\">5</span>m;</span><br><span class=\"line\">\tssl_protocols TLSv1 TLSv1.<span class=\"number\">1</span> TLSv1.<span class=\"number\">2</span>; <span class=\"comment\">#按照这个协议配置</span></span><br><span class=\"line\">\tssl_ciphers ECDHE-RSA-AES128-GCM-<span class=\"symbol\">SHA256:</span><span class=\"symbol\">HIGH:</span>!<span class=\"symbol\">aNULL:</span>!<span class=\"symbol\">MD5:</span>!<span class=\"symbol\">RC4:</span>!DHE;<span class=\"comment\">#按照这个套件配置</span></span><br><span class=\"line\">\tssl_prefer_server_ciphers on;</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\tproxy_redirect off;</span><br><span class=\"line\">\t\tproxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">\t\t&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">\t&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"http自动跳转https\"><a href=\"#http自动跳转https\" class=\"headerlink\" title=\"http自动跳转https\"></a>http自动跳转https</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">    listen <span class=\"number\">80</span>;</span><br><span class=\"line\">    server_name www.linhey.com;</span><br><span class=\"line\">    <span class=\"comment\"># 转向对应的https链接</span></span><br><span class=\"line\">    rewrite ^(.*) <span class=\"symbol\">https:</span>/<span class=\"regexp\">/$server_name$request_uri;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">server &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">    listen 443;</span></span><br><span class=\"line\"><span class=\"regexp\">    server_name www.linhey.com;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl on;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_certificate 1_www.linhey.com_bundle.crt;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_certificate_key 2_www.linhey.com.key;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_session_timeout 5m;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span></span><br><span class=\"line\"><span class=\"regexp\">    ssl_prefer_server_ciphers on;</span></span><br><span class=\"line\"><span class=\"regexp\">    location /</span> &#123;</span><br><span class=\"line\">        proxy_redirect off;</span><br><span class=\"line\">        proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">    &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"静态资源配置\"><a href=\"#静态资源配置\" class=\"headerlink\" title=\"静态资源配置\"></a>静态资源配置</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen <span class=\"number\">443</span>;</span><br><span class=\"line\">       server_name www.linhey.com;</span><br><span class=\"line\">\t<span class=\"comment\"># 多个 location 依次匹配,直至匹配成功.</span></span><br><span class=\"line\">    </span><br><span class=\"line\">\tlocation /JSBridge &#123;</span><br><span class=\"line\">\t<span class=\"comment\"># alias响应的路径：配置路径+静态文件(去除location中配置的路径)</span></span><br><span class=\"line\">\t<span class=\"comment\"># 查询路径: /root/html/JSBridge</span></span><br><span class=\"line\">       <span class=\"keyword\">alias</span> /root/html/JSBridge;</span><br><span class=\"line\">       autoindex on;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tlocation /blog &#123;</span><br><span class=\"line\">           autoindex on;</span><br><span class=\"line\">           autoindex_exact_size off;</span><br><span class=\"line\">           autoindex_localtime on;</span><br><span class=\"line\">           <span class=\"comment\"># 优先加载索引文件</span></span><br><span class=\"line\">           index index.html;</span><br><span class=\"line\">           <span class=\"comment\"># root响应的路径：配置的路径+完整访问路径(完整的location配置路径+静态文件)</span></span><br><span class=\"line\">           <span class=\"comment\"># 查询路径: /root/html/blog</span></span><br><span class=\"line\">           root /root/html;  </span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"端口映射\"><a href=\"#端口映射\" class=\"headerlink\" title=\"端口映射\"></a>端口映射</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen <span class=\"number\">443</span>;</span><br><span class=\"line\">       server_name www.linhey.com;</span><br><span class=\"line\">       location / &#123;</span><br><span class=\"line\">           proxy_redirect off;</span><br><span class=\"line\">           <span class=\"comment\"># 映射本地端口</span></span><br><span class=\"line\">           proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">       &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">   &#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"多端口映射\"><a href=\"#多端口映射\" class=\"headerlink\" title=\"多端口映射\"></a>多端口映射</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">       listen <span class=\"number\">443</span>;</span><br><span class=\"line\">       server_name www.linhey.com;</span><br><span class=\"line\">       location / &#123;</span><br><span class=\"line\">           proxy_redirect off;</span><br><span class=\"line\">\t\t<span class=\"comment\"># 映射本地端口</span></span><br><span class=\"line\">           proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3000;</span></span><br><span class=\"line\"><span class=\"regexp\">       &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">   &#125;</span></span><br><span class=\"line\"><span class=\"regexp\"></span></span><br><span class=\"line\"><span class=\"regexp\">server &#123;</span></span><br><span class=\"line\"><span class=\"regexp\">       listen 443;</span></span><br><span class=\"line\"><span class=\"regexp\">       server_name api.linhey.com;</span></span><br><span class=\"line\"><span class=\"regexp\">       location /</span> &#123;</span><br><span class=\"line\">           proxy_redirect off;</span><br><span class=\"line\">\t\t<span class=\"comment\"># 映射本地端口</span></span><br><span class=\"line\">           proxy_pass <span class=\"symbol\">http:</span>/<span class=\"regexp\">/localhost:3001;</span></span><br><span class=\"line\"><span class=\"regexp\">       &#125;</span></span><br><span class=\"line\"><span class=\"regexp\">   &#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"error\"><a href=\"#error\" class=\"headerlink\" title=\"error\"></a>error</h3><p>1.Permission denied</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user nginx; =&gt; user root;</span><br></pre></td></tr></table></figure>\n"},{"title":"nginx.conf 配置","date":"2018-04-08T16:00:00.000Z","description":"nginx.conf","_content":"\n# nginx.conf 配置\n\n#### 1. 文件划分\n\nnginx安装结束后,由于各路文件分散在不同文件夹中.笔者认为将其配置放置于一处方便管理.\n\n在用户目录下新建以下文件夹与文件.\n\n```shell\nnginx/\n|-- conf\n|   |-- api.conf # api 域名配置\n|   |-- www.conf # www 域名配置\n|-- log\n|   |-- access.log\t# 从 /var/log/nginx/access.log 拷贝\n|   |-- error.log\t# 从 /var/log/nginx/error.log 拷贝\n|-- sites-enabled\n|   |-- default.conf # 从 /etc/nginx/sites-enabled/default.conf 拷贝\n|-- ssl\n|   |-- linhey.crt # ssl 证书\n|   |-- linhey.key # ssl 证书\n|-- html\n    |-- 404\n        |-- index.html # 404 展示页面\n  \n```\n\n#### 2. nginx.conf 修改\n\n 1. 需要配置 `/etc/nginx/nginx.conf `文件指向以上目录结构.\n\n    ```shell\n    http {\n    \t# Logging Settings\n    \taccess_log /root/nginx/log/access.log;\n    \terror_log /root/nginx/log/error.log;\n    \n    \t# Virtual Host Configs\n    \tinclude /root/nginx/conf/*.conf;\n    \tinclude /root/nginx/sites-enabled/*;\n    }\n    ```\n\n\t2. 需要配置` /nginx/sites-enabled/default.conf`文件404指向.\n\n    ```shell\n    \troot /root/nginx/html/404;\n    \tindex index.html index.htm;\n    ```\n\n    \n\n\n\n\n\n","source":"_posts/[server]Nginx.md","raw":"---\ntitle: nginx.conf 配置\ndate: 2018-04-09\ncategories: [server]\ntags: [nginx,server,ubuntu]\ndescription: nginx.conf \n---\n\n# nginx.conf 配置\n\n#### 1. 文件划分\n\nnginx安装结束后,由于各路文件分散在不同文件夹中.笔者认为将其配置放置于一处方便管理.\n\n在用户目录下新建以下文件夹与文件.\n\n```shell\nnginx/\n|-- conf\n|   |-- api.conf # api 域名配置\n|   |-- www.conf # www 域名配置\n|-- log\n|   |-- access.log\t# 从 /var/log/nginx/access.log 拷贝\n|   |-- error.log\t# 从 /var/log/nginx/error.log 拷贝\n|-- sites-enabled\n|   |-- default.conf # 从 /etc/nginx/sites-enabled/default.conf 拷贝\n|-- ssl\n|   |-- linhey.crt # ssl 证书\n|   |-- linhey.key # ssl 证书\n|-- html\n    |-- 404\n        |-- index.html # 404 展示页面\n  \n```\n\n#### 2. nginx.conf 修改\n\n 1. 需要配置 `/etc/nginx/nginx.conf `文件指向以上目录结构.\n\n    ```shell\n    http {\n    \t# Logging Settings\n    \taccess_log /root/nginx/log/access.log;\n    \terror_log /root/nginx/log/error.log;\n    \n    \t# Virtual Host Configs\n    \tinclude /root/nginx/conf/*.conf;\n    \tinclude /root/nginx/sites-enabled/*;\n    }\n    ```\n\n\t2. 需要配置` /nginx/sites-enabled/default.conf`文件404指向.\n\n    ```shell\n    \troot /root/nginx/html/404;\n    \tindex index.html index.htm;\n    ```\n\n    \n\n\n\n\n\n","slug":"[server]Nginx","published":1,"updated":"2018-07-10T10:36:15.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1jd000urfz6s9thhid5","content":"<h1 id=\"nginx-conf-配置\"><a href=\"#nginx-conf-配置\" class=\"headerlink\" title=\"nginx.conf 配置\"></a>nginx.conf 配置</h1><h4 id=\"1-文件划分\"><a href=\"#1-文件划分\" class=\"headerlink\" title=\"1. 文件划分\"></a>1. 文件划分</h4><p>nginx安装结束后,由于各路文件分散在不同文件夹中.笔者认为将其配置放置于一处方便管理.</p>\n<p>在用户目录下新建以下文件夹与文件.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx/</span><br><span class=\"line\">|-- conf</span><br><span class=\"line\">|   |-- api.conf # api 域名配置</span><br><span class=\"line\">|   |-- www.conf # www 域名配置</span><br><span class=\"line\">|-- log</span><br><span class=\"line\">|   |-- access.log\t# 从 /var/log/nginx/access.log 拷贝</span><br><span class=\"line\">|   |-- error.log\t# 从 /var/log/nginx/error.log 拷贝</span><br><span class=\"line\">|-- sites-enabled</span><br><span class=\"line\">|   |-- default.conf # 从 /etc/nginx/sites-enabled/default.conf 拷贝</span><br><span class=\"line\">|-- ssl</span><br><span class=\"line\">|   |-- linhey.crt # ssl 证书</span><br><span class=\"line\">|   |-- linhey.key # ssl 证书</span><br><span class=\"line\">|-- html</span><br><span class=\"line\">    |-- 404</span><br><span class=\"line\">        |-- index.html # 404 展示页面</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-nginx-conf-修改\"><a href=\"#2-nginx-conf-修改\" class=\"headerlink\" title=\"2. nginx.conf 修改\"></a>2. nginx.conf 修改</h4><ol>\n<li><p>需要配置 <code>/etc/nginx/nginx.conf</code>文件指向以上目录结构.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\"><span class=\"meta\">\t#</span> Logging Settings</span><br><span class=\"line\">\taccess_log /root/nginx/log/access.log;</span><br><span class=\"line\">\terror_log /root/nginx/log/error.log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">\t#</span> Virtual Host Configs</span><br><span class=\"line\">\tinclude /root/nginx/conf/*.conf;</span><br><span class=\"line\">\tinclude /root/nginx/sites-enabled/*;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>需要配置<code>/nginx/sites-enabled/default.conf</code>文件404指向.</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root /root/nginx/html/404;</span><br><span class=\"line\">index index.html index.htm;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"nginx-conf-配置\"><a href=\"#nginx-conf-配置\" class=\"headerlink\" title=\"nginx.conf 配置\"></a>nginx.conf 配置</h1><h4 id=\"1-文件划分\"><a href=\"#1-文件划分\" class=\"headerlink\" title=\"1. 文件划分\"></a>1. 文件划分</h4><p>nginx安装结束后,由于各路文件分散在不同文件夹中.笔者认为将其配置放置于一处方便管理.</p>\n<p>在用户目录下新建以下文件夹与文件.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx/</span><br><span class=\"line\">|-- conf</span><br><span class=\"line\">|   |-- api.conf # api 域名配置</span><br><span class=\"line\">|   |-- www.conf # www 域名配置</span><br><span class=\"line\">|-- log</span><br><span class=\"line\">|   |-- access.log\t# 从 /var/log/nginx/access.log 拷贝</span><br><span class=\"line\">|   |-- error.log\t# 从 /var/log/nginx/error.log 拷贝</span><br><span class=\"line\">|-- sites-enabled</span><br><span class=\"line\">|   |-- default.conf # 从 /etc/nginx/sites-enabled/default.conf 拷贝</span><br><span class=\"line\">|-- ssl</span><br><span class=\"line\">|   |-- linhey.crt # ssl 证书</span><br><span class=\"line\">|   |-- linhey.key # ssl 证书</span><br><span class=\"line\">|-- html</span><br><span class=\"line\">    |-- 404</span><br><span class=\"line\">        |-- index.html # 404 展示页面</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-nginx-conf-修改\"><a href=\"#2-nginx-conf-修改\" class=\"headerlink\" title=\"2. nginx.conf 修改\"></a>2. nginx.conf 修改</h4><ol>\n<li><p>需要配置 <code>/etc/nginx/nginx.conf</code>文件指向以上目录结构.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http &#123;</span><br><span class=\"line\"><span class=\"meta\">\t#</span> Logging Settings</span><br><span class=\"line\">\taccess_log /root/nginx/log/access.log;</span><br><span class=\"line\">\terror_log /root/nginx/log/error.log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">\t#</span> Virtual Host Configs</span><br><span class=\"line\">\tinclude /root/nginx/conf/*.conf;</span><br><span class=\"line\">\tinclude /root/nginx/sites-enabled/*;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>需要配置<code>/nginx/sites-enabled/default.conf</code>文件404指向.</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root /root/nginx/html/404;</span><br><span class=\"line\">index index.html index.htm;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n"},{"title":"使用Verdaccio搭建npm私有仓库","date":"2018-09-19T16:00:00.000Z","description":"作者本身计划是采用Sinopia来作为服务,可惜Sinopia作者已经在三年前不维护该库.Verdaccio是一个轻量级的私有NPM的Registry(派生于Sinopia).本文主要介绍利用docker中配置与启动Verdaccio服务.","_content":"\n\n![verdaccio](https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png)\n\n\n\n## docker-compose\n\n1. ### [ 🌰 Github 地址]()\n\n2. ### 目录结构\n\n   ```shell\n   .\n   ├── LICENSE\n   ├── README.md\n   ├── conf\n   │   ├── config.yaml #配置文件\n   │   └── htpasswd # 用户管理文件\n   ├── docker-compose.yml \n   ├── plugins\t# 插件位置\n   ├── storage # 数据存放\n   └── update.sh # 启动/重启服务\n   ```\n\n3. ### docker-compose的安装与操作命令\n\n      - 官方网址教程: https://docs.docker.com/compose/install/\n\n        - linux安装:\n\n          ```shell\n          sudo curl -L \"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n          \n          sudo chmod +x /usr/local/bin/docker-compose\n          \n          docker-compose --version\n          \n          print: --------------------------------------\n          docker-compose version 1.22.0, build f46880fe\n          ```\n\n\n   - 启动容器\n\n     ```shell\n     docker-compose -f \"docker-compose.yml\" up -d --build\n     ```\n\n   - 移除容器\n\n     ```shell\n     docker-compose -f \"docker-compose.yml\" down\n     ```\n\n4. ### 快速启动!\n\n   - 使用默认配置的`docker-compose`启动容器:\n\n     ```yaml\n     version: '3'\n     services:\n       verdaccio:\n         container_name: verdaccio\n         image: verdaccio/verdaccio:3.8.0\n         ports:\n           - '4873:4873'\n     ```\n\n   - 在浏览器查看`http://127.0.0.1:4873`:\n\n     按照网页指引使用npm添加用户即可登录与上传包.\n\n     ![html](https://s.linhey.com/verdaccio-html.png)\n\n5. ### 更多配置\n\n   - 更多配置的docker-compose文件:\n\n     ```yaml\n     version: '3'\n     services:\n       verdaccio:\n         container_name: verdaccio\n         image: verdaccio/verdaccio:3.8.0\n         ports:\n           - '4873:4873'\n         restart: always\n         environment:\n           PORT: 4873\n         volumes:\n           - ./conf:/verdaccio/conf \n           - ./storage:/verdaccio/storage \n           - ./plugins:/verdaccio/plugins \n      # 挂载卷,否则可能有文件权限问题\n      volumes:\n       verdaccio:\n         driver: local\n     ```\n\n   - 编辑`./conf/config.yaml`文件:\n\n     ```yaml\n     # 数据存储位置。** Verdaccio 默认使用内置本地文件模式存储。\n     storage: /verdaccio/storage\n     auth:\n       htpasswd:\n         # 注册用户列表\n         file: ./htpasswd\n         # 最大注册数 -1为禁止新用户注册\n         max_users: 2\n     # 上行链路 是指可以访问到外部包的外部注册服务器地址。\n     uplinks:\n       # 这里使用淘宝加速npm镜像源.\n       taobao:\n         url: https://registry.npm.taobao.org/\n         # 设置超时\n         timeout: 100ms\n       # 备用源\n       npmjs:\n         url: https://registry.npmjs.org/\n     packages:\n       # 匹配规则从上至下,与nginx类同\n       '@t4/*':\n         # 限定用户访问\n         access: linhey test\n         # 定义允许发布的组\n         publish: linhey\n         # 针对特定的uplink限制查找\n         proxy: taobao\n       '@*/*':\n         # 定义允许访问包的组\n         access: $authenticated\n         # 定义允许发布的组\n         publish: $authenticated\n         # 针对特定的uplink限制查找\n         proxy: taobao\n       '**':\n         access: $authenticated\n         publish: $authenticated\n         # 针对特定的uplink限制查找\n         proxy: taobao\n     logs:\n       - {type: stdout, format: pretty, level: http}\n     web:\n       enable: true\n       # 标签名称\n       title: npm.linhey\n       # 左上角图标\n       logo: https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png\n       scope:\n     \n     ```\n\n   - 权限控制\n\n     无法找到为用户设定组别的选项,目前只能单个用户进行权限管理.\n\n   - https\n\n     作者采用一个全局独立的nginx来做反向代理. `server`中的路径根据自身nginx配置调整.\n\n     ```shell\n     server {\n         listen 443;\n         server_name npm.linhey.com;\n         ssl on;\n         ssl_certificate /root/nginx/ssl/npm.crt;\n         ssl_certificate_key /root/nginx/ssl/npm.key;\n         location / {\n             proxy_redirect off;\n             proxy_pass http://localhost:4873;\n         }\n     }\n     ```\n\n   - errors\n\n     1. Error:` EACCES: permission denied, open '/verdaccio/conf/htpasswd'`\n        作者在采用`git`方式部署至`Ubuntu 16.04.2`时出现该问题.\n        反复尝试多次,最后定位问题出在外部挂载目录权限上.\n\n        ```shell\n        chmod 777 -R conf\n        chmod 777 -R storage\n        chmod 777 -R plugins\n        ```\n\n\n\n### 参考:\n\n- [Verdaccio 官网](https://verdaccio.org/zh-CN/)\n- [Verdaccio DockerHub](https://hub.docker.com/r/verdaccio/verdaccio/)\n\n\n","source":"_posts/使用Verdaccio搭建npm私有仓库.md","raw":"---\ntitle: 使用Verdaccio搭建npm私有仓库\ndate: 2018-09-20\ncategories: [node]\ntags: [docker,node,npm,verdaccio]\ndescription: 作者本身计划是采用Sinopia来作为服务,可惜Sinopia作者已经在三年前不维护该库.Verdaccio是一个轻量级的私有NPM的Registry(派生于Sinopia).本文主要介绍利用docker中配置与启动Verdaccio服务.\n---\n\n\n![verdaccio](https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png)\n\n\n\n## docker-compose\n\n1. ### [ 🌰 Github 地址]()\n\n2. ### 目录结构\n\n   ```shell\n   .\n   ├── LICENSE\n   ├── README.md\n   ├── conf\n   │   ├── config.yaml #配置文件\n   │   └── htpasswd # 用户管理文件\n   ├── docker-compose.yml \n   ├── plugins\t# 插件位置\n   ├── storage # 数据存放\n   └── update.sh # 启动/重启服务\n   ```\n\n3. ### docker-compose的安装与操作命令\n\n      - 官方网址教程: https://docs.docker.com/compose/install/\n\n        - linux安装:\n\n          ```shell\n          sudo curl -L \"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n          \n          sudo chmod +x /usr/local/bin/docker-compose\n          \n          docker-compose --version\n          \n          print: --------------------------------------\n          docker-compose version 1.22.0, build f46880fe\n          ```\n\n\n   - 启动容器\n\n     ```shell\n     docker-compose -f \"docker-compose.yml\" up -d --build\n     ```\n\n   - 移除容器\n\n     ```shell\n     docker-compose -f \"docker-compose.yml\" down\n     ```\n\n4. ### 快速启动!\n\n   - 使用默认配置的`docker-compose`启动容器:\n\n     ```yaml\n     version: '3'\n     services:\n       verdaccio:\n         container_name: verdaccio\n         image: verdaccio/verdaccio:3.8.0\n         ports:\n           - '4873:4873'\n     ```\n\n   - 在浏览器查看`http://127.0.0.1:4873`:\n\n     按照网页指引使用npm添加用户即可登录与上传包.\n\n     ![html](https://s.linhey.com/verdaccio-html.png)\n\n5. ### 更多配置\n\n   - 更多配置的docker-compose文件:\n\n     ```yaml\n     version: '3'\n     services:\n       verdaccio:\n         container_name: verdaccio\n         image: verdaccio/verdaccio:3.8.0\n         ports:\n           - '4873:4873'\n         restart: always\n         environment:\n           PORT: 4873\n         volumes:\n           - ./conf:/verdaccio/conf \n           - ./storage:/verdaccio/storage \n           - ./plugins:/verdaccio/plugins \n      # 挂载卷,否则可能有文件权限问题\n      volumes:\n       verdaccio:\n         driver: local\n     ```\n\n   - 编辑`./conf/config.yaml`文件:\n\n     ```yaml\n     # 数据存储位置。** Verdaccio 默认使用内置本地文件模式存储。\n     storage: /verdaccio/storage\n     auth:\n       htpasswd:\n         # 注册用户列表\n         file: ./htpasswd\n         # 最大注册数 -1为禁止新用户注册\n         max_users: 2\n     # 上行链路 是指可以访问到外部包的外部注册服务器地址。\n     uplinks:\n       # 这里使用淘宝加速npm镜像源.\n       taobao:\n         url: https://registry.npm.taobao.org/\n         # 设置超时\n         timeout: 100ms\n       # 备用源\n       npmjs:\n         url: https://registry.npmjs.org/\n     packages:\n       # 匹配规则从上至下,与nginx类同\n       '@t4/*':\n         # 限定用户访问\n         access: linhey test\n         # 定义允许发布的组\n         publish: linhey\n         # 针对特定的uplink限制查找\n         proxy: taobao\n       '@*/*':\n         # 定义允许访问包的组\n         access: $authenticated\n         # 定义允许发布的组\n         publish: $authenticated\n         # 针对特定的uplink限制查找\n         proxy: taobao\n       '**':\n         access: $authenticated\n         publish: $authenticated\n         # 针对特定的uplink限制查找\n         proxy: taobao\n     logs:\n       - {type: stdout, format: pretty, level: http}\n     web:\n       enable: true\n       # 标签名称\n       title: npm.linhey\n       # 左上角图标\n       logo: https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png\n       scope:\n     \n     ```\n\n   - 权限控制\n\n     无法找到为用户设定组别的选项,目前只能单个用户进行权限管理.\n\n   - https\n\n     作者采用一个全局独立的nginx来做反向代理. `server`中的路径根据自身nginx配置调整.\n\n     ```shell\n     server {\n         listen 443;\n         server_name npm.linhey.com;\n         ssl on;\n         ssl_certificate /root/nginx/ssl/npm.crt;\n         ssl_certificate_key /root/nginx/ssl/npm.key;\n         location / {\n             proxy_redirect off;\n             proxy_pass http://localhost:4873;\n         }\n     }\n     ```\n\n   - errors\n\n     1. Error:` EACCES: permission denied, open '/verdaccio/conf/htpasswd'`\n        作者在采用`git`方式部署至`Ubuntu 16.04.2`时出现该问题.\n        反复尝试多次,最后定位问题出在外部挂载目录权限上.\n\n        ```shell\n        chmod 777 -R conf\n        chmod 777 -R storage\n        chmod 777 -R plugins\n        ```\n\n\n\n### 参考:\n\n- [Verdaccio 官网](https://verdaccio.org/zh-CN/)\n- [Verdaccio DockerHub](https://hub.docker.com/r/verdaccio/verdaccio/)\n\n\n","slug":"使用Verdaccio搭建npm私有仓库","published":1,"updated":"2018-09-25T11:08:53.187Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1jg000zrfz6p5md9ibs","content":"<p><img src=\"https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png\" alt=\"verdaccio\"></p>\n<h2 id=\"docker-compose\"><a href=\"#docker-compose\" class=\"headerlink\" title=\"docker-compose\"></a>docker-compose</h2><ol>\n<li><h3 id=\"🌰-Github-地址\"><a href=\"#🌰-Github-地址\" class=\"headerlink\" title=\" 🌰 Github 地址\"></a><a href=\"\"> 🌰 Github 地址</a></h3></li>\n<li><h3 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── conf</span><br><span class=\"line\">│   ├── config.yaml #配置文件</span><br><span class=\"line\">│   └── htpasswd # 用户管理文件</span><br><span class=\"line\">├── docker-compose.yml </span><br><span class=\"line\">├── plugins\t# 插件位置</span><br><span class=\"line\">├── storage # 数据存放</span><br><span class=\"line\">└── update.sh # 启动/重启服务</span><br></pre></td></tr></table></figure>\n</li>\n<li><h3 id=\"docker-compose的安装与操作命令\"><a href=\"#docker-compose的安装与操作命令\" class=\"headerlink\" title=\"docker-compose的安装与操作命令\"></a>docker-compose的安装与操作命令</h3><ul>\n<li><p>官方网址教程: <a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/install/</a></p>\n<ul>\n<li><p>linux安装:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L \"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\"></span><br><span class=\"line\">print: --------------------------------------</span><br><span class=\"line\">docker-compose version 1.22.0, build f46880fe</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose -f \"docker-compose.yml\" up -d --build</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>移除容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose -f \"docker-compose.yml\" down</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h3 id=\"快速启动\"><a href=\"#快速启动\" class=\"headerlink\" title=\"快速启动!\"></a>快速启动!</h3><ul>\n<li><p>使用默认配置的<code>docker-compose</code>启动容器:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  verdaccio:</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">verdaccio</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">verdaccio/verdaccio:3.8.0</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">'4873:4873'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在浏览器查看<code>http://127.0.0.1:4873</code>:</p>\n<p>按照网页指引使用npm添加用户即可登录与上传包.</p>\n<p><img src=\"https://s.linhey.com/verdaccio-html.png\" alt=\"html\"></p>\n</li>\n</ul>\n</li>\n<li><h3 id=\"更多配置\"><a href=\"#更多配置\" class=\"headerlink\" title=\"更多配置\"></a>更多配置</h3><ul>\n<li><p>更多配置的docker-compose文件:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  verdaccio:</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">verdaccio</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">verdaccio/verdaccio:3.8.0</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">'4873:4873'</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    environment:</span></span><br><span class=\"line\"><span class=\"attr\">      PORT:</span> <span class=\"number\">4873</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./conf:/verdaccio/conf</span> </span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./storage:/verdaccio/storage</span> </span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./plugins:/verdaccio/plugins</span> </span><br><span class=\"line\"> <span class=\"comment\"># 挂载卷,否则可能有文件权限问题</span></span><br><span class=\"line\"><span class=\"attr\"> volumes:</span></span><br><span class=\"line\"><span class=\"attr\">  verdaccio:</span></span><br><span class=\"line\"><span class=\"attr\">    driver:</span> <span class=\"string\">local</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑<code>./conf/config.yaml</code>文件:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据存储位置。** Verdaccio 默认使用内置本地文件模式存储。</span></span><br><span class=\"line\"><span class=\"attr\">storage:</span> <span class=\"string\">/verdaccio/storage</span></span><br><span class=\"line\"><span class=\"attr\">auth:</span></span><br><span class=\"line\"><span class=\"attr\">  htpasswd:</span></span><br><span class=\"line\">    <span class=\"comment\"># 注册用户列表</span></span><br><span class=\"line\"><span class=\"attr\">    file:</span> <span class=\"string\">./htpasswd</span></span><br><span class=\"line\">    <span class=\"comment\"># 最大注册数 -1为禁止新用户注册</span></span><br><span class=\"line\"><span class=\"attr\">    max_users:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 上行链路 是指可以访问到外部包的外部注册服务器地址。</span></span><br><span class=\"line\"><span class=\"attr\">uplinks:</span></span><br><span class=\"line\">  <span class=\"comment\"># 这里使用淘宝加速npm镜像源.</span></span><br><span class=\"line\"><span class=\"attr\">  taobao:</span></span><br><span class=\"line\"><span class=\"attr\">    url:</span> <span class=\"attr\">https://registry.npm.taobao.org/</span></span><br><span class=\"line\">    <span class=\"comment\"># 设置超时</span></span><br><span class=\"line\"><span class=\"attr\">    timeout:</span> <span class=\"number\">100</span><span class=\"string\">ms</span></span><br><span class=\"line\">  <span class=\"comment\"># 备用源</span></span><br><span class=\"line\"><span class=\"attr\">  npmjs:</span></span><br><span class=\"line\"><span class=\"attr\">    url:</span> <span class=\"attr\">https://registry.npmjs.org/</span></span><br><span class=\"line\"><span class=\"attr\">packages:</span></span><br><span class=\"line\">  <span class=\"comment\"># 匹配规则从上至下,与nginx类同</span></span><br><span class=\"line\">  <span class=\"string\">'@t4/*'</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># 限定用户访问</span></span><br><span class=\"line\"><span class=\"attr\">    access:</span> <span class=\"string\">linhey</span> <span class=\"string\">test</span></span><br><span class=\"line\">    <span class=\"comment\"># 定义允许发布的组</span></span><br><span class=\"line\"><span class=\"attr\">    publish:</span> <span class=\"string\">linhey</span></span><br><span class=\"line\">    <span class=\"comment\"># 针对特定的uplink限制查找</span></span><br><span class=\"line\"><span class=\"attr\">    proxy:</span> <span class=\"string\">taobao</span></span><br><span class=\"line\">  <span class=\"string\">'@*/*'</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># 定义允许访问包的组</span></span><br><span class=\"line\"><span class=\"attr\">    access:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"comment\"># 定义允许发布的组</span></span><br><span class=\"line\"><span class=\"attr\">    publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"comment\"># 针对特定的uplink限制查找</span></span><br><span class=\"line\"><span class=\"attr\">    proxy:</span> <span class=\"string\">taobao</span></span><br><span class=\"line\">  <span class=\"string\">'**'</span><span class=\"string\">:</span></span><br><span class=\"line\"><span class=\"attr\">    access:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\"><span class=\"attr\">    publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"comment\"># 针对特定的uplink限制查找</span></span><br><span class=\"line\"><span class=\"attr\">    proxy:</span> <span class=\"string\">taobao</span></span><br><span class=\"line\"><span class=\"attr\">logs:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">&#123;type:</span> <span class=\"string\">stdout,</span> <span class=\"attr\">format:</span> <span class=\"string\">pretty,</span> <span class=\"attr\">level:</span> <span class=\"string\">http&#125;</span></span><br><span class=\"line\"><span class=\"attr\">web:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 标签名称</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">npm.linhey</span></span><br><span class=\"line\">  <span class=\"comment\"># 左上角图标</span></span><br><span class=\"line\"><span class=\"attr\">  logo:</span> <span class=\"attr\">https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png</span></span><br><span class=\"line\"><span class=\"attr\">  scope:</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>权限控制</p>\n<p>无法找到为用户设定组别的选项,目前只能单个用户进行权限管理.</p>\n</li>\n<li><p>https</p>\n<p>作者采用一个全局独立的nginx来做反向代理. <code>server</code>中的路径根据自身nginx配置调整.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443;</span><br><span class=\"line\">    server_name npm.linhey.com;</span><br><span class=\"line\">    ssl on;</span><br><span class=\"line\">    ssl_certificate /root/nginx/ssl/npm.crt;</span><br><span class=\"line\">    ssl_certificate_key /root/nginx/ssl/npm.key;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_redirect off;</span><br><span class=\"line\">        proxy_pass http://localhost:4873;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>errors</p>\n<ol>\n<li><p>Error:<code>EACCES: permission denied, open &#39;/verdaccio/conf/htpasswd&#39;</code><br>作者在采用<code>git</code>方式部署至<code>Ubuntu 16.04.2</code>时出现该问题.<br>反复尝试多次,最后定位问题出在外部挂载目录权限上.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 -R conf</span><br><span class=\"line\">chmod 777 -R storage</span><br><span class=\"line\">chmod 777 -R plugins</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考:\"></a>参考:</h3><ul>\n<li><a href=\"https://verdaccio.org/zh-CN/\" target=\"_blank\" rel=\"noopener\">Verdaccio 官网</a></li>\n<li><a href=\"https://hub.docker.com/r/verdaccio/verdaccio/\" target=\"_blank\" rel=\"noopener\">Verdaccio DockerHub</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png\" alt=\"verdaccio\"></p>\n<h2 id=\"docker-compose\"><a href=\"#docker-compose\" class=\"headerlink\" title=\"docker-compose\"></a>docker-compose</h2><ol>\n<li><h3 id=\"🌰-Github-地址\"><a href=\"#🌰-Github-地址\" class=\"headerlink\" title=\" 🌰 Github 地址\"></a><a href=\"\"> 🌰 Github 地址</a></h3></li>\n<li><h3 id=\"目录结构\"><a href=\"#目录结构\" class=\"headerlink\" title=\"目录结构\"></a>目录结构</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.</span><br><span class=\"line\">├── LICENSE</span><br><span class=\"line\">├── README.md</span><br><span class=\"line\">├── conf</span><br><span class=\"line\">│   ├── config.yaml #配置文件</span><br><span class=\"line\">│   └── htpasswd # 用户管理文件</span><br><span class=\"line\">├── docker-compose.yml </span><br><span class=\"line\">├── plugins\t# 插件位置</span><br><span class=\"line\">├── storage # 数据存放</span><br><span class=\"line\">└── update.sh # 启动/重启服务</span><br></pre></td></tr></table></figure>\n</li>\n<li><h3 id=\"docker-compose的安装与操作命令\"><a href=\"#docker-compose的安装与操作命令\" class=\"headerlink\" title=\"docker-compose的安装与操作命令\"></a>docker-compose的安装与操作命令</h3><ul>\n<li><p>官方网址教程: <a href=\"https://docs.docker.com/compose/install/\" target=\"_blank\" rel=\"noopener\">https://docs.docker.com/compose/install/</a></p>\n<ul>\n<li><p>linux安装:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo curl -L \"https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">sudo chmod +x /usr/local/bin/docker-compose</span><br><span class=\"line\"></span><br><span class=\"line\">docker-compose --version</span><br><span class=\"line\"></span><br><span class=\"line\">print: --------------------------------------</span><br><span class=\"line\">docker-compose version 1.22.0, build f46880fe</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>启动容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose -f \"docker-compose.yml\" up -d --build</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>移除容器</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose -f \"docker-compose.yml\" down</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><h3 id=\"快速启动\"><a href=\"#快速启动\" class=\"headerlink\" title=\"快速启动!\"></a>快速启动!</h3><ul>\n<li><p>使用默认配置的<code>docker-compose</code>启动容器:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  verdaccio:</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">verdaccio</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">verdaccio/verdaccio:3.8.0</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">'4873:4873'</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>在浏览器查看<code>http://127.0.0.1:4873</code>:</p>\n<p>按照网页指引使用npm添加用户即可登录与上传包.</p>\n<p><img src=\"https://s.linhey.com/verdaccio-html.png\" alt=\"html\"></p>\n</li>\n</ul>\n</li>\n<li><h3 id=\"更多配置\"><a href=\"#更多配置\" class=\"headerlink\" title=\"更多配置\"></a>更多配置</h3><ul>\n<li><p>更多配置的docker-compose文件:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">'3'</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\"><span class=\"attr\">  verdaccio:</span></span><br><span class=\"line\"><span class=\"attr\">    container_name:</span> <span class=\"string\">verdaccio</span></span><br><span class=\"line\"><span class=\"attr\">    image:</span> <span class=\"string\">verdaccio/verdaccio:3.8.0</span></span><br><span class=\"line\"><span class=\"attr\">    ports:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">'4873:4873'</span></span><br><span class=\"line\"><span class=\"attr\">    restart:</span> <span class=\"string\">always</span></span><br><span class=\"line\"><span class=\"attr\">    environment:</span></span><br><span class=\"line\"><span class=\"attr\">      PORT:</span> <span class=\"number\">4873</span></span><br><span class=\"line\"><span class=\"attr\">    volumes:</span></span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./conf:/verdaccio/conf</span> </span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./storage:/verdaccio/storage</span> </span><br><span class=\"line\"><span class=\"bullet\">      -</span> <span class=\"string\">./plugins:/verdaccio/plugins</span> </span><br><span class=\"line\"> <span class=\"comment\"># 挂载卷,否则可能有文件权限问题</span></span><br><span class=\"line\"><span class=\"attr\"> volumes:</span></span><br><span class=\"line\"><span class=\"attr\">  verdaccio:</span></span><br><span class=\"line\"><span class=\"attr\">    driver:</span> <span class=\"string\">local</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编辑<code>./conf/config.yaml</code>文件:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 数据存储位置。** Verdaccio 默认使用内置本地文件模式存储。</span></span><br><span class=\"line\"><span class=\"attr\">storage:</span> <span class=\"string\">/verdaccio/storage</span></span><br><span class=\"line\"><span class=\"attr\">auth:</span></span><br><span class=\"line\"><span class=\"attr\">  htpasswd:</span></span><br><span class=\"line\">    <span class=\"comment\"># 注册用户列表</span></span><br><span class=\"line\"><span class=\"attr\">    file:</span> <span class=\"string\">./htpasswd</span></span><br><span class=\"line\">    <span class=\"comment\"># 最大注册数 -1为禁止新用户注册</span></span><br><span class=\"line\"><span class=\"attr\">    max_users:</span> <span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"comment\"># 上行链路 是指可以访问到外部包的外部注册服务器地址。</span></span><br><span class=\"line\"><span class=\"attr\">uplinks:</span></span><br><span class=\"line\">  <span class=\"comment\"># 这里使用淘宝加速npm镜像源.</span></span><br><span class=\"line\"><span class=\"attr\">  taobao:</span></span><br><span class=\"line\"><span class=\"attr\">    url:</span> <span class=\"attr\">https://registry.npm.taobao.org/</span></span><br><span class=\"line\">    <span class=\"comment\"># 设置超时</span></span><br><span class=\"line\"><span class=\"attr\">    timeout:</span> <span class=\"number\">100</span><span class=\"string\">ms</span></span><br><span class=\"line\">  <span class=\"comment\"># 备用源</span></span><br><span class=\"line\"><span class=\"attr\">  npmjs:</span></span><br><span class=\"line\"><span class=\"attr\">    url:</span> <span class=\"attr\">https://registry.npmjs.org/</span></span><br><span class=\"line\"><span class=\"attr\">packages:</span></span><br><span class=\"line\">  <span class=\"comment\"># 匹配规则从上至下,与nginx类同</span></span><br><span class=\"line\">  <span class=\"string\">'@t4/*'</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># 限定用户访问</span></span><br><span class=\"line\"><span class=\"attr\">    access:</span> <span class=\"string\">linhey</span> <span class=\"string\">test</span></span><br><span class=\"line\">    <span class=\"comment\"># 定义允许发布的组</span></span><br><span class=\"line\"><span class=\"attr\">    publish:</span> <span class=\"string\">linhey</span></span><br><span class=\"line\">    <span class=\"comment\"># 针对特定的uplink限制查找</span></span><br><span class=\"line\"><span class=\"attr\">    proxy:</span> <span class=\"string\">taobao</span></span><br><span class=\"line\">  <span class=\"string\">'@*/*'</span><span class=\"string\">:</span></span><br><span class=\"line\">    <span class=\"comment\"># 定义允许访问包的组</span></span><br><span class=\"line\"><span class=\"attr\">    access:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"comment\"># 定义允许发布的组</span></span><br><span class=\"line\"><span class=\"attr\">    publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"comment\"># 针对特定的uplink限制查找</span></span><br><span class=\"line\"><span class=\"attr\">    proxy:</span> <span class=\"string\">taobao</span></span><br><span class=\"line\">  <span class=\"string\">'**'</span><span class=\"string\">:</span></span><br><span class=\"line\"><span class=\"attr\">    access:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\"><span class=\"attr\">    publish:</span> <span class=\"string\">$authenticated</span></span><br><span class=\"line\">    <span class=\"comment\"># 针对特定的uplink限制查找</span></span><br><span class=\"line\"><span class=\"attr\">    proxy:</span> <span class=\"string\">taobao</span></span><br><span class=\"line\"><span class=\"attr\">logs:</span></span><br><span class=\"line\"><span class=\"bullet\">  -</span> <span class=\"string\">&#123;type:</span> <span class=\"string\">stdout,</span> <span class=\"attr\">format:</span> <span class=\"string\">pretty,</span> <span class=\"attr\">level:</span> <span class=\"string\">http&#125;</span></span><br><span class=\"line\"><span class=\"attr\">web:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\">  <span class=\"comment\"># 标签名称</span></span><br><span class=\"line\"><span class=\"attr\">  title:</span> <span class=\"string\">npm.linhey</span></span><br><span class=\"line\">  <span class=\"comment\"># 左上角图标</span></span><br><span class=\"line\"><span class=\"attr\">  logo:</span> <span class=\"attr\">https://verdaccio.org/img/logo/banner/png/verdaccio-banner@2x.png</span></span><br><span class=\"line\"><span class=\"attr\">  scope:</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>权限控制</p>\n<p>无法找到为用户设定组别的选项,目前只能单个用户进行权限管理.</p>\n</li>\n<li><p>https</p>\n<p>作者采用一个全局独立的nginx来做反向代理. <code>server</code>中的路径根据自身nginx配置调整.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443;</span><br><span class=\"line\">    server_name npm.linhey.com;</span><br><span class=\"line\">    ssl on;</span><br><span class=\"line\">    ssl_certificate /root/nginx/ssl/npm.crt;</span><br><span class=\"line\">    ssl_certificate_key /root/nginx/ssl/npm.key;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        proxy_redirect off;</span><br><span class=\"line\">        proxy_pass http://localhost:4873;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>errors</p>\n<ol>\n<li><p>Error:<code>EACCES: permission denied, open &#39;/verdaccio/conf/htpasswd&#39;</code><br>作者在采用<code>git</code>方式部署至<code>Ubuntu 16.04.2</code>时出现该问题.<br>反复尝试多次,最后定位问题出在外部挂载目录权限上.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 777 -R conf</span><br><span class=\"line\">chmod 777 -R storage</span><br><span class=\"line\">chmod 777 -R plugins</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考:\"></a>参考:</h3><ul>\n<li><a href=\"https://verdaccio.org/zh-CN/\" target=\"_blank\" rel=\"noopener\">Verdaccio 官网</a></li>\n<li><a href=\"https://hub.docker.com/r/verdaccio/verdaccio/\" target=\"_blank\" rel=\"noopener\">Verdaccio DockerHub</a></li>\n</ul>\n"},{"title":"EmptyPage(空白页组件)原理与使用","date":"2018-01-27T16:00:00.000Z","updated":"2018-11-16T16:00:00.000Z","description":"一套应用于swift项目的空白页.可利用预置的模板快速构建空白页视图.亦可高度自定义视图搭建炫酷的交互.","_content":"\n> app 显示列表内容时, 在某一时刻可能数据为空(等待网络请求/网络请求失败)等, 添加一个空白指示页将有效缓解用户可能造成的焦虑或混乱. 并可以帮助用户处理问题.\n>\n> 市面上已经有部分成熟的空白页框架,最典型的就是使用[**DZNEmptyDataSet**](https://github.com/dzenbot/DZNEmptyDataSet).\n>\n> 但是其使用`DZNEmptyDataSetDelegate`,`DZNEmptyDataSetSource`来定制空白页元素,使用时较为繁琐.\n>\n> 笔者借鉴其原理的基础上,制作了对标框架(单向对标)[**EmptyPage**](https://github.com/linhay/EmptyPage)来简化日常项目开发.\n\n## 前言\n\n> [**EmptyPage**](https://github.com/linhay/EmptyPage) 历时1年, 在我司项目中稳定使用迭代6个版本,算是比较稳定.\n>\n> 支持UICollectionView & UITableView.\n>\n> ps: 目前阶段只提供 swift 版本.\n\n| ![](https://s.linhey.com/emptyPage-08.gif) | ![](https://s.linhey.com/emptyPage-07.gif) |\n| :----------------------------------------: | :----------------------------------------: |\n| | |\n\n## 实现原理\n\n> 该核心部分 作为一个单独的子库 实现, 可使用 以下方式单独引用.\n>\n> ```ruby\n> pod 'EmptyPage/Core'\n> ```\n>\n> 具体代码可查阅 [**Github Link**](https://github.com/linhay/EmptyPage/tree/master/Sources), 超级简单.\n\n1. ##### 为`UIScrollView`添加`emptyView`对象作为空白页实例:\n\n   ```swift\n   public extension UIScrollView {\n     public var emptyView: UIView?\n   }\n   ```\n\n2. ##### `Method Swizzling`方式替换掉`UITableView` \\ `UICollectionView` 中部分相关函数.以下拿`UITableView` 举例:\n\n   ```swift\n   // DZNEmptyDataSet 对 autolayout 项目不太友好. (也可能本人没深度使用...)\n   // EmptyPage \n   // UITableView frame 变化相关函数\n   open func layoutSubviews()\n   open func layoutIfNeeded()\n   // 数据源增减相关函数\n   open func insertRows(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)\n   open func deleteRows(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)\n   open func insertSections(_ sections: IndexSet, with animation: UITableView.RowAnimation)\n   open func deleteSections(_ sections: IndexSet, with animation: UITableView.RowAnimation)\n   open func reloadData()\n   ```\n\n3. ##### 在数据/frame变化时判断空白页显示与隐藏.\n\n   ```swift\n   func setEmptyView(event: () -> ()) {\n       oldEmptyView?.removeFromSuperview()\n       event()\n       guard bounds.width != 0, bounds.height != 0 else { return }\n       var isHasRows = false\n       let sectionCount = dataSource?.numberOfSections?(in: self) ?? numberOfSections\n       for index in 0..<sectionCount {\n         if numberOfRows(inSection: index) > 0 {\n           isHasRows = true\n           break\n         }\n       }\n       isScrollEnabled = isHasRows\n       if isHasRows {\n         emptyView?.removeFromSuperview()\n         return\n       }\n       guard let view = emptyView else{ return }\n       view.frame = bounds\n       addSubview(view)\n       sendSubview(toBack: view)\n     }\n   ```\n\n4. **使用**\n\n   ```swift\n   UITableView().emptyView = CustomView()\n   UICollectionView().emptyView = CustomView()\n   ```\n\n   > UITableView().emptyView 第一次被赋值时才会进行 `Method Swizzling` 相关函数.\n\n## 模板视图\n\n> DZNEmptyDataSet 的成功离不开其可高度定制化的模板视图.但其繁琐的 delegate apis 远不如自定义视图来的方便, 其对自定义视图的支持也并不友善.\n>\n> EmptyPage 优先支持 自定义视图,并附赠 3 套可以凑合看的模板视图(支持超级高自定义调节,但毕竟UI我们说了不算...)\n>\n> 采用 以下方式 则包含该部分内容:\n>\n> ```ruby\n> pod 'EmptyPage'\n> ```\n\n1. ##### 自定义视图\n\n   - **仅支持autolayout布局模式**\n\n     > 不使用 autolayout 模式:\n     >\n     > 1. `pod 'EmptyPage/Core'`\n     >\n     > 2. `UITableView().emptyView = CustomView()`\n\n   - **自定义视图需要autolayout实现自适应高**\n\n     > 可以参考 内置的几套模板视图的约束实现.\n\n   - **添加 EmptyPageContentViewProtocol 协议**\n\n     该协议默认实现了将自定义视图居中约束至一个`backgroundView`上.\n\n     > 通用性考虑: backgroundView.frame 与 tableView.frame 相同\n\n     示例:\n\n     ```swift\n     class CustomView: EmptyPageContentViewProtocol{\n         ...\n     }\n     \n     let customView = CustomView()\n     UITableView().emptyView = customView.mix()\n     ```\n\n     >不添加该协议,可采用以下方式:\n     >\n     >UITableView().emptyView = EmptyPageView.mix(view: customView)\n\n   - **视图关系**\n\n     ![视图关系](https://s.linhey.com/emptyPage-01.png)\n\n2. ##### 内置模板视图\n\n   > **特性: **\n   >\n   > 1. 支持链式调用.\n   > 2. 元素支持高度自定义.\n   > 3. 同样依照自定义视图的标准实现.\n   >\n   > ps: **完全等同于提前写好的自定义模板视图**.\n\n   - **目前可以选择3套基本的模板视图.**\n     - 文字模板(`EmptyPageView.ContentView.onlyText`)\n     - **图片模板**(`EmptyPageView.ContentView.onlyImage`)\n     - 混合模板(`EmptyPageView.ContentView.standard`)\n\n|                                                    |      |      |\n| -------------------------------------------------- | ---- | ---- |\n| ![文字模板](https://s.linhey.com/emptyPage-03.png) | ![图片模板](https://s.linhey.com/emptyPage-04.png) | ![混合模板](https://s.linhey.com/emptyPage-02.png) |\n\n   - **使用**\n\n     - 示例:\n\n       ```swift\n       UITableView().emptyView = EmptyPageView.ContentView.standard\n       \t.change(hspace: .button, value: 80)\n       \t.change(height: .button, value: 60)\n       \t.change(hspace: .image, value: 15)\n       \t.config(button: { (item) in\n       \t\titem.backgroundColor = UIColor.blue\n       \t\titem.contentEdgeInsets = UIEdgeInsets(top: 8, left: 20, bottom: 8, right: 20)\n       \t})\n       \t.set(image: UIImage(named: \"empty-1002\")!)\n       \t.set(title: \"Connection failure\", color: UIColor.black, font: UIFont.boldSystemFont(ofSize: 24))\n       \t.set(text: \"Something has gone wrong with the internet connection. Let's give it another shot.\", color: UIColor.black, font: UIFont.systemFont(ofSize: 15))\n       \t.set(buttonTitle: \"TRY AGAIN\")\n       \t.set(tap: {\n       \t// 点击事件\n       \t})\n       \t.mix()\n       ```\n\n   - **Apis**\n\n     模板视图中总结起来只有三种配置函数:\n\n     - 约束配置函数: `func change(...) -> Self` \n\n       > 约束函数具体可配置项采用枚举的形式限定.(以免改变/冲突自适应高度相关约束)\n       >\n       > enum HSpaceType { } // 修改视图水平方向上的间距\n       >\n       > enum VSpaceType { } // 修改视图垂直方向上的间距\n       >\n       > enum HeightType { }  // 修改视图具体高度\n       >\n       > 例如:\n       >\n       > ```swift\n       > standardView.change(hspace: .button, value: 80)\n       > \t\t\t.change(height: .button, value: 60)\n       > ```\n\n     - 控件配置函数: `func set(...) -> Self` \n\n       > 提供了简单的文本/字体/图片/颜色配置.例如:\n       >\n       > ```swift\n       > standardView.set(title: \"Connection failure\", color: UIColor.black, font: UIFont.boldSystemFont(ofSize: 24))\n       > ```\n\n     - 控件自定义配置函数: `func config(element: { (element) in ... }) -> Self `\n\n       > 返回一个完整的控件,可供深度配置. 例如:\n       >\n       > ```swift\n       > standardView.config(button: { (item) in\n       > \titem.backgroundColor = UIColor.blue\n       > \titem.contentEdgeInsets = UIEdgeInsets(top: 8, left: 20, bottom: 8, right: 20)\n       > \t})\n       > ```\n\n     - 视图混合函数`func mix()`:\n\n       > 该函数由 EmptyPageContentViewProtocol 协议默认实现.\n       >\n       > 作用: 将视图约束至 backgroundView 上\n       >\n       > ps: 别忘了...\n\n## 结尾\n\n项目开源链接: [Github/EmptyPage](https://github.com/linhay/EmptyPage)\n\n个人博客链接: [四方田](https://linhey.com)\n\n","source":"_posts/[iOS]EmptyPage(空白页组件)介绍与使用.md","raw":"---\ntitle: EmptyPage(空白页组件)原理与使用\t\ndate: 2018-01-28\t\nupdated: 2018-11-17\t\ncategories: [ios]\t\ntags: [ios,swift,cocoapods]\t\ndescription: 一套应用于swift项目的空白页.可利用预置的模板快速构建空白页视图.亦可高度自定义视图搭建炫酷的交互.\t\n---\n\n> app 显示列表内容时, 在某一时刻可能数据为空(等待网络请求/网络请求失败)等, 添加一个空白指示页将有效缓解用户可能造成的焦虑或混乱. 并可以帮助用户处理问题.\n>\n> 市面上已经有部分成熟的空白页框架,最典型的就是使用[**DZNEmptyDataSet**](https://github.com/dzenbot/DZNEmptyDataSet).\n>\n> 但是其使用`DZNEmptyDataSetDelegate`,`DZNEmptyDataSetSource`来定制空白页元素,使用时较为繁琐.\n>\n> 笔者借鉴其原理的基础上,制作了对标框架(单向对标)[**EmptyPage**](https://github.com/linhay/EmptyPage)来简化日常项目开发.\n\n## 前言\n\n> [**EmptyPage**](https://github.com/linhay/EmptyPage) 历时1年, 在我司项目中稳定使用迭代6个版本,算是比较稳定.\n>\n> 支持UICollectionView & UITableView.\n>\n> ps: 目前阶段只提供 swift 版本.\n\n| ![](https://s.linhey.com/emptyPage-08.gif) | ![](https://s.linhey.com/emptyPage-07.gif) |\n| :----------------------------------------: | :----------------------------------------: |\n| | |\n\n## 实现原理\n\n> 该核心部分 作为一个单独的子库 实现, 可使用 以下方式单独引用.\n>\n> ```ruby\n> pod 'EmptyPage/Core'\n> ```\n>\n> 具体代码可查阅 [**Github Link**](https://github.com/linhay/EmptyPage/tree/master/Sources), 超级简单.\n\n1. ##### 为`UIScrollView`添加`emptyView`对象作为空白页实例:\n\n   ```swift\n   public extension UIScrollView {\n     public var emptyView: UIView?\n   }\n   ```\n\n2. ##### `Method Swizzling`方式替换掉`UITableView` \\ `UICollectionView` 中部分相关函数.以下拿`UITableView` 举例:\n\n   ```swift\n   // DZNEmptyDataSet 对 autolayout 项目不太友好. (也可能本人没深度使用...)\n   // EmptyPage \n   // UITableView frame 变化相关函数\n   open func layoutSubviews()\n   open func layoutIfNeeded()\n   // 数据源增减相关函数\n   open func insertRows(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)\n   open func deleteRows(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)\n   open func insertSections(_ sections: IndexSet, with animation: UITableView.RowAnimation)\n   open func deleteSections(_ sections: IndexSet, with animation: UITableView.RowAnimation)\n   open func reloadData()\n   ```\n\n3. ##### 在数据/frame变化时判断空白页显示与隐藏.\n\n   ```swift\n   func setEmptyView(event: () -> ()) {\n       oldEmptyView?.removeFromSuperview()\n       event()\n       guard bounds.width != 0, bounds.height != 0 else { return }\n       var isHasRows = false\n       let sectionCount = dataSource?.numberOfSections?(in: self) ?? numberOfSections\n       for index in 0..<sectionCount {\n         if numberOfRows(inSection: index) > 0 {\n           isHasRows = true\n           break\n         }\n       }\n       isScrollEnabled = isHasRows\n       if isHasRows {\n         emptyView?.removeFromSuperview()\n         return\n       }\n       guard let view = emptyView else{ return }\n       view.frame = bounds\n       addSubview(view)\n       sendSubview(toBack: view)\n     }\n   ```\n\n4. **使用**\n\n   ```swift\n   UITableView().emptyView = CustomView()\n   UICollectionView().emptyView = CustomView()\n   ```\n\n   > UITableView().emptyView 第一次被赋值时才会进行 `Method Swizzling` 相关函数.\n\n## 模板视图\n\n> DZNEmptyDataSet 的成功离不开其可高度定制化的模板视图.但其繁琐的 delegate apis 远不如自定义视图来的方便, 其对自定义视图的支持也并不友善.\n>\n> EmptyPage 优先支持 自定义视图,并附赠 3 套可以凑合看的模板视图(支持超级高自定义调节,但毕竟UI我们说了不算...)\n>\n> 采用 以下方式 则包含该部分内容:\n>\n> ```ruby\n> pod 'EmptyPage'\n> ```\n\n1. ##### 自定义视图\n\n   - **仅支持autolayout布局模式**\n\n     > 不使用 autolayout 模式:\n     >\n     > 1. `pod 'EmptyPage/Core'`\n     >\n     > 2. `UITableView().emptyView = CustomView()`\n\n   - **自定义视图需要autolayout实现自适应高**\n\n     > 可以参考 内置的几套模板视图的约束实现.\n\n   - **添加 EmptyPageContentViewProtocol 协议**\n\n     该协议默认实现了将自定义视图居中约束至一个`backgroundView`上.\n\n     > 通用性考虑: backgroundView.frame 与 tableView.frame 相同\n\n     示例:\n\n     ```swift\n     class CustomView: EmptyPageContentViewProtocol{\n         ...\n     }\n     \n     let customView = CustomView()\n     UITableView().emptyView = customView.mix()\n     ```\n\n     >不添加该协议,可采用以下方式:\n     >\n     >UITableView().emptyView = EmptyPageView.mix(view: customView)\n\n   - **视图关系**\n\n     ![视图关系](https://s.linhey.com/emptyPage-01.png)\n\n2. ##### 内置模板视图\n\n   > **特性: **\n   >\n   > 1. 支持链式调用.\n   > 2. 元素支持高度自定义.\n   > 3. 同样依照自定义视图的标准实现.\n   >\n   > ps: **完全等同于提前写好的自定义模板视图**.\n\n   - **目前可以选择3套基本的模板视图.**\n     - 文字模板(`EmptyPageView.ContentView.onlyText`)\n     - **图片模板**(`EmptyPageView.ContentView.onlyImage`)\n     - 混合模板(`EmptyPageView.ContentView.standard`)\n\n|                                                    |      |      |\n| -------------------------------------------------- | ---- | ---- |\n| ![文字模板](https://s.linhey.com/emptyPage-03.png) | ![图片模板](https://s.linhey.com/emptyPage-04.png) | ![混合模板](https://s.linhey.com/emptyPage-02.png) |\n\n   - **使用**\n\n     - 示例:\n\n       ```swift\n       UITableView().emptyView = EmptyPageView.ContentView.standard\n       \t.change(hspace: .button, value: 80)\n       \t.change(height: .button, value: 60)\n       \t.change(hspace: .image, value: 15)\n       \t.config(button: { (item) in\n       \t\titem.backgroundColor = UIColor.blue\n       \t\titem.contentEdgeInsets = UIEdgeInsets(top: 8, left: 20, bottom: 8, right: 20)\n       \t})\n       \t.set(image: UIImage(named: \"empty-1002\")!)\n       \t.set(title: \"Connection failure\", color: UIColor.black, font: UIFont.boldSystemFont(ofSize: 24))\n       \t.set(text: \"Something has gone wrong with the internet connection. Let's give it another shot.\", color: UIColor.black, font: UIFont.systemFont(ofSize: 15))\n       \t.set(buttonTitle: \"TRY AGAIN\")\n       \t.set(tap: {\n       \t// 点击事件\n       \t})\n       \t.mix()\n       ```\n\n   - **Apis**\n\n     模板视图中总结起来只有三种配置函数:\n\n     - 约束配置函数: `func change(...) -> Self` \n\n       > 约束函数具体可配置项采用枚举的形式限定.(以免改变/冲突自适应高度相关约束)\n       >\n       > enum HSpaceType { } // 修改视图水平方向上的间距\n       >\n       > enum VSpaceType { } // 修改视图垂直方向上的间距\n       >\n       > enum HeightType { }  // 修改视图具体高度\n       >\n       > 例如:\n       >\n       > ```swift\n       > standardView.change(hspace: .button, value: 80)\n       > \t\t\t.change(height: .button, value: 60)\n       > ```\n\n     - 控件配置函数: `func set(...) -> Self` \n\n       > 提供了简单的文本/字体/图片/颜色配置.例如:\n       >\n       > ```swift\n       > standardView.set(title: \"Connection failure\", color: UIColor.black, font: UIFont.boldSystemFont(ofSize: 24))\n       > ```\n\n     - 控件自定义配置函数: `func config(element: { (element) in ... }) -> Self `\n\n       > 返回一个完整的控件,可供深度配置. 例如:\n       >\n       > ```swift\n       > standardView.config(button: { (item) in\n       > \titem.backgroundColor = UIColor.blue\n       > \titem.contentEdgeInsets = UIEdgeInsets(top: 8, left: 20, bottom: 8, right: 20)\n       > \t})\n       > ```\n\n     - 视图混合函数`func mix()`:\n\n       > 该函数由 EmptyPageContentViewProtocol 协议默认实现.\n       >\n       > 作用: 将视图约束至 backgroundView 上\n       >\n       > ps: 别忘了...\n\n## 结尾\n\n项目开源链接: [Github/EmptyPage](https://github.com/linhay/EmptyPage)\n\n个人博客链接: [四方田](https://linhey.com)\n\n","slug":"[iOS]EmptyPage(空白页组件)介绍与使用","published":1,"comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1n10046rfz6kfy6pv9t","content":"<blockquote>\n<p>app 显示列表内容时, 在某一时刻可能数据为空(等待网络请求/网络请求失败)等, 添加一个空白指示页将有效缓解用户可能造成的焦虑或混乱. 并可以帮助用户处理问题.</p>\n<p>市面上已经有部分成熟的空白页框架,最典型的就是使用<a href=\"https://github.com/dzenbot/DZNEmptyDataSet\" target=\"_blank\" rel=\"noopener\"><strong>DZNEmptyDataSet</strong></a>.</p>\n<p>但是其使用<code>DZNEmptyDataSetDelegate</code>,<code>DZNEmptyDataSetSource</code>来定制空白页元素,使用时较为繁琐.</p>\n<p>笔者借鉴其原理的基础上,制作了对标框架(单向对标)<a href=\"https://github.com/linhay/EmptyPage\" target=\"_blank\" rel=\"noopener\"><strong>EmptyPage</strong></a>来简化日常项目开发.</p>\n</blockquote>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p><a href=\"https://github.com/linhay/EmptyPage\" target=\"_blank\" rel=\"noopener\"><strong>EmptyPage</strong></a> 历时1年, 在我司项目中稳定使用迭代6个版本,算是比较稳定.</p>\n<p>支持UICollectionView &amp; UITableView.</p>\n<p>ps: 目前阶段只提供 swift 版本.</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img src=\"https://s.linhey.com/emptyPage-08.gif\" alt=\"\"></th>\n<th style=\"text-align:center\"><img src=\"https://s.linhey.com/emptyPage-07.gif\" alt=\"\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><blockquote>\n<p>该核心部分 作为一个单独的子库 实现, 可使用 以下方式单独引用.</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; pod <span class=\"string\">'EmptyPage/Core'</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>具体代码可查阅 <a href=\"https://github.com/linhay/EmptyPage/tree/master/Sources\" target=\"_blank\" rel=\"noopener\"><strong>Github Link</strong></a>, 超级简单.</p>\n</blockquote>\n<ol>\n<li><h5 id=\"为UIScrollView添加emptyView对象作为空白页实例\"><a href=\"#为UIScrollView添加emptyView对象作为空白页实例\" class=\"headerlink\" title=\"为UIScrollView添加emptyView对象作为空白页实例:\"></a>为<code>UIScrollView</code>添加<code>emptyView</code>对象作为空白页实例:</h5><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">UIScrollView</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> emptyView: <span class=\"type\">UIView</span>?</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h5 id=\"Method-Swizzling方式替换掉UITableView-UICollectionView-中部分相关函数-以下拿UITableView-举例\"><a href=\"#Method-Swizzling方式替换掉UITableView-UICollectionView-中部分相关函数-以下拿UITableView-举例\" class=\"headerlink\" title=\"Method Swizzling方式替换掉UITableView \\ UICollectionView 中部分相关函数.以下拿UITableView 举例:\"></a><code>Method Swizzling</code>方式替换掉<code>UITableView</code> \\ <code>UICollectionView</code> 中部分相关函数.以下拿<code>UITableView</code> 举例:</h5><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// DZNEmptyDataSet 对 autolayout 项目不太友好. (也可能本人没深度使用...)</span></span><br><span class=\"line\"><span class=\"comment\">// EmptyPage </span></span><br><span class=\"line\"><span class=\"comment\">// UITableView frame 变化相关函数</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">layoutSubviews</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">layoutIfNeeded</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"comment\">// 数据源增减相关函数</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">insertRows</span><span class=\"params\">(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteRows</span><span class=\"params\">(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">insertSections</span><span class=\"params\">(<span class=\"number\">_</span> sections: IndexSet, with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteSections</span><span class=\"params\">(<span class=\"number\">_</span> sections: IndexSet, with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">reloadData</span><span class=\"params\">()</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><h5 id=\"在数据-frame变化时判断空白页显示与隐藏\"><a href=\"#在数据-frame变化时判断空白页显示与隐藏\" class=\"headerlink\" title=\"在数据/frame变化时判断空白页显示与隐藏.\"></a>在数据/frame变化时判断空白页显示与隐藏.</h5><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setEmptyView</span><span class=\"params\">(event: <span class=\"params\">()</span></span></span> -&gt; ()) &#123;</span><br><span class=\"line\">    oldEmptyView?.removeFromSuperview()</span><br><span class=\"line\">    event()</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> bounds.width != <span class=\"number\">0</span>, bounds.height != <span class=\"number\">0</span> <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> isHasRows = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sectionCount = dataSource?.numberOfSections?(<span class=\"keyword\">in</span>: <span class=\"keyword\">self</span>) ?? numberOfSections</span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;sectionCount &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> numberOfRows(inSection: index) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        isHasRows = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    isScrollEnabled = isHasRows</span><br><span class=\"line\">    <span class=\"keyword\">if</span> isHasRows &#123;</span><br><span class=\"line\">      emptyView?.removeFromSuperview()</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> view = emptyView <span class=\"keyword\">else</span>&#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\">    view.frame = bounds</span><br><span class=\"line\">    addSubview(view)</span><br><span class=\"line\">    sendSubview(toBack: view)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>使用</strong></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UITableView</span>().emptyView = <span class=\"type\">CustomView</span>()</span><br><span class=\"line\"><span class=\"type\">UICollectionView</span>().emptyView = <span class=\"type\">CustomView</span>()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>UITableView().emptyView 第一次被赋值时才会进行 <code>Method Swizzling</code> 相关函数.</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"模板视图\"><a href=\"#模板视图\" class=\"headerlink\" title=\"模板视图\"></a>模板视图</h2><blockquote>\n<p>DZNEmptyDataSet 的成功离不开其可高度定制化的模板视图.但其繁琐的 delegate apis 远不如自定义视图来的方便, 其对自定义视图的支持也并不友善.</p>\n<p>EmptyPage 优先支持 自定义视图,并附赠 3 套可以凑合看的模板视图(支持超级高自定义调节,但毕竟UI我们说了不算…)</p>\n<p>采用 以下方式 则包含该部分内容:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; pod <span class=\"string\">'EmptyPage'</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<ol>\n<li><h5 id=\"自定义视图\"><a href=\"#自定义视图\" class=\"headerlink\" title=\"自定义视图\"></a>自定义视图</h5><ul>\n<li><p><strong>仅支持autolayout布局模式</strong></p>\n<blockquote>\n<p>不使用 autolayout 模式:</p>\n<ol>\n<li><p><code>pod &#39;EmptyPage/Core&#39;</code></p>\n</li>\n<li><p><code>UITableView().emptyView = CustomView()</code></p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p><strong>自定义视图需要autolayout实现自适应高</strong></p>\n<blockquote>\n<p>可以参考 内置的几套模板视图的约束实现.</p>\n</blockquote>\n</li>\n<li><p><strong>添加 EmptyPageContentViewProtocol 协议</strong></p>\n<p>该协议默认实现了将自定义视图居中约束至一个<code>backgroundView</code>上.</p>\n<blockquote>\n<p>通用性考虑: backgroundView.frame 与 tableView.frame 相同</p>\n</blockquote>\n<p>示例:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomView</span>: <span class=\"title\">EmptyPageContentViewProtocol</span></span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> customView = <span class=\"type\">CustomView</span>()</span><br><span class=\"line\"><span class=\"type\">UITableView</span>().emptyView = customView.mix()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不添加该协议,可采用以下方式:</p>\n<p>UITableView().emptyView = EmptyPageView.mix(view: customView)</p>\n</blockquote>\n</li>\n<li><p><strong>视图关系</strong></p>\n<p><img src=\"https://s.linhey.com/emptyPage-01.png\" alt=\"视图关系\"></p>\n</li>\n</ul>\n</li>\n<li><h5 id=\"内置模板视图\"><a href=\"#内置模板视图\" class=\"headerlink\" title=\"内置模板视图\"></a>内置模板视图</h5><blockquote>\n<p><strong>特性: </strong></p>\n<ol>\n<li>支持链式调用.</li>\n<li>元素支持高度自定义.</li>\n<li>同样依照自定义视图的标准实现.</li>\n</ol>\n<p>ps: <strong>完全等同于提前写好的自定义模板视图</strong>.</p>\n</blockquote>\n<ul>\n<li><strong>目前可以选择3套基本的模板视图.</strong><ul>\n<li>文字模板(<code>EmptyPageView.ContentView.onlyText</code>)</li>\n<li><strong>图片模板</strong>(<code>EmptyPageView.ContentView.onlyImage</code>)</li>\n<li>混合模板(<code>EmptyPageView.ContentView.standard</code>)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"https://s.linhey.com/emptyPage-03.png\" alt=\"文字模板\"></td>\n<td><img src=\"https://s.linhey.com/emptyPage-04.png\" alt=\"图片模板\"></td>\n<td><img src=\"https://s.linhey.com/emptyPage-02.png\" alt=\"混合模板\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p><strong>使用</strong></p>\n<ul>\n<li><p>示例:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UITableView</span>().emptyView = <span class=\"type\">EmptyPageView</span>.<span class=\"type\">ContentView</span>.standard</span><br><span class=\"line\">\t.change(hspace: .button, value: <span class=\"number\">80</span>)</span><br><span class=\"line\">\t.change(height: .button, value: <span class=\"number\">60</span>)</span><br><span class=\"line\">\t.change(hspace: .image, value: <span class=\"number\">15</span>)</span><br><span class=\"line\">\t.config(button: &#123; (item) <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\titem.backgroundColor = <span class=\"type\">UIColor</span>.blue</span><br><span class=\"line\">\t\titem.contentEdgeInsets = <span class=\"type\">UIEdgeInsets</span>(top: <span class=\"number\">8</span>, <span class=\"keyword\">left</span>: <span class=\"number\">20</span>, bottom: <span class=\"number\">8</span>, <span class=\"keyword\">right</span>: <span class=\"number\">20</span>)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(image: <span class=\"type\">UIImage</span>(named: <span class=\"string\">\"empty-1002\"</span>)!)</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(title: <span class=\"string\">\"Connection failure\"</span>, color: <span class=\"type\">UIColor</span>.black, font: <span class=\"type\">UIFont</span>.boldSystemFont(ofSize: <span class=\"number\">24</span>))</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(text: <span class=\"string\">\"Something has gone wrong with the internet connection. Let's give it another shot.\"</span>, color: <span class=\"type\">UIColor</span>.black, font: <span class=\"type\">UIFont</span>.systemFont(ofSize: <span class=\"number\">15</span>))</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(buttonTitle: <span class=\"string\">\"TRY AGAIN\"</span>)</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(tap: &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 点击事件</span></span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t.mix()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>Apis</strong></p>\n<p>模板视图中总结起来只有三种配置函数:</p>\n<ul>\n<li><p>约束配置函数: <code>func change(...) -&gt; Self</code> </p>\n<blockquote>\n<p>约束函数具体可配置项采用枚举的形式限定.(以免改变/冲突自适应高度相关约束)</p>\n<p>enum HSpaceType { } // 修改视图水平方向上的间距</p>\n<p>enum VSpaceType { } // 修改视图垂直方向上的间距</p>\n<p>enum HeightType { }  // 修改视图具体高度</p>\n<p>例如:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; standardView.change(hspace: .button, value: <span class=\"number\">80</span>)</span><br><span class=\"line\">&gt; \t\t\t.change(height: .button, value: <span class=\"number\">60</span>)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>控件配置函数: <code>func set(...) -&gt; Self</code> </p>\n<blockquote>\n<p>提供了简单的文本/字体/图片/颜色配置.例如:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; standardView.<span class=\"keyword\">set</span>(title: <span class=\"string\">\"Connection failure\"</span>, color: <span class=\"type\">UIColor</span>.black, font: <span class=\"type\">UIFont</span>.boldSystemFont(ofSize: <span class=\"number\">24</span>))</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>控件自定义配置函数: <code>func config(element: { (element) in ... }) -&gt; Self</code></p>\n<blockquote>\n<p>返回一个完整的控件,可供深度配置. 例如:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; standardView.config(button: &#123; (item) <span class=\"keyword\">in</span></span><br><span class=\"line\">&gt; \titem.backgroundColor = <span class=\"type\">UIColor</span>.blue</span><br><span class=\"line\">&gt; \titem.contentEdgeInsets = <span class=\"type\">UIEdgeInsets</span>(top: <span class=\"number\">8</span>, <span class=\"keyword\">left</span>: <span class=\"number\">20</span>, bottom: <span class=\"number\">8</span>, <span class=\"keyword\">right</span>: <span class=\"number\">20</span>)</span><br><span class=\"line\">&gt; \t&#125;)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>视图混合函数<code>func mix()</code>:</p>\n<blockquote>\n<p>该函数由 EmptyPageContentViewProtocol 协议默认实现.</p>\n<p>作用: 将视图约束至 backgroundView 上</p>\n<p>ps: 别忘了…</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>项目开源链接: <a href=\"https://github.com/linhay/EmptyPage\" target=\"_blank\" rel=\"noopener\">Github/EmptyPage</a></p>\n<p>个人博客链接: <a href=\"https://linhey.com\" target=\"_blank\" rel=\"noopener\">四方田</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>app 显示列表内容时, 在某一时刻可能数据为空(等待网络请求/网络请求失败)等, 添加一个空白指示页将有效缓解用户可能造成的焦虑或混乱. 并可以帮助用户处理问题.</p>\n<p>市面上已经有部分成熟的空白页框架,最典型的就是使用<a href=\"https://github.com/dzenbot/DZNEmptyDataSet\" target=\"_blank\" rel=\"noopener\"><strong>DZNEmptyDataSet</strong></a>.</p>\n<p>但是其使用<code>DZNEmptyDataSetDelegate</code>,<code>DZNEmptyDataSetSource</code>来定制空白页元素,使用时较为繁琐.</p>\n<p>笔者借鉴其原理的基础上,制作了对标框架(单向对标)<a href=\"https://github.com/linhay/EmptyPage\" target=\"_blank\" rel=\"noopener\"><strong>EmptyPage</strong></a>来简化日常项目开发.</p>\n</blockquote>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><blockquote>\n<p><a href=\"https://github.com/linhay/EmptyPage\" target=\"_blank\" rel=\"noopener\"><strong>EmptyPage</strong></a> 历时1年, 在我司项目中稳定使用迭代6个版本,算是比较稳定.</p>\n<p>支持UICollectionView &amp; UITableView.</p>\n<p>ps: 目前阶段只提供 swift 版本.</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\"><img src=\"https://s.linhey.com/emptyPage-08.gif\" alt=\"\"></th>\n<th style=\"text-align:center\"><img src=\"https://s.linhey.com/emptyPage-07.gif\" alt=\"\"></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"实现原理\"><a href=\"#实现原理\" class=\"headerlink\" title=\"实现原理\"></a>实现原理</h2><blockquote>\n<p>该核心部分 作为一个单独的子库 实现, 可使用 以下方式单独引用.</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; pod <span class=\"string\">'EmptyPage/Core'</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>具体代码可查阅 <a href=\"https://github.com/linhay/EmptyPage/tree/master/Sources\" target=\"_blank\" rel=\"noopener\"><strong>Github Link</strong></a>, 超级简单.</p>\n</blockquote>\n<ol>\n<li><h5 id=\"为UIScrollView添加emptyView对象作为空白页实例\"><a href=\"#为UIScrollView添加emptyView对象作为空白页实例\" class=\"headerlink\" title=\"为UIScrollView添加emptyView对象作为空白页实例:\"></a>为<code>UIScrollView</code>添加<code>emptyView</code>对象作为空白页实例:</h5><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">UIScrollView</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">var</span> emptyView: <span class=\"type\">UIView</span>?</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><h5 id=\"Method-Swizzling方式替换掉UITableView-UICollectionView-中部分相关函数-以下拿UITableView-举例\"><a href=\"#Method-Swizzling方式替换掉UITableView-UICollectionView-中部分相关函数-以下拿UITableView-举例\" class=\"headerlink\" title=\"Method Swizzling方式替换掉UITableView \\ UICollectionView 中部分相关函数.以下拿UITableView 举例:\"></a><code>Method Swizzling</code>方式替换掉<code>UITableView</code> \\ <code>UICollectionView</code> 中部分相关函数.以下拿<code>UITableView</code> 举例:</h5><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// DZNEmptyDataSet 对 autolayout 项目不太友好. (也可能本人没深度使用...)</span></span><br><span class=\"line\"><span class=\"comment\">// EmptyPage </span></span><br><span class=\"line\"><span class=\"comment\">// UITableView frame 变化相关函数</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">layoutSubviews</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">layoutIfNeeded</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"comment\">// 数据源增减相关函数</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">insertRows</span><span class=\"params\">(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteRows</span><span class=\"params\">(at indexPaths: [IndexPath], with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">insertSections</span><span class=\"params\">(<span class=\"number\">_</span> sections: IndexSet, with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deleteSections</span><span class=\"params\">(<span class=\"number\">_</span> sections: IndexSet, with animation: UITableView.RowAnimation)</span></span></span><br><span class=\"line\"><span class=\"keyword\">open</span> <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">reloadData</span><span class=\"params\">()</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><h5 id=\"在数据-frame变化时判断空白页显示与隐藏\"><a href=\"#在数据-frame变化时判断空白页显示与隐藏\" class=\"headerlink\" title=\"在数据/frame变化时判断空白页显示与隐藏.\"></a>在数据/frame变化时判断空白页显示与隐藏.</h5><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">setEmptyView</span><span class=\"params\">(event: <span class=\"params\">()</span></span></span> -&gt; ()) &#123;</span><br><span class=\"line\">    oldEmptyView?.removeFromSuperview()</span><br><span class=\"line\">    event()</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> bounds.width != <span class=\"number\">0</span>, bounds.height != <span class=\"number\">0</span> <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> isHasRows = <span class=\"literal\">false</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> sectionCount = dataSource?.numberOfSections?(<span class=\"keyword\">in</span>: <span class=\"keyword\">self</span>) ?? numberOfSections</span><br><span class=\"line\">    <span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> <span class=\"number\">0</span>..&lt;sectionCount &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> numberOfRows(inSection: index) &gt; <span class=\"number\">0</span> &#123;</span><br><span class=\"line\">        isHasRows = <span class=\"literal\">true</span></span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    isScrollEnabled = isHasRows</span><br><span class=\"line\">    <span class=\"keyword\">if</span> isHasRows &#123;</span><br><span class=\"line\">      emptyView?.removeFromSuperview()</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> view = emptyView <span class=\"keyword\">else</span>&#123; <span class=\"keyword\">return</span> &#125;</span><br><span class=\"line\">    view.frame = bounds</span><br><span class=\"line\">    addSubview(view)</span><br><span class=\"line\">    sendSubview(toBack: view)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p><strong>使用</strong></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UITableView</span>().emptyView = <span class=\"type\">CustomView</span>()</span><br><span class=\"line\"><span class=\"type\">UICollectionView</span>().emptyView = <span class=\"type\">CustomView</span>()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>UITableView().emptyView 第一次被赋值时才会进行 <code>Method Swizzling</code> 相关函数.</p>\n</blockquote>\n</li>\n</ol>\n<h2 id=\"模板视图\"><a href=\"#模板视图\" class=\"headerlink\" title=\"模板视图\"></a>模板视图</h2><blockquote>\n<p>DZNEmptyDataSet 的成功离不开其可高度定制化的模板视图.但其繁琐的 delegate apis 远不如自定义视图来的方便, 其对自定义视图的支持也并不友善.</p>\n<p>EmptyPage 优先支持 自定义视图,并附赠 3 套可以凑合看的模板视图(支持超级高自定义调节,但毕竟UI我们说了不算…)</p>\n<p>采用 以下方式 则包含该部分内容:</p>\n<figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; pod <span class=\"string\">'EmptyPage'</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<ol>\n<li><h5 id=\"自定义视图\"><a href=\"#自定义视图\" class=\"headerlink\" title=\"自定义视图\"></a>自定义视图</h5><ul>\n<li><p><strong>仅支持autolayout布局模式</strong></p>\n<blockquote>\n<p>不使用 autolayout 模式:</p>\n<ol>\n<li><p><code>pod &#39;EmptyPage/Core&#39;</code></p>\n</li>\n<li><p><code>UITableView().emptyView = CustomView()</code></p>\n</li>\n</ol>\n</blockquote>\n</li>\n<li><p><strong>自定义视图需要autolayout实现自适应高</strong></p>\n<blockquote>\n<p>可以参考 内置的几套模板视图的约束实现.</p>\n</blockquote>\n</li>\n<li><p><strong>添加 EmptyPageContentViewProtocol 协议</strong></p>\n<p>该协议默认实现了将自定义视图居中约束至一个<code>backgroundView</code>上.</p>\n<blockquote>\n<p>通用性考虑: backgroundView.frame 与 tableView.frame 相同</p>\n</blockquote>\n<p>示例:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CustomView</span>: <span class=\"title\">EmptyPageContentViewProtocol</span></span>&#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> customView = <span class=\"type\">CustomView</span>()</span><br><span class=\"line\"><span class=\"type\">UITableView</span>().emptyView = customView.mix()</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>不添加该协议,可采用以下方式:</p>\n<p>UITableView().emptyView = EmptyPageView.mix(view: customView)</p>\n</blockquote>\n</li>\n<li><p><strong>视图关系</strong></p>\n<p><img src=\"https://s.linhey.com/emptyPage-01.png\" alt=\"视图关系\"></p>\n</li>\n</ul>\n</li>\n<li><h5 id=\"内置模板视图\"><a href=\"#内置模板视图\" class=\"headerlink\" title=\"内置模板视图\"></a>内置模板视图</h5><blockquote>\n<p><strong>特性: </strong></p>\n<ol>\n<li>支持链式调用.</li>\n<li>元素支持高度自定义.</li>\n<li>同样依照自定义视图的标准实现.</li>\n</ol>\n<p>ps: <strong>完全等同于提前写好的自定义模板视图</strong>.</p>\n</blockquote>\n<ul>\n<li><strong>目前可以选择3套基本的模板视图.</strong><ul>\n<li>文字模板(<code>EmptyPageView.ContentView.onlyText</code>)</li>\n<li><strong>图片模板</strong>(<code>EmptyPageView.ContentView.onlyImage</code>)</li>\n<li>混合模板(<code>EmptyPageView.ContentView.standard</code>)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th></th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"https://s.linhey.com/emptyPage-03.png\" alt=\"文字模板\"></td>\n<td><img src=\"https://s.linhey.com/emptyPage-04.png\" alt=\"图片模板\"></td>\n<td><img src=\"https://s.linhey.com/emptyPage-02.png\" alt=\"混合模板\"></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><p><strong>使用</strong></p>\n<ul>\n<li><p>示例:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UITableView</span>().emptyView = <span class=\"type\">EmptyPageView</span>.<span class=\"type\">ContentView</span>.standard</span><br><span class=\"line\">\t.change(hspace: .button, value: <span class=\"number\">80</span>)</span><br><span class=\"line\">\t.change(height: .button, value: <span class=\"number\">60</span>)</span><br><span class=\"line\">\t.change(hspace: .image, value: <span class=\"number\">15</span>)</span><br><span class=\"line\">\t.config(button: &#123; (item) <span class=\"keyword\">in</span></span><br><span class=\"line\">\t\titem.backgroundColor = <span class=\"type\">UIColor</span>.blue</span><br><span class=\"line\">\t\titem.contentEdgeInsets = <span class=\"type\">UIEdgeInsets</span>(top: <span class=\"number\">8</span>, <span class=\"keyword\">left</span>: <span class=\"number\">20</span>, bottom: <span class=\"number\">8</span>, <span class=\"keyword\">right</span>: <span class=\"number\">20</span>)</span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(image: <span class=\"type\">UIImage</span>(named: <span class=\"string\">\"empty-1002\"</span>)!)</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(title: <span class=\"string\">\"Connection failure\"</span>, color: <span class=\"type\">UIColor</span>.black, font: <span class=\"type\">UIFont</span>.boldSystemFont(ofSize: <span class=\"number\">24</span>))</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(text: <span class=\"string\">\"Something has gone wrong with the internet connection. Let's give it another shot.\"</span>, color: <span class=\"type\">UIColor</span>.black, font: <span class=\"type\">UIFont</span>.systemFont(ofSize: <span class=\"number\">15</span>))</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(buttonTitle: <span class=\"string\">\"TRY AGAIN\"</span>)</span><br><span class=\"line\">\t.<span class=\"keyword\">set</span>(tap: &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 点击事件</span></span><br><span class=\"line\">\t&#125;)</span><br><span class=\"line\">\t.mix()</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n<li><p><strong>Apis</strong></p>\n<p>模板视图中总结起来只有三种配置函数:</p>\n<ul>\n<li><p>约束配置函数: <code>func change(...) -&gt; Self</code> </p>\n<blockquote>\n<p>约束函数具体可配置项采用枚举的形式限定.(以免改变/冲突自适应高度相关约束)</p>\n<p>enum HSpaceType { } // 修改视图水平方向上的间距</p>\n<p>enum VSpaceType { } // 修改视图垂直方向上的间距</p>\n<p>enum HeightType { }  // 修改视图具体高度</p>\n<p>例如:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; standardView.change(hspace: .button, value: <span class=\"number\">80</span>)</span><br><span class=\"line\">&gt; \t\t\t.change(height: .button, value: <span class=\"number\">60</span>)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>控件配置函数: <code>func set(...) -&gt; Self</code> </p>\n<blockquote>\n<p>提供了简单的文本/字体/图片/颜色配置.例如:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; standardView.<span class=\"keyword\">set</span>(title: <span class=\"string\">\"Connection failure\"</span>, color: <span class=\"type\">UIColor</span>.black, font: <span class=\"type\">UIFont</span>.boldSystemFont(ofSize: <span class=\"number\">24</span>))</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>控件自定义配置函数: <code>func config(element: { (element) in ... }) -&gt; Self</code></p>\n<blockquote>\n<p>返回一个完整的控件,可供深度配置. 例如:</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; standardView.config(button: &#123; (item) <span class=\"keyword\">in</span></span><br><span class=\"line\">&gt; \titem.backgroundColor = <span class=\"type\">UIColor</span>.blue</span><br><span class=\"line\">&gt; \titem.contentEdgeInsets = <span class=\"type\">UIEdgeInsets</span>(top: <span class=\"number\">8</span>, <span class=\"keyword\">left</span>: <span class=\"number\">20</span>, bottom: <span class=\"number\">8</span>, <span class=\"keyword\">right</span>: <span class=\"number\">20</span>)</span><br><span class=\"line\">&gt; \t&#125;)</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n</li>\n<li><p>视图混合函数<code>func mix()</code>:</p>\n<blockquote>\n<p>该函数由 EmptyPageContentViewProtocol 协议默认实现.</p>\n<p>作用: 将视图约束至 backgroundView 上</p>\n<p>ps: 别忘了…</p>\n</blockquote>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h2><p>项目开源链接: <a href=\"https://github.com/linhay/EmptyPage\" target=\"_blank\" rel=\"noopener\">Github/EmptyPage</a></p>\n<p>个人博客链接: <a href=\"https://linhey.com\" target=\"_blank\" rel=\"noopener\">四方田</a></p>\n"},{"title":"iOS-加载第三方字体","date":"2018-05-01T16:00:00.000Z","_content":"\n\n## 加载第三方字体\n\n\n### 获取当前系统支持字体册\n\n```swift\n    UIFont.familyNames.forEach { (familyName) in\n      print(familyName)\n      UIFont.fontNames(forFamilyName: familyName).forEach { (item) in\n        print(\" - \" + item)\n      }\n    }\n```\n\n### 使用指定字体\n\n```swift\nlet font = UIFont(name: \"PingFangSC-Regular\", size: 18) \n```\n\n<!--more-->\n\n\n### 静态加载\n\n该方式简单直接,只需在工程中包含字体文件,并在info.plist声明便可使用.\n\n1. **添加字体文件**\n\n2. **info.plist修改**\n\n   - 增加`Fonts provided by application`字段\n   - 在该字段下添加引入的字体文件名\n\n   ![](https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8.png)\n\n###  动态加载\n\n通过指定字体文件路径加载,该种方式可配合 **网络下发/字体加密** 使用.\n\n```swift\n /// 加载本地字体文件\nfunc custom(fileURL: URL, size: CGFloat) -> UIFont? {\n\tguard let dataProvider = CGDataProvider(url: fileURL as CFURL),\n    let cgFont = CGFont(dataProvider),\n      /// 注册字体\n\tCTFontManagerRegisterGraphicsFont(cgFont, nil),\n\tlet fontName = cgFont.postScriptName as String? else { return nil }\n    return UIFont(name: fontName, size: size)\n  }\n```\n\n### 动态下载苹果提供的多种中文字体\n\n从 iOS 6 开始，苹果提供了一个新的 API 可以让我们动态下载苹果提供的额外字体。并且，这些字体是下载到系统中，也就是说，如果其他 App 也使用了这个字体或者 App 删除后重装时是无需再额外下载这个字体的。\n\n[OC 官方Demo](https://developer.apple.com/library/content/samplecode/DownloadFont/Listings/DownloadFont_ViewController_m.html) / [swift Demo](https://github.com/linhay/Apple-Demos/tree/master/DownloadFont)\n\n1. 判断字体是否存在\n\n   ```swift\n       if let aFont = UIFont(name: fontName, size: 12),\n         aFont.fontName == fontName || aFont.familyName == fontName{\n   \t// 存在\n       }\n   ```\n\n2. 下载(具体代码请参照[swift Demo](https://github.com/linhay/Apple-Demos/tree/master/DownloadFont))\n\n   ```swift\n   let attrs = [kCTFontNameAttribute:fontName]\n   let desc = CTFontDescriptorCreateWithAttributes(attrs as CFDictionary)\n   let descs = [desc]\n   CTFontDescriptorMatchFontDescriptorsWithProgressHandler(descs as CFArray, nil) { (state, progressParameter) -> Bool in\n   // 下载\n   }     \n   ```\n\n   \n\n##### 注意点\n\n1. iOS 9 以下 系统 默认没有`PingFang`系列字体.\n\n2. 使用`UIFont`时`name`使用字体`postScriptName`.~~(有些字体文件与真实名称不符)~~,可以使用字体册查看具体名称.\n\n   ![](https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8-2.png)\n\n\n\n#### 附录:\n\n1. iOS 11系统提供字体\n\n```\nCopperplate\n - Copperplate-Light\n - Copperplate\n - Copperplate-Bold\nHeiti SC\nApple SD Gothic Neo\n - AppleSDGothicNeo-Thin\n - AppleSDGothicNeo-Light\n - AppleSDGothicNeo-Regular\n - AppleSDGothicNeo-Bold\n - AppleSDGothicNeo-SemiBold\n - AppleSDGothicNeo-UltraLight\n - AppleSDGothicNeo-Medium\nThonburi\n - Thonburi\n - Thonburi-Light\n - Thonburi-Bold\nGill Sans\n - GillSans-Italic\n - GillSans-SemiBold\n - GillSans-UltraBold\n - GillSans-Light\n - GillSans-Bold\n - GillSans\n - GillSans-SemiBoldItalic\n - GillSans-BoldItalic\n - GillSans-LightItalic\nMarker Felt\n - MarkerFelt-Thin\n - MarkerFelt-Wide\nHiragino Maru Gothic ProN\n - HiraMaruProN-W4\nCourier New\n - CourierNewPS-ItalicMT\n - CourierNewPSMT\n - CourierNewPS-BoldItalicMT\n - CourierNewPS-BoldMT\nKohinoor Telugu\n - KohinoorTelugu-Regular\n - KohinoorTelugu-Medium\n - KohinoorTelugu-Light\nHeiti TC\nAvenir Next Condensed\n - AvenirNextCondensed-Heavy\n - AvenirNextCondensed-MediumItalic\n - AvenirNextCondensed-Regular\n - AvenirNextCondensed-UltraLightItalic\n - AvenirNextCondensed-Medium\n - AvenirNextCondensed-HeavyItalic\n - AvenirNextCondensed-DemiBoldItalic\n - AvenirNextCondensed-Bold\n - AvenirNextCondensed-DemiBold\n - AvenirNextCondensed-BoldItalic\n - AvenirNextCondensed-Italic\n - AvenirNextCondensed-UltraLight\nTamil Sangam MN\n - TamilSangamMN\n - TamilSangamMN-Bold\nHelvetica Neue\n - HelveticaNeue-UltraLightItalic\n - HelveticaNeue-Medium\n - HelveticaNeue-MediumItalic\n - HelveticaNeue-UltraLight\n - HelveticaNeue-Italic\n - HelveticaNeue-Light\n - HelveticaNeue-ThinItalic\n - HelveticaNeue-LightItalic\n - HelveticaNeue-Bold\n - HelveticaNeue-Thin\n - HelveticaNeue-CondensedBlack\n - HelveticaNeue\n - HelveticaNeue-CondensedBold\n - HelveticaNeue-BoldItalic\nGurmukhi MN\n - GurmukhiMN-Bold\n - GurmukhiMN\nGeorgia\n - Georgia-BoldItalic\n - Georgia-Italic\n - Georgia\n - Georgia-Bold\nTimes New Roman\n - TimesNewRomanPS-ItalicMT\n - TimesNewRomanPS-BoldItalicMT\n - TimesNewRomanPS-BoldMT\n - TimesNewRomanPSMT\nSinhala Sangam MN\n - SinhalaSangamMN-Bold\n - SinhalaSangamMN\nArial Rounded MT Bold\n - ArialRoundedMTBold\nKailasa\n - Kailasa-Bold\n - Kailasa\nKohinoor Devanagari\n - KohinoorDevanagari-Regular\n - KohinoorDevanagari-Light\n - KohinoorDevanagari-Semibold\nKohinoor Bangla\n - KohinoorBangla-Regular\n - KohinoorBangla-Semibold\n - KohinoorBangla-Light\nChalkboard SE\n - ChalkboardSE-Bold\n - ChalkboardSE-Light\n - ChalkboardSE-Regular\nApple Color Emoji\n - AppleColorEmoji\nPingFang TC\n - PingFangTC-Regular\n - PingFangTC-Thin\n - PingFangTC-Medium\n - PingFangTC-Semibold\n - PingFangTC-Light\n - PingFangTC-Ultralight\nGujarati Sangam MN\n - GujaratiSangamMN\n - GujaratiSangamMN-Bold\nGeeza Pro\n - GeezaPro-Bold\n - GeezaPro\nDamascus\n - DamascusBold\n - DamascusLight\n - Damascus\n - DamascusMedium\n - DamascusSemiBold\nNoteworthy\n - Noteworthy-Bold\n - Noteworthy-Light\nAvenir\n - Avenir-Oblique\n - Avenir-HeavyOblique\n - Avenir-Heavy\n - Avenir-BlackOblique\n - Avenir-BookOblique\n - Avenir-Roman\n - Avenir-Medium\n - Avenir-Black\n - Avenir-Light\n - Avenir-MediumOblique\n - Avenir-Book\n - Avenir-LightOblique\nMishafi\n - DiwanMishafi\nAcademy Engraved LET\n - AcademyEngravedLetPlain\nFutura\n - Futura-CondensedExtraBold\n - Futura-Medium\n - Futura-Bold\n - Futura-CondensedMedium\n - Futura-MediumItalic\nParty LET\n - PartyLetPlain\nKannada Sangam MN\n - KannadaSangamMN-Bold\n - KannadaSangamMN\nArial Hebrew\n - ArialHebrew-Bold\n - ArialHebrew-Light\n - ArialHebrew\nFarah\n - Farah\nArial\n - Arial-BoldMT\n - Arial-BoldItalicMT\n - Arial-ItalicMT\n - ArialMT\nChalkduster\n - Chalkduster\nKefa\n - Kefa-Regular\nHoefler Text\n - HoeflerText-Italic\n - HoeflerText-Black\n - HoeflerText-Regular\n - HoeflerText-BlackItalic\nOptima\n - Optima-ExtraBlack\n - Optima-BoldItalic\n - Optima-Italic\n - Optima-Regular\n - Optima-Bold\nPalatino\n - Palatino-Italic\n - Palatino-Roman\n - Palatino-BoldItalic\n - Palatino-Bold\nMalayalam Sangam MN\n - MalayalamSangamMN-Bold\n - MalayalamSangamMN\nAl Nile\n - AlNile\n - AlNile-Bold\nLao Sangam MN\n - LaoSangamMN\nBradley Hand\n - BradleyHandITCTT-Bold\nHiragino Mincho ProN\n - HiraMinProN-W3\n - HiraMinProN-W6\nPingFang HK\n - PingFangHK-Medium\n - PingFangHK-Thin\n - PingFangHK-Regular\n - PingFangHK-Ultralight\n - PingFangHK-Semibold\n - PingFangHK-Light\nHelvetica\n - Helvetica-Oblique\n - Helvetica-BoldOblique\n - Helvetica\n - Helvetica-Light\n - Helvetica-Bold\n - Helvetica-LightOblique\nCourier\n - Courier-BoldOblique\n - Courier-Oblique\n - Courier\n - Courier-Bold\nCochin\n - Cochin-Italic\n - Cochin-Bold\n - Cochin\n - Cochin-BoldItalic\nTrebuchet MS\n - TrebuchetMS-Bold\n - TrebuchetMS-Italic\n - Trebuchet-BoldItalic\n - TrebuchetMS\nDevanagari Sangam MN\n - DevanagariSangamMN\n - DevanagariSangamMN-Bold\nOriya Sangam MN\n - OriyaSangamMN\n - OriyaSangamMN-Bold\nRockwell\n - Rockwell-Italic\n - Rockwell-Regular\n - Rockwell-Bold\n - Rockwell-BoldItalic\nSnell Roundhand\n - SnellRoundhand\n - SnellRoundhand-Bold\n - SnellRoundhand-Black\nZapf Dingbats\n - ZapfDingbatsITC\nBodoni 72\n - BodoniSvtyTwoITCTT-Bold\n - BodoniSvtyTwoITCTT-BookIta\n - BodoniSvtyTwoITCTT-Book\nVerdana\n - Verdana-Italic\n - Verdana\n - Verdana-Bold\n - Verdana-BoldItalic\nAmerican Typewriter\n - AmericanTypewriter-CondensedBold\n - AmericanTypewriter-Condensed\n - AmericanTypewriter-CondensedLight\n - AmericanTypewriter\n - AmericanTypewriter-Bold\n - AmericanTypewriter-Semibold\n - AmericanTypewriter-Light\nAvenir Next\n - AvenirNext-Medium\n - AvenirNext-DemiBoldItalic\n - AvenirNext-DemiBold\n - AvenirNext-HeavyItalic\n - AvenirNext-Regular\n - AvenirNext-Italic\n - AvenirNext-MediumItalic\n - AvenirNext-UltraLightItalic\n - AvenirNext-BoldItalic\n - AvenirNext-Heavy\n - AvenirNext-Bold\n - AvenirNext-UltraLight\nBaskerville\n - Baskerville-SemiBoldItalic\n - Baskerville-SemiBold\n - Baskerville-BoldItalic\n - Baskerville\n - Baskerville-Bold\n - Baskerville-Italic\nKhmer Sangam MN\n - KhmerSangamMN\nDidot\n - Didot-Bold\n - Didot\n - Didot-Italic\nSavoye LET\n - SavoyeLetPlain\nBodoni Ornaments\n - BodoniOrnamentsITCTT\nSymbol\n - Symbol\nCharter\n - Charter-BlackItalic\n - Charter-Bold\n - Charter-Roman\n - Charter-Black\n - Charter-BoldItalic\n - Charter-Italic\nMenlo\n - Menlo-BoldItalic\n - Menlo-Bold\n - Menlo-Italic\n - Menlo-Regular\nNoto Nastaliq Urdu\n - NotoNastaliqUrdu\nBodoni 72 Smallcaps\n - BodoniSvtyTwoSCITCTT-Book\nDIN Alternate\n - DINAlternate-Bold\nPapyrus\n - Papyrus-Condensed\n - Papyrus\nHiragino Sans\n - HiraginoSans-W3\n - HiraginoSans-W6\nPingFang SC\n - PingFangSC-Medium\n - PingFangSC-Semibold\n - PingFangSC-Light\n - PingFangSC-Ultralight\n - PingFangSC-Regular\n - PingFangSC-Thin\nMyanmar Sangam MN\n - MyanmarSangamMN\n - MyanmarSangamMN-Bold\nZapfino\n - Zapfino\nTelugu Sangam MN\nBodoni 72 Oldstyle\n - BodoniSvtyTwoOSITCTT-BookIt\n - BodoniSvtyTwoOSITCTT-Book\n - BodoniSvtyTwoOSITCTT-Bold\nEuphemia UCAS\n - EuphemiaUCAS\n - EuphemiaUCAS-Italic\n - EuphemiaUCAS-Bold\nBangla Sangam MN\nDIN Condensed\n - DINCondensed-Bold\n```\n\n","source":"_posts/[iOS]PingFangSC(苹方-简)字体使用.md","raw":"---\ntitle: iOS-加载第三方字体\ndate: 2018-05-02\ncategories: [ios]\ntags: [ios,swift]\n---\n\n\n## 加载第三方字体\n\n\n### 获取当前系统支持字体册\n\n```swift\n    UIFont.familyNames.forEach { (familyName) in\n      print(familyName)\n      UIFont.fontNames(forFamilyName: familyName).forEach { (item) in\n        print(\" - \" + item)\n      }\n    }\n```\n\n### 使用指定字体\n\n```swift\nlet font = UIFont(name: \"PingFangSC-Regular\", size: 18) \n```\n\n<!--more-->\n\n\n### 静态加载\n\n该方式简单直接,只需在工程中包含字体文件,并在info.plist声明便可使用.\n\n1. **添加字体文件**\n\n2. **info.plist修改**\n\n   - 增加`Fonts provided by application`字段\n   - 在该字段下添加引入的字体文件名\n\n   ![](https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8.png)\n\n###  动态加载\n\n通过指定字体文件路径加载,该种方式可配合 **网络下发/字体加密** 使用.\n\n```swift\n /// 加载本地字体文件\nfunc custom(fileURL: URL, size: CGFloat) -> UIFont? {\n\tguard let dataProvider = CGDataProvider(url: fileURL as CFURL),\n    let cgFont = CGFont(dataProvider),\n      /// 注册字体\n\tCTFontManagerRegisterGraphicsFont(cgFont, nil),\n\tlet fontName = cgFont.postScriptName as String? else { return nil }\n    return UIFont(name: fontName, size: size)\n  }\n```\n\n### 动态下载苹果提供的多种中文字体\n\n从 iOS 6 开始，苹果提供了一个新的 API 可以让我们动态下载苹果提供的额外字体。并且，这些字体是下载到系统中，也就是说，如果其他 App 也使用了这个字体或者 App 删除后重装时是无需再额外下载这个字体的。\n\n[OC 官方Demo](https://developer.apple.com/library/content/samplecode/DownloadFont/Listings/DownloadFont_ViewController_m.html) / [swift Demo](https://github.com/linhay/Apple-Demos/tree/master/DownloadFont)\n\n1. 判断字体是否存在\n\n   ```swift\n       if let aFont = UIFont(name: fontName, size: 12),\n         aFont.fontName == fontName || aFont.familyName == fontName{\n   \t// 存在\n       }\n   ```\n\n2. 下载(具体代码请参照[swift Demo](https://github.com/linhay/Apple-Demos/tree/master/DownloadFont))\n\n   ```swift\n   let attrs = [kCTFontNameAttribute:fontName]\n   let desc = CTFontDescriptorCreateWithAttributes(attrs as CFDictionary)\n   let descs = [desc]\n   CTFontDescriptorMatchFontDescriptorsWithProgressHandler(descs as CFArray, nil) { (state, progressParameter) -> Bool in\n   // 下载\n   }     \n   ```\n\n   \n\n##### 注意点\n\n1. iOS 9 以下 系统 默认没有`PingFang`系列字体.\n\n2. 使用`UIFont`时`name`使用字体`postScriptName`.~~(有些字体文件与真实名称不符)~~,可以使用字体册查看具体名称.\n\n   ![](https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8-2.png)\n\n\n\n#### 附录:\n\n1. iOS 11系统提供字体\n\n```\nCopperplate\n - Copperplate-Light\n - Copperplate\n - Copperplate-Bold\nHeiti SC\nApple SD Gothic Neo\n - AppleSDGothicNeo-Thin\n - AppleSDGothicNeo-Light\n - AppleSDGothicNeo-Regular\n - AppleSDGothicNeo-Bold\n - AppleSDGothicNeo-SemiBold\n - AppleSDGothicNeo-UltraLight\n - AppleSDGothicNeo-Medium\nThonburi\n - Thonburi\n - Thonburi-Light\n - Thonburi-Bold\nGill Sans\n - GillSans-Italic\n - GillSans-SemiBold\n - GillSans-UltraBold\n - GillSans-Light\n - GillSans-Bold\n - GillSans\n - GillSans-SemiBoldItalic\n - GillSans-BoldItalic\n - GillSans-LightItalic\nMarker Felt\n - MarkerFelt-Thin\n - MarkerFelt-Wide\nHiragino Maru Gothic ProN\n - HiraMaruProN-W4\nCourier New\n - CourierNewPS-ItalicMT\n - CourierNewPSMT\n - CourierNewPS-BoldItalicMT\n - CourierNewPS-BoldMT\nKohinoor Telugu\n - KohinoorTelugu-Regular\n - KohinoorTelugu-Medium\n - KohinoorTelugu-Light\nHeiti TC\nAvenir Next Condensed\n - AvenirNextCondensed-Heavy\n - AvenirNextCondensed-MediumItalic\n - AvenirNextCondensed-Regular\n - AvenirNextCondensed-UltraLightItalic\n - AvenirNextCondensed-Medium\n - AvenirNextCondensed-HeavyItalic\n - AvenirNextCondensed-DemiBoldItalic\n - AvenirNextCondensed-Bold\n - AvenirNextCondensed-DemiBold\n - AvenirNextCondensed-BoldItalic\n - AvenirNextCondensed-Italic\n - AvenirNextCondensed-UltraLight\nTamil Sangam MN\n - TamilSangamMN\n - TamilSangamMN-Bold\nHelvetica Neue\n - HelveticaNeue-UltraLightItalic\n - HelveticaNeue-Medium\n - HelveticaNeue-MediumItalic\n - HelveticaNeue-UltraLight\n - HelveticaNeue-Italic\n - HelveticaNeue-Light\n - HelveticaNeue-ThinItalic\n - HelveticaNeue-LightItalic\n - HelveticaNeue-Bold\n - HelveticaNeue-Thin\n - HelveticaNeue-CondensedBlack\n - HelveticaNeue\n - HelveticaNeue-CondensedBold\n - HelveticaNeue-BoldItalic\nGurmukhi MN\n - GurmukhiMN-Bold\n - GurmukhiMN\nGeorgia\n - Georgia-BoldItalic\n - Georgia-Italic\n - Georgia\n - Georgia-Bold\nTimes New Roman\n - TimesNewRomanPS-ItalicMT\n - TimesNewRomanPS-BoldItalicMT\n - TimesNewRomanPS-BoldMT\n - TimesNewRomanPSMT\nSinhala Sangam MN\n - SinhalaSangamMN-Bold\n - SinhalaSangamMN\nArial Rounded MT Bold\n - ArialRoundedMTBold\nKailasa\n - Kailasa-Bold\n - Kailasa\nKohinoor Devanagari\n - KohinoorDevanagari-Regular\n - KohinoorDevanagari-Light\n - KohinoorDevanagari-Semibold\nKohinoor Bangla\n - KohinoorBangla-Regular\n - KohinoorBangla-Semibold\n - KohinoorBangla-Light\nChalkboard SE\n - ChalkboardSE-Bold\n - ChalkboardSE-Light\n - ChalkboardSE-Regular\nApple Color Emoji\n - AppleColorEmoji\nPingFang TC\n - PingFangTC-Regular\n - PingFangTC-Thin\n - PingFangTC-Medium\n - PingFangTC-Semibold\n - PingFangTC-Light\n - PingFangTC-Ultralight\nGujarati Sangam MN\n - GujaratiSangamMN\n - GujaratiSangamMN-Bold\nGeeza Pro\n - GeezaPro-Bold\n - GeezaPro\nDamascus\n - DamascusBold\n - DamascusLight\n - Damascus\n - DamascusMedium\n - DamascusSemiBold\nNoteworthy\n - Noteworthy-Bold\n - Noteworthy-Light\nAvenir\n - Avenir-Oblique\n - Avenir-HeavyOblique\n - Avenir-Heavy\n - Avenir-BlackOblique\n - Avenir-BookOblique\n - Avenir-Roman\n - Avenir-Medium\n - Avenir-Black\n - Avenir-Light\n - Avenir-MediumOblique\n - Avenir-Book\n - Avenir-LightOblique\nMishafi\n - DiwanMishafi\nAcademy Engraved LET\n - AcademyEngravedLetPlain\nFutura\n - Futura-CondensedExtraBold\n - Futura-Medium\n - Futura-Bold\n - Futura-CondensedMedium\n - Futura-MediumItalic\nParty LET\n - PartyLetPlain\nKannada Sangam MN\n - KannadaSangamMN-Bold\n - KannadaSangamMN\nArial Hebrew\n - ArialHebrew-Bold\n - ArialHebrew-Light\n - ArialHebrew\nFarah\n - Farah\nArial\n - Arial-BoldMT\n - Arial-BoldItalicMT\n - Arial-ItalicMT\n - ArialMT\nChalkduster\n - Chalkduster\nKefa\n - Kefa-Regular\nHoefler Text\n - HoeflerText-Italic\n - HoeflerText-Black\n - HoeflerText-Regular\n - HoeflerText-BlackItalic\nOptima\n - Optima-ExtraBlack\n - Optima-BoldItalic\n - Optima-Italic\n - Optima-Regular\n - Optima-Bold\nPalatino\n - Palatino-Italic\n - Palatino-Roman\n - Palatino-BoldItalic\n - Palatino-Bold\nMalayalam Sangam MN\n - MalayalamSangamMN-Bold\n - MalayalamSangamMN\nAl Nile\n - AlNile\n - AlNile-Bold\nLao Sangam MN\n - LaoSangamMN\nBradley Hand\n - BradleyHandITCTT-Bold\nHiragino Mincho ProN\n - HiraMinProN-W3\n - HiraMinProN-W6\nPingFang HK\n - PingFangHK-Medium\n - PingFangHK-Thin\n - PingFangHK-Regular\n - PingFangHK-Ultralight\n - PingFangHK-Semibold\n - PingFangHK-Light\nHelvetica\n - Helvetica-Oblique\n - Helvetica-BoldOblique\n - Helvetica\n - Helvetica-Light\n - Helvetica-Bold\n - Helvetica-LightOblique\nCourier\n - Courier-BoldOblique\n - Courier-Oblique\n - Courier\n - Courier-Bold\nCochin\n - Cochin-Italic\n - Cochin-Bold\n - Cochin\n - Cochin-BoldItalic\nTrebuchet MS\n - TrebuchetMS-Bold\n - TrebuchetMS-Italic\n - Trebuchet-BoldItalic\n - TrebuchetMS\nDevanagari Sangam MN\n - DevanagariSangamMN\n - DevanagariSangamMN-Bold\nOriya Sangam MN\n - OriyaSangamMN\n - OriyaSangamMN-Bold\nRockwell\n - Rockwell-Italic\n - Rockwell-Regular\n - Rockwell-Bold\n - Rockwell-BoldItalic\nSnell Roundhand\n - SnellRoundhand\n - SnellRoundhand-Bold\n - SnellRoundhand-Black\nZapf Dingbats\n - ZapfDingbatsITC\nBodoni 72\n - BodoniSvtyTwoITCTT-Bold\n - BodoniSvtyTwoITCTT-BookIta\n - BodoniSvtyTwoITCTT-Book\nVerdana\n - Verdana-Italic\n - Verdana\n - Verdana-Bold\n - Verdana-BoldItalic\nAmerican Typewriter\n - AmericanTypewriter-CondensedBold\n - AmericanTypewriter-Condensed\n - AmericanTypewriter-CondensedLight\n - AmericanTypewriter\n - AmericanTypewriter-Bold\n - AmericanTypewriter-Semibold\n - AmericanTypewriter-Light\nAvenir Next\n - AvenirNext-Medium\n - AvenirNext-DemiBoldItalic\n - AvenirNext-DemiBold\n - AvenirNext-HeavyItalic\n - AvenirNext-Regular\n - AvenirNext-Italic\n - AvenirNext-MediumItalic\n - AvenirNext-UltraLightItalic\n - AvenirNext-BoldItalic\n - AvenirNext-Heavy\n - AvenirNext-Bold\n - AvenirNext-UltraLight\nBaskerville\n - Baskerville-SemiBoldItalic\n - Baskerville-SemiBold\n - Baskerville-BoldItalic\n - Baskerville\n - Baskerville-Bold\n - Baskerville-Italic\nKhmer Sangam MN\n - KhmerSangamMN\nDidot\n - Didot-Bold\n - Didot\n - Didot-Italic\nSavoye LET\n - SavoyeLetPlain\nBodoni Ornaments\n - BodoniOrnamentsITCTT\nSymbol\n - Symbol\nCharter\n - Charter-BlackItalic\n - Charter-Bold\n - Charter-Roman\n - Charter-Black\n - Charter-BoldItalic\n - Charter-Italic\nMenlo\n - Menlo-BoldItalic\n - Menlo-Bold\n - Menlo-Italic\n - Menlo-Regular\nNoto Nastaliq Urdu\n - NotoNastaliqUrdu\nBodoni 72 Smallcaps\n - BodoniSvtyTwoSCITCTT-Book\nDIN Alternate\n - DINAlternate-Bold\nPapyrus\n - Papyrus-Condensed\n - Papyrus\nHiragino Sans\n - HiraginoSans-W3\n - HiraginoSans-W6\nPingFang SC\n - PingFangSC-Medium\n - PingFangSC-Semibold\n - PingFangSC-Light\n - PingFangSC-Ultralight\n - PingFangSC-Regular\n - PingFangSC-Thin\nMyanmar Sangam MN\n - MyanmarSangamMN\n - MyanmarSangamMN-Bold\nZapfino\n - Zapfino\nTelugu Sangam MN\nBodoni 72 Oldstyle\n - BodoniSvtyTwoOSITCTT-BookIt\n - BodoniSvtyTwoOSITCTT-Book\n - BodoniSvtyTwoOSITCTT-Bold\nEuphemia UCAS\n - EuphemiaUCAS\n - EuphemiaUCAS-Italic\n - EuphemiaUCAS-Bold\nBangla Sangam MN\nDIN Condensed\n - DINCondensed-Bold\n```\n\n","slug":"[iOS]PingFangSC(苹方-简)字体使用","published":1,"updated":"2018-07-10T10:31:36.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjoy5s1n20047rfz6jw1ls043","content":"<h2 id=\"加载第三方字体\"><a href=\"#加载第三方字体\" class=\"headerlink\" title=\"加载第三方字体\"></a>加载第三方字体</h2><h3 id=\"获取当前系统支持字体册\"><a href=\"#获取当前系统支持字体册\" class=\"headerlink\" title=\"获取当前系统支持字体册\"></a>获取当前系统支持字体册</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UIFont</span>.familyNames.forEach &#123; (familyName) <span class=\"keyword\">in</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(familyName)</span><br><span class=\"line\">  <span class=\"type\">UIFont</span>.fontNames(forFamilyName: familyName).forEach &#123; (item) <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\" - \"</span> + item)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用指定字体\"><a href=\"#使用指定字体\" class=\"headerlink\" title=\"使用指定字体\"></a>使用指定字体</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> font = <span class=\"type\">UIFont</span>(name: <span class=\"string\">\"PingFangSC-Regular\"</span>, size: <span class=\"number\">18</span>)</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"静态加载\"><a href=\"#静态加载\" class=\"headerlink\" title=\"静态加载\"></a>静态加载</h3><p>该方式简单直接,只需在工程中包含字体文件,并在info.plist声明便可使用.</p>\n<ol>\n<li><p><strong>添加字体文件</strong></p>\n</li>\n<li><p><strong>info.plist修改</strong></p>\n<ul>\n<li>增加<code>Fonts provided by application</code>字段</li>\n<li>在该字段下添加引入的字体文件名</li>\n</ul>\n<p><img src=\"https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8.png\" alt=\"\"></p>\n</li>\n</ol>\n<h3 id=\"动态加载\"><a href=\"#动态加载\" class=\"headerlink\" title=\"动态加载\"></a>动态加载</h3><p>通过指定字体文件路径加载,该种方式可配合 <strong>网络下发/字体加密</strong> 使用.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/// 加载本地字体文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">custom</span><span class=\"params\">(fileURL: URL, size: CGFloat)</span></span> -&gt; <span class=\"type\">UIFont</span>? &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> dataProvider = <span class=\"type\">CGDataProvider</span>(url: fileURL <span class=\"keyword\">as</span> <span class=\"type\">CFURL</span>),</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cgFont = <span class=\"type\">CGFont</span>(dataProvider),</span><br><span class=\"line\">      <span class=\"comment\">/// 注册字体</span></span><br><span class=\"line\">\t<span class=\"type\">CTFontManagerRegisterGraphicsFont</span>(cgFont, <span class=\"literal\">nil</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> fontName = cgFont.postScriptName <span class=\"keyword\">as</span> <span class=\"type\">String</span>? <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"literal\">nil</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">UIFont</span>(name: fontName, size: size)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"动态下载苹果提供的多种中文字体\"><a href=\"#动态下载苹果提供的多种中文字体\" class=\"headerlink\" title=\"动态下载苹果提供的多种中文字体\"></a>动态下载苹果提供的多种中文字体</h3><p>从 iOS 6 开始，苹果提供了一个新的 API 可以让我们动态下载苹果提供的额外字体。并且，这些字体是下载到系统中，也就是说，如果其他 App 也使用了这个字体或者 App 删除后重装时是无需再额外下载这个字体的。</p>\n<p><a href=\"https://developer.apple.com/library/content/samplecode/DownloadFont/Listings/DownloadFont_ViewController_m.html\" target=\"_blank\" rel=\"noopener\">OC 官方Demo</a> / <a href=\"https://github.com/linhay/Apple-Demos/tree/master/DownloadFont\" target=\"_blank\" rel=\"noopener\">swift Demo</a></p>\n<ol>\n<li><p>判断字体是否存在</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> aFont = <span class=\"type\">UIFont</span>(name: fontName, size: <span class=\"number\">12</span>),</span><br><span class=\"line\">     aFont.fontName == fontName || aFont.familyName == fontName&#123;</span><br><span class=\"line\"><span class=\"comment\">// 存在</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载(具体代码请参照<a href=\"https://github.com/linhay/Apple-Demos/tree/master/DownloadFont\" target=\"_blank\" rel=\"noopener\">swift Demo</a>)</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> attrs = [kCTFontNameAttribute:fontName]</span><br><span class=\"line\"><span class=\"keyword\">let</span> desc = <span class=\"type\">CTFontDescriptorCreateWithAttributes</span>(attrs <span class=\"keyword\">as</span> <span class=\"type\">CFDictionary</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> descs = [desc]</span><br><span class=\"line\"><span class=\"type\">CTFontDescriptorMatchFontDescriptorsWithProgressHandler</span>(descs <span class=\"keyword\">as</span> <span class=\"type\">CFArray</span>, <span class=\"literal\">nil</span>) &#123; (state, progressParameter) -&gt; <span class=\"type\">Bool</span> <span class=\"keyword\">in</span></span><br><span class=\"line\"><span class=\"comment\">// 下载</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h5><ol>\n<li><p>iOS 9 以下 系统 默认没有<code>PingFang</code>系列字体.</p>\n</li>\n<li><p>使用<code>UIFont</code>时<code>name</code>使用字体<code>postScriptName</code>.<del>(有些字体文件与真实名称不符)</del>,可以使用字体册查看具体名称.</p>\n<p><img src=\"https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8-2.png\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录:\"></a>附录:</h4><ol>\n<li>iOS 11系统提供字体</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copperplate</span><br><span class=\"line\"> - Copperplate-Light</span><br><span class=\"line\"> - Copperplate</span><br><span class=\"line\"> - Copperplate-Bold</span><br><span class=\"line\">Heiti SC</span><br><span class=\"line\">Apple SD Gothic Neo</span><br><span class=\"line\"> - AppleSDGothicNeo-Thin</span><br><span class=\"line\"> - AppleSDGothicNeo-Light</span><br><span class=\"line\"> - AppleSDGothicNeo-Regular</span><br><span class=\"line\"> - AppleSDGothicNeo-Bold</span><br><span class=\"line\"> - AppleSDGothicNeo-SemiBold</span><br><span class=\"line\"> - AppleSDGothicNeo-UltraLight</span><br><span class=\"line\"> - AppleSDGothicNeo-Medium</span><br><span class=\"line\">Thonburi</span><br><span class=\"line\"> - Thonburi</span><br><span class=\"line\"> - Thonburi-Light</span><br><span class=\"line\"> - Thonburi-Bold</span><br><span class=\"line\">Gill Sans</span><br><span class=\"line\"> - GillSans-Italic</span><br><span class=\"line\"> - GillSans-SemiBold</span><br><span class=\"line\"> - GillSans-UltraBold</span><br><span class=\"line\"> - GillSans-Light</span><br><span class=\"line\"> - GillSans-Bold</span><br><span class=\"line\"> - GillSans</span><br><span class=\"line\"> - GillSans-SemiBoldItalic</span><br><span class=\"line\"> - GillSans-BoldItalic</span><br><span class=\"line\"> - GillSans-LightItalic</span><br><span class=\"line\">Marker Felt</span><br><span class=\"line\"> - MarkerFelt-Thin</span><br><span class=\"line\"> - MarkerFelt-Wide</span><br><span class=\"line\">Hiragino Maru Gothic ProN</span><br><span class=\"line\"> - HiraMaruProN-W4</span><br><span class=\"line\">Courier New</span><br><span class=\"line\"> - CourierNewPS-ItalicMT</span><br><span class=\"line\"> - CourierNewPSMT</span><br><span class=\"line\"> - CourierNewPS-BoldItalicMT</span><br><span class=\"line\"> - CourierNewPS-BoldMT</span><br><span class=\"line\">Kohinoor Telugu</span><br><span class=\"line\"> - KohinoorTelugu-Regular</span><br><span class=\"line\"> - KohinoorTelugu-Medium</span><br><span class=\"line\"> - KohinoorTelugu-Light</span><br><span class=\"line\">Heiti TC</span><br><span class=\"line\">Avenir Next Condensed</span><br><span class=\"line\"> - AvenirNextCondensed-Heavy</span><br><span class=\"line\"> - AvenirNextCondensed-MediumItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Regular</span><br><span class=\"line\"> - AvenirNextCondensed-UltraLightItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Medium</span><br><span class=\"line\"> - AvenirNextCondensed-HeavyItalic</span><br><span class=\"line\"> - AvenirNextCondensed-DemiBoldItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Bold</span><br><span class=\"line\"> - AvenirNextCondensed-DemiBold</span><br><span class=\"line\"> - AvenirNextCondensed-BoldItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Italic</span><br><span class=\"line\"> - AvenirNextCondensed-UltraLight</span><br><span class=\"line\">Tamil Sangam MN</span><br><span class=\"line\"> - TamilSangamMN</span><br><span class=\"line\"> - TamilSangamMN-Bold</span><br><span class=\"line\">Helvetica Neue</span><br><span class=\"line\"> - HelveticaNeue-UltraLightItalic</span><br><span class=\"line\"> - HelveticaNeue-Medium</span><br><span class=\"line\"> - HelveticaNeue-MediumItalic</span><br><span class=\"line\"> - HelveticaNeue-UltraLight</span><br><span class=\"line\"> - HelveticaNeue-Italic</span><br><span class=\"line\"> - HelveticaNeue-Light</span><br><span class=\"line\"> - HelveticaNeue-ThinItalic</span><br><span class=\"line\"> - HelveticaNeue-LightItalic</span><br><span class=\"line\"> - HelveticaNeue-Bold</span><br><span class=\"line\"> - HelveticaNeue-Thin</span><br><span class=\"line\"> - HelveticaNeue-CondensedBlack</span><br><span class=\"line\"> - HelveticaNeue</span><br><span class=\"line\"> - HelveticaNeue-CondensedBold</span><br><span class=\"line\"> - HelveticaNeue-BoldItalic</span><br><span class=\"line\">Gurmukhi MN</span><br><span class=\"line\"> - GurmukhiMN-Bold</span><br><span class=\"line\"> - GurmukhiMN</span><br><span class=\"line\">Georgia</span><br><span class=\"line\"> - Georgia-BoldItalic</span><br><span class=\"line\"> - Georgia-Italic</span><br><span class=\"line\"> - Georgia</span><br><span class=\"line\"> - Georgia-Bold</span><br><span class=\"line\">Times New Roman</span><br><span class=\"line\"> - TimesNewRomanPS-ItalicMT</span><br><span class=\"line\"> - TimesNewRomanPS-BoldItalicMT</span><br><span class=\"line\"> - TimesNewRomanPS-BoldMT</span><br><span class=\"line\"> - TimesNewRomanPSMT</span><br><span class=\"line\">Sinhala Sangam MN</span><br><span class=\"line\"> - SinhalaSangamMN-Bold</span><br><span class=\"line\"> - SinhalaSangamMN</span><br><span class=\"line\">Arial Rounded MT Bold</span><br><span class=\"line\"> - ArialRoundedMTBold</span><br><span class=\"line\">Kailasa</span><br><span class=\"line\"> - Kailasa-Bold</span><br><span class=\"line\"> - Kailasa</span><br><span class=\"line\">Kohinoor Devanagari</span><br><span class=\"line\"> - KohinoorDevanagari-Regular</span><br><span class=\"line\"> - KohinoorDevanagari-Light</span><br><span class=\"line\"> - KohinoorDevanagari-Semibold</span><br><span class=\"line\">Kohinoor Bangla</span><br><span class=\"line\"> - KohinoorBangla-Regular</span><br><span class=\"line\"> - KohinoorBangla-Semibold</span><br><span class=\"line\"> - KohinoorBangla-Light</span><br><span class=\"line\">Chalkboard SE</span><br><span class=\"line\"> - ChalkboardSE-Bold</span><br><span class=\"line\"> - ChalkboardSE-Light</span><br><span class=\"line\"> - ChalkboardSE-Regular</span><br><span class=\"line\">Apple Color Emoji</span><br><span class=\"line\"> - AppleColorEmoji</span><br><span class=\"line\">PingFang TC</span><br><span class=\"line\"> - PingFangTC-Regular</span><br><span class=\"line\"> - PingFangTC-Thin</span><br><span class=\"line\"> - PingFangTC-Medium</span><br><span class=\"line\"> - PingFangTC-Semibold</span><br><span class=\"line\"> - PingFangTC-Light</span><br><span class=\"line\"> - PingFangTC-Ultralight</span><br><span class=\"line\">Gujarati Sangam MN</span><br><span class=\"line\"> - GujaratiSangamMN</span><br><span class=\"line\"> - GujaratiSangamMN-Bold</span><br><span class=\"line\">Geeza Pro</span><br><span class=\"line\"> - GeezaPro-Bold</span><br><span class=\"line\"> - GeezaPro</span><br><span class=\"line\">Damascus</span><br><span class=\"line\"> - DamascusBold</span><br><span class=\"line\"> - DamascusLight</span><br><span class=\"line\"> - Damascus</span><br><span class=\"line\"> - DamascusMedium</span><br><span class=\"line\"> - DamascusSemiBold</span><br><span class=\"line\">Noteworthy</span><br><span class=\"line\"> - Noteworthy-Bold</span><br><span class=\"line\"> - Noteworthy-Light</span><br><span class=\"line\">Avenir</span><br><span class=\"line\"> - Avenir-Oblique</span><br><span class=\"line\"> - Avenir-HeavyOblique</span><br><span class=\"line\"> - Avenir-Heavy</span><br><span class=\"line\"> - Avenir-BlackOblique</span><br><span class=\"line\"> - Avenir-BookOblique</span><br><span class=\"line\"> - Avenir-Roman</span><br><span class=\"line\"> - Avenir-Medium</span><br><span class=\"line\"> - Avenir-Black</span><br><span class=\"line\"> - Avenir-Light</span><br><span class=\"line\"> - Avenir-MediumOblique</span><br><span class=\"line\"> - Avenir-Book</span><br><span class=\"line\"> - Avenir-LightOblique</span><br><span class=\"line\">Mishafi</span><br><span class=\"line\"> - DiwanMishafi</span><br><span class=\"line\">Academy Engraved LET</span><br><span class=\"line\"> - AcademyEngravedLetPlain</span><br><span class=\"line\">Futura</span><br><span class=\"line\"> - Futura-CondensedExtraBold</span><br><span class=\"line\"> - Futura-Medium</span><br><span class=\"line\"> - Futura-Bold</span><br><span class=\"line\"> - Futura-CondensedMedium</span><br><span class=\"line\"> - Futura-MediumItalic</span><br><span class=\"line\">Party LET</span><br><span class=\"line\"> - PartyLetPlain</span><br><span class=\"line\">Kannada Sangam MN</span><br><span class=\"line\"> - KannadaSangamMN-Bold</span><br><span class=\"line\"> - KannadaSangamMN</span><br><span class=\"line\">Arial Hebrew</span><br><span class=\"line\"> - ArialHebrew-Bold</span><br><span class=\"line\"> - ArialHebrew-Light</span><br><span class=\"line\"> - ArialHebrew</span><br><span class=\"line\">Farah</span><br><span class=\"line\"> - Farah</span><br><span class=\"line\">Arial</span><br><span class=\"line\"> - Arial-BoldMT</span><br><span class=\"line\"> - Arial-BoldItalicMT</span><br><span class=\"line\"> - Arial-ItalicMT</span><br><span class=\"line\"> - ArialMT</span><br><span class=\"line\">Chalkduster</span><br><span class=\"line\"> - Chalkduster</span><br><span class=\"line\">Kefa</span><br><span class=\"line\"> - Kefa-Regular</span><br><span class=\"line\">Hoefler Text</span><br><span class=\"line\"> - HoeflerText-Italic</span><br><span class=\"line\"> - HoeflerText-Black</span><br><span class=\"line\"> - HoeflerText-Regular</span><br><span class=\"line\"> - HoeflerText-BlackItalic</span><br><span class=\"line\">Optima</span><br><span class=\"line\"> - Optima-ExtraBlack</span><br><span class=\"line\"> - Optima-BoldItalic</span><br><span class=\"line\"> - Optima-Italic</span><br><span class=\"line\"> - Optima-Regular</span><br><span class=\"line\"> - Optima-Bold</span><br><span class=\"line\">Palatino</span><br><span class=\"line\"> - Palatino-Italic</span><br><span class=\"line\"> - Palatino-Roman</span><br><span class=\"line\"> - Palatino-BoldItalic</span><br><span class=\"line\"> - Palatino-Bold</span><br><span class=\"line\">Malayalam Sangam MN</span><br><span class=\"line\"> - MalayalamSangamMN-Bold</span><br><span class=\"line\"> - MalayalamSangamMN</span><br><span class=\"line\">Al Nile</span><br><span class=\"line\"> - AlNile</span><br><span class=\"line\"> - AlNile-Bold</span><br><span class=\"line\">Lao Sangam MN</span><br><span class=\"line\"> - LaoSangamMN</span><br><span class=\"line\">Bradley Hand</span><br><span class=\"line\"> - BradleyHandITCTT-Bold</span><br><span class=\"line\">Hiragino Mincho ProN</span><br><span class=\"line\"> - HiraMinProN-W3</span><br><span class=\"line\"> - HiraMinProN-W6</span><br><span class=\"line\">PingFang HK</span><br><span class=\"line\"> - PingFangHK-Medium</span><br><span class=\"line\"> - PingFangHK-Thin</span><br><span class=\"line\"> - PingFangHK-Regular</span><br><span class=\"line\"> - PingFangHK-Ultralight</span><br><span class=\"line\"> - PingFangHK-Semibold</span><br><span class=\"line\"> - PingFangHK-Light</span><br><span class=\"line\">Helvetica</span><br><span class=\"line\"> - Helvetica-Oblique</span><br><span class=\"line\"> - Helvetica-BoldOblique</span><br><span class=\"line\"> - Helvetica</span><br><span class=\"line\"> - Helvetica-Light</span><br><span class=\"line\"> - Helvetica-Bold</span><br><span class=\"line\"> - Helvetica-LightOblique</span><br><span class=\"line\">Courier</span><br><span class=\"line\"> - Courier-BoldOblique</span><br><span class=\"line\"> - Courier-Oblique</span><br><span class=\"line\"> - Courier</span><br><span class=\"line\"> - Courier-Bold</span><br><span class=\"line\">Cochin</span><br><span class=\"line\"> - Cochin-Italic</span><br><span class=\"line\"> - Cochin-Bold</span><br><span class=\"line\"> - Cochin</span><br><span class=\"line\"> - Cochin-BoldItalic</span><br><span class=\"line\">Trebuchet MS</span><br><span class=\"line\"> - TrebuchetMS-Bold</span><br><span class=\"line\"> - TrebuchetMS-Italic</span><br><span class=\"line\"> - Trebuchet-BoldItalic</span><br><span class=\"line\"> - TrebuchetMS</span><br><span class=\"line\">Devanagari Sangam MN</span><br><span class=\"line\"> - DevanagariSangamMN</span><br><span class=\"line\"> - DevanagariSangamMN-Bold</span><br><span class=\"line\">Oriya Sangam MN</span><br><span class=\"line\"> - OriyaSangamMN</span><br><span class=\"line\"> - OriyaSangamMN-Bold</span><br><span class=\"line\">Rockwell</span><br><span class=\"line\"> - Rockwell-Italic</span><br><span class=\"line\"> - Rockwell-Regular</span><br><span class=\"line\"> - Rockwell-Bold</span><br><span class=\"line\"> - Rockwell-BoldItalic</span><br><span class=\"line\">Snell Roundhand</span><br><span class=\"line\"> - SnellRoundhand</span><br><span class=\"line\"> - SnellRoundhand-Bold</span><br><span class=\"line\"> - SnellRoundhand-Black</span><br><span class=\"line\">Zapf Dingbats</span><br><span class=\"line\"> - ZapfDingbatsITC</span><br><span class=\"line\">Bodoni 72</span><br><span class=\"line\"> - BodoniSvtyTwoITCTT-Bold</span><br><span class=\"line\"> - BodoniSvtyTwoITCTT-BookIta</span><br><span class=\"line\"> - BodoniSvtyTwoITCTT-Book</span><br><span class=\"line\">Verdana</span><br><span class=\"line\"> - Verdana-Italic</span><br><span class=\"line\"> - Verdana</span><br><span class=\"line\"> - Verdana-Bold</span><br><span class=\"line\"> - Verdana-BoldItalic</span><br><span class=\"line\">American Typewriter</span><br><span class=\"line\"> - AmericanTypewriter-CondensedBold</span><br><span class=\"line\"> - AmericanTypewriter-Condensed</span><br><span class=\"line\"> - AmericanTypewriter-CondensedLight</span><br><span class=\"line\"> - AmericanTypewriter</span><br><span class=\"line\"> - AmericanTypewriter-Bold</span><br><span class=\"line\"> - AmericanTypewriter-Semibold</span><br><span class=\"line\"> - AmericanTypewriter-Light</span><br><span class=\"line\">Avenir Next</span><br><span class=\"line\"> - AvenirNext-Medium</span><br><span class=\"line\"> - AvenirNext-DemiBoldItalic</span><br><span class=\"line\"> - AvenirNext-DemiBold</span><br><span class=\"line\"> - AvenirNext-HeavyItalic</span><br><span class=\"line\"> - AvenirNext-Regular</span><br><span class=\"line\"> - AvenirNext-Italic</span><br><span class=\"line\"> - AvenirNext-MediumItalic</span><br><span class=\"line\"> - AvenirNext-UltraLightItalic</span><br><span class=\"line\"> - AvenirNext-BoldItalic</span><br><span class=\"line\"> - AvenirNext-Heavy</span><br><span class=\"line\"> - AvenirNext-Bold</span><br><span class=\"line\"> - AvenirNext-UltraLight</span><br><span class=\"line\">Baskerville</span><br><span class=\"line\"> - Baskerville-SemiBoldItalic</span><br><span class=\"line\"> - Baskerville-SemiBold</span><br><span class=\"line\"> - Baskerville-BoldItalic</span><br><span class=\"line\"> - Baskerville</span><br><span class=\"line\"> - Baskerville-Bold</span><br><span class=\"line\"> - Baskerville-Italic</span><br><span class=\"line\">Khmer Sangam MN</span><br><span class=\"line\"> - KhmerSangamMN</span><br><span class=\"line\">Didot</span><br><span class=\"line\"> - Didot-Bold</span><br><span class=\"line\"> - Didot</span><br><span class=\"line\"> - Didot-Italic</span><br><span class=\"line\">Savoye LET</span><br><span class=\"line\"> - SavoyeLetPlain</span><br><span class=\"line\">Bodoni Ornaments</span><br><span class=\"line\"> - BodoniOrnamentsITCTT</span><br><span class=\"line\">Symbol</span><br><span class=\"line\"> - Symbol</span><br><span class=\"line\">Charter</span><br><span class=\"line\"> - Charter-BlackItalic</span><br><span class=\"line\"> - Charter-Bold</span><br><span class=\"line\"> - Charter-Roman</span><br><span class=\"line\"> - Charter-Black</span><br><span class=\"line\"> - Charter-BoldItalic</span><br><span class=\"line\"> - Charter-Italic</span><br><span class=\"line\">Menlo</span><br><span class=\"line\"> - Menlo-BoldItalic</span><br><span class=\"line\"> - Menlo-Bold</span><br><span class=\"line\"> - Menlo-Italic</span><br><span class=\"line\"> - Menlo-Regular</span><br><span class=\"line\">Noto Nastaliq Urdu</span><br><span class=\"line\"> - NotoNastaliqUrdu</span><br><span class=\"line\">Bodoni 72 Smallcaps</span><br><span class=\"line\"> - BodoniSvtyTwoSCITCTT-Book</span><br><span class=\"line\">DIN Alternate</span><br><span class=\"line\"> - DINAlternate-Bold</span><br><span class=\"line\">Papyrus</span><br><span class=\"line\"> - Papyrus-Condensed</span><br><span class=\"line\"> - Papyrus</span><br><span class=\"line\">Hiragino Sans</span><br><span class=\"line\"> - HiraginoSans-W3</span><br><span class=\"line\"> - HiraginoSans-W6</span><br><span class=\"line\">PingFang SC</span><br><span class=\"line\"> - PingFangSC-Medium</span><br><span class=\"line\"> - PingFangSC-Semibold</span><br><span class=\"line\"> - PingFangSC-Light</span><br><span class=\"line\"> - PingFangSC-Ultralight</span><br><span class=\"line\"> - PingFangSC-Regular</span><br><span class=\"line\"> - PingFangSC-Thin</span><br><span class=\"line\">Myanmar Sangam MN</span><br><span class=\"line\"> - MyanmarSangamMN</span><br><span class=\"line\"> - MyanmarSangamMN-Bold</span><br><span class=\"line\">Zapfino</span><br><span class=\"line\"> - Zapfino</span><br><span class=\"line\">Telugu Sangam MN</span><br><span class=\"line\">Bodoni 72 Oldstyle</span><br><span class=\"line\"> - BodoniSvtyTwoOSITCTT-BookIt</span><br><span class=\"line\"> - BodoniSvtyTwoOSITCTT-Book</span><br><span class=\"line\"> - BodoniSvtyTwoOSITCTT-Bold</span><br><span class=\"line\">Euphemia UCAS</span><br><span class=\"line\"> - EuphemiaUCAS</span><br><span class=\"line\"> - EuphemiaUCAS-Italic</span><br><span class=\"line\"> - EuphemiaUCAS-Bold</span><br><span class=\"line\">Bangla Sangam MN</span><br><span class=\"line\">DIN Condensed</span><br><span class=\"line\"> - DINCondensed-Bold</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"加载第三方字体\"><a href=\"#加载第三方字体\" class=\"headerlink\" title=\"加载第三方字体\"></a>加载第三方字体</h2><h3 id=\"获取当前系统支持字体册\"><a href=\"#获取当前系统支持字体册\" class=\"headerlink\" title=\"获取当前系统支持字体册\"></a>获取当前系统支持字体册</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">UIFont</span>.familyNames.forEach &#123; (familyName) <span class=\"keyword\">in</span></span><br><span class=\"line\">  <span class=\"built_in\">print</span>(familyName)</span><br><span class=\"line\">  <span class=\"type\">UIFont</span>.fontNames(forFamilyName: familyName).forEach &#123; (item) <span class=\"keyword\">in</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">\" - \"</span> + item)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"使用指定字体\"><a href=\"#使用指定字体\" class=\"headerlink\" title=\"使用指定字体\"></a>使用指定字体</h3><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> font = <span class=\"type\">UIFont</span>(name: <span class=\"string\">\"PingFangSC-Regular\"</span>, size: <span class=\"number\">18</span>)</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"静态加载\"><a href=\"#静态加载\" class=\"headerlink\" title=\"静态加载\"></a>静态加载</h3><p>该方式简单直接,只需在工程中包含字体文件,并在info.plist声明便可使用.</p>\n<ol>\n<li><p><strong>添加字体文件</strong></p>\n</li>\n<li><p><strong>info.plist修改</strong></p>\n<ul>\n<li>增加<code>Fonts provided by application</code>字段</li>\n<li>在该字段下添加引入的字体文件名</li>\n</ul>\n<p><img src=\"https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8.png\" alt=\"\"></p>\n</li>\n</ol>\n<h3 id=\"动态加载\"><a href=\"#动态加载\" class=\"headerlink\" title=\"动态加载\"></a>动态加载</h3><p>通过指定字体文件路径加载,该种方式可配合 <strong>网络下发/字体加密</strong> 使用.</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">/// 加载本地字体文件</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">custom</span><span class=\"params\">(fileURL: URL, size: CGFloat)</span></span> -&gt; <span class=\"type\">UIFont</span>? &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> dataProvider = <span class=\"type\">CGDataProvider</span>(url: fileURL <span class=\"keyword\">as</span> <span class=\"type\">CFURL</span>),</span><br><span class=\"line\">    <span class=\"keyword\">let</span> cgFont = <span class=\"type\">CGFont</span>(dataProvider),</span><br><span class=\"line\">      <span class=\"comment\">/// 注册字体</span></span><br><span class=\"line\">\t<span class=\"type\">CTFontManagerRegisterGraphicsFont</span>(cgFont, <span class=\"literal\">nil</span>),</span><br><span class=\"line\">\t<span class=\"keyword\">let</span> fontName = cgFont.postScriptName <span class=\"keyword\">as</span> <span class=\"type\">String</span>? <span class=\"keyword\">else</span> &#123; <span class=\"keyword\">return</span> <span class=\"literal\">nil</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"type\">UIFont</span>(name: fontName, size: size)</span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"动态下载苹果提供的多种中文字体\"><a href=\"#动态下载苹果提供的多种中文字体\" class=\"headerlink\" title=\"动态下载苹果提供的多种中文字体\"></a>动态下载苹果提供的多种中文字体</h3><p>从 iOS 6 开始，苹果提供了一个新的 API 可以让我们动态下载苹果提供的额外字体。并且，这些字体是下载到系统中，也就是说，如果其他 App 也使用了这个字体或者 App 删除后重装时是无需再额外下载这个字体的。</p>\n<p><a href=\"https://developer.apple.com/library/content/samplecode/DownloadFont/Listings/DownloadFont_ViewController_m.html\" target=\"_blank\" rel=\"noopener\">OC 官方Demo</a> / <a href=\"https://github.com/linhay/Apple-Demos/tree/master/DownloadFont\" target=\"_blank\" rel=\"noopener\">swift Demo</a></p>\n<ol>\n<li><p>判断字体是否存在</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">if</span> <span class=\"keyword\">let</span> aFont = <span class=\"type\">UIFont</span>(name: fontName, size: <span class=\"number\">12</span>),</span><br><span class=\"line\">     aFont.fontName == fontName || aFont.familyName == fontName&#123;</span><br><span class=\"line\"><span class=\"comment\">// 存在</span></span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>下载(具体代码请参照<a href=\"https://github.com/linhay/Apple-Demos/tree/master/DownloadFont\" target=\"_blank\" rel=\"noopener\">swift Demo</a>)</p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> attrs = [kCTFontNameAttribute:fontName]</span><br><span class=\"line\"><span class=\"keyword\">let</span> desc = <span class=\"type\">CTFontDescriptorCreateWithAttributes</span>(attrs <span class=\"keyword\">as</span> <span class=\"type\">CFDictionary</span>)</span><br><span class=\"line\"><span class=\"keyword\">let</span> descs = [desc]</span><br><span class=\"line\"><span class=\"type\">CTFontDescriptorMatchFontDescriptorsWithProgressHandler</span>(descs <span class=\"keyword\">as</span> <span class=\"type\">CFArray</span>, <span class=\"literal\">nil</span>) &#123; (state, progressParameter) -&gt; <span class=\"type\">Bool</span> <span class=\"keyword\">in</span></span><br><span class=\"line\"><span class=\"comment\">// 下载</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h5 id=\"注意点\"><a href=\"#注意点\" class=\"headerlink\" title=\"注意点\"></a>注意点</h5><ol>\n<li><p>iOS 9 以下 系统 默认没有<code>PingFang</code>系列字体.</p>\n</li>\n<li><p>使用<code>UIFont</code>时<code>name</code>使用字体<code>postScriptName</code>.<del>(有些字体文件与真实名称不符)</del>,可以使用字体册查看具体名称.</p>\n<p><img src=\"https://s.linhey.com/iOS-PingFangSC%E5%AD%97%E4%BD%93%E4%BD%BF%E7%94%A8-2.png\" alt=\"\"></p>\n</li>\n</ol>\n<h4 id=\"附录\"><a href=\"#附录\" class=\"headerlink\" title=\"附录:\"></a>附录:</h4><ol>\n<li>iOS 11系统提供字体</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Copperplate</span><br><span class=\"line\"> - Copperplate-Light</span><br><span class=\"line\"> - Copperplate</span><br><span class=\"line\"> - Copperplate-Bold</span><br><span class=\"line\">Heiti SC</span><br><span class=\"line\">Apple SD Gothic Neo</span><br><span class=\"line\"> - AppleSDGothicNeo-Thin</span><br><span class=\"line\"> - AppleSDGothicNeo-Light</span><br><span class=\"line\"> - AppleSDGothicNeo-Regular</span><br><span class=\"line\"> - AppleSDGothicNeo-Bold</span><br><span class=\"line\"> - AppleSDGothicNeo-SemiBold</span><br><span class=\"line\"> - AppleSDGothicNeo-UltraLight</span><br><span class=\"line\"> - AppleSDGothicNeo-Medium</span><br><span class=\"line\">Thonburi</span><br><span class=\"line\"> - Thonburi</span><br><span class=\"line\"> - Thonburi-Light</span><br><span class=\"line\"> - Thonburi-Bold</span><br><span class=\"line\">Gill Sans</span><br><span class=\"line\"> - GillSans-Italic</span><br><span class=\"line\"> - GillSans-SemiBold</span><br><span class=\"line\"> - GillSans-UltraBold</span><br><span class=\"line\"> - GillSans-Light</span><br><span class=\"line\"> - GillSans-Bold</span><br><span class=\"line\"> - GillSans</span><br><span class=\"line\"> - GillSans-SemiBoldItalic</span><br><span class=\"line\"> - GillSans-BoldItalic</span><br><span class=\"line\"> - GillSans-LightItalic</span><br><span class=\"line\">Marker Felt</span><br><span class=\"line\"> - MarkerFelt-Thin</span><br><span class=\"line\"> - MarkerFelt-Wide</span><br><span class=\"line\">Hiragino Maru Gothic ProN</span><br><span class=\"line\"> - HiraMaruProN-W4</span><br><span class=\"line\">Courier New</span><br><span class=\"line\"> - CourierNewPS-ItalicMT</span><br><span class=\"line\"> - CourierNewPSMT</span><br><span class=\"line\"> - CourierNewPS-BoldItalicMT</span><br><span class=\"line\"> - CourierNewPS-BoldMT</span><br><span class=\"line\">Kohinoor Telugu</span><br><span class=\"line\"> - KohinoorTelugu-Regular</span><br><span class=\"line\"> - KohinoorTelugu-Medium</span><br><span class=\"line\"> - KohinoorTelugu-Light</span><br><span class=\"line\">Heiti TC</span><br><span class=\"line\">Avenir Next Condensed</span><br><span class=\"line\"> - AvenirNextCondensed-Heavy</span><br><span class=\"line\"> - AvenirNextCondensed-MediumItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Regular</span><br><span class=\"line\"> - AvenirNextCondensed-UltraLightItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Medium</span><br><span class=\"line\"> - AvenirNextCondensed-HeavyItalic</span><br><span class=\"line\"> - AvenirNextCondensed-DemiBoldItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Bold</span><br><span class=\"line\"> - AvenirNextCondensed-DemiBold</span><br><span class=\"line\"> - AvenirNextCondensed-BoldItalic</span><br><span class=\"line\"> - AvenirNextCondensed-Italic</span><br><span class=\"line\"> - AvenirNextCondensed-UltraLight</span><br><span class=\"line\">Tamil Sangam MN</span><br><span class=\"line\"> - TamilSangamMN</span><br><span class=\"line\"> - TamilSangamMN-Bold</span><br><span class=\"line\">Helvetica Neue</span><br><span class=\"line\"> - HelveticaNeue-UltraLightItalic</span><br><span class=\"line\"> - HelveticaNeue-Medium</span><br><span class=\"line\"> - HelveticaNeue-MediumItalic</span><br><span class=\"line\"> - HelveticaNeue-UltraLight</span><br><span class=\"line\"> - HelveticaNeue-Italic</span><br><span class=\"line\"> - HelveticaNeue-Light</span><br><span class=\"line\"> - HelveticaNeue-ThinItalic</span><br><span class=\"line\"> - HelveticaNeue-LightItalic</span><br><span class=\"line\"> - HelveticaNeue-Bold</span><br><span class=\"line\"> - HelveticaNeue-Thin</span><br><span class=\"line\"> - HelveticaNeue-CondensedBlack</span><br><span class=\"line\"> - HelveticaNeue</span><br><span class=\"line\"> - HelveticaNeue-CondensedBold</span><br><span class=\"line\"> - HelveticaNeue-BoldItalic</span><br><span class=\"line\">Gurmukhi MN</span><br><span class=\"line\"> - GurmukhiMN-Bold</span><br><span class=\"line\"> - GurmukhiMN</span><br><span class=\"line\">Georgia</span><br><span class=\"line\"> - Georgia-BoldItalic</span><br><span class=\"line\"> - Georgia-Italic</span><br><span class=\"line\"> - Georgia</span><br><span class=\"line\"> - Georgia-Bold</span><br><span class=\"line\">Times New Roman</span><br><span class=\"line\"> - TimesNewRomanPS-ItalicMT</span><br><span class=\"line\"> - TimesNewRomanPS-BoldItalicMT</span><br><span class=\"line\"> - TimesNewRomanPS-BoldMT</span><br><span class=\"line\"> - TimesNewRomanPSMT</span><br><span class=\"line\">Sinhala Sangam MN</span><br><span class=\"line\"> - SinhalaSangamMN-Bold</span><br><span class=\"line\"> - SinhalaSangamMN</span><br><span class=\"line\">Arial Rounded MT Bold</span><br><span class=\"line\"> - ArialRoundedMTBold</span><br><span class=\"line\">Kailasa</span><br><span class=\"line\"> - Kailasa-Bold</span><br><span class=\"line\"> - Kailasa</span><br><span class=\"line\">Kohinoor Devanagari</span><br><span class=\"line\"> - KohinoorDevanagari-Regular</span><br><span class=\"line\"> - KohinoorDevanagari-Light</span><br><span class=\"line\"> - KohinoorDevanagari-Semibold</span><br><span class=\"line\">Kohinoor Bangla</span><br><span class=\"line\"> - KohinoorBangla-Regular</span><br><span class=\"line\"> - KohinoorBangla-Semibold</span><br><span class=\"line\"> - KohinoorBangla-Light</span><br><span class=\"line\">Chalkboard SE</span><br><span class=\"line\"> - ChalkboardSE-Bold</span><br><span class=\"line\"> - ChalkboardSE-Light</span><br><span class=\"line\"> - ChalkboardSE-Regular</span><br><span class=\"line\">Apple Color Emoji</span><br><span class=\"line\"> - AppleColorEmoji</span><br><span class=\"line\">PingFang TC</span><br><span class=\"line\"> - PingFangTC-Regular</span><br><span class=\"line\"> - PingFangTC-Thin</span><br><span class=\"line\"> - PingFangTC-Medium</span><br><span class=\"line\"> - PingFangTC-Semibold</span><br><span class=\"line\"> - PingFangTC-Light</span><br><span class=\"line\"> - PingFangTC-Ultralight</span><br><span class=\"line\">Gujarati Sangam MN</span><br><span class=\"line\"> - GujaratiSangamMN</span><br><span class=\"line\"> - GujaratiSangamMN-Bold</span><br><span class=\"line\">Geeza Pro</span><br><span class=\"line\"> - GeezaPro-Bold</span><br><span class=\"line\"> - GeezaPro</span><br><span class=\"line\">Damascus</span><br><span class=\"line\"> - DamascusBold</span><br><span class=\"line\"> - DamascusLight</span><br><span class=\"line\"> - Damascus</span><br><span class=\"line\"> - DamascusMedium</span><br><span class=\"line\"> - DamascusSemiBold</span><br><span class=\"line\">Noteworthy</span><br><span class=\"line\"> - Noteworthy-Bold</span><br><span class=\"line\"> - Noteworthy-Light</span><br><span class=\"line\">Avenir</span><br><span class=\"line\"> - Avenir-Oblique</span><br><span class=\"line\"> - Avenir-HeavyOblique</span><br><span class=\"line\"> - Avenir-Heavy</span><br><span class=\"line\"> - Avenir-BlackOblique</span><br><span class=\"line\"> - Avenir-BookOblique</span><br><span class=\"line\"> - Avenir-Roman</span><br><span class=\"line\"> - Avenir-Medium</span><br><span class=\"line\"> - Avenir-Black</span><br><span class=\"line\"> - Avenir-Light</span><br><span class=\"line\"> - Avenir-MediumOblique</span><br><span class=\"line\"> - Avenir-Book</span><br><span class=\"line\"> - Avenir-LightOblique</span><br><span class=\"line\">Mishafi</span><br><span class=\"line\"> - DiwanMishafi</span><br><span class=\"line\">Academy Engraved LET</span><br><span class=\"line\"> - AcademyEngravedLetPlain</span><br><span class=\"line\">Futura</span><br><span class=\"line\"> - Futura-CondensedExtraBold</span><br><span class=\"line\"> - Futura-Medium</span><br><span class=\"line\"> - Futura-Bold</span><br><span class=\"line\"> - Futura-CondensedMedium</span><br><span class=\"line\"> - Futura-MediumItalic</span><br><span class=\"line\">Party LET</span><br><span class=\"line\"> - PartyLetPlain</span><br><span class=\"line\">Kannada Sangam MN</span><br><span class=\"line\"> - KannadaSangamMN-Bold</span><br><span class=\"line\"> - KannadaSangamMN</span><br><span class=\"line\">Arial Hebrew</span><br><span class=\"line\"> - ArialHebrew-Bold</span><br><span class=\"line\"> - ArialHebrew-Light</span><br><span class=\"line\"> - ArialHebrew</span><br><span class=\"line\">Farah</span><br><span class=\"line\"> - Farah</span><br><span class=\"line\">Arial</span><br><span class=\"line\"> - Arial-BoldMT</span><br><span class=\"line\"> - Arial-BoldItalicMT</span><br><span class=\"line\"> - Arial-ItalicMT</span><br><span class=\"line\"> - ArialMT</span><br><span class=\"line\">Chalkduster</span><br><span class=\"line\"> - Chalkduster</span><br><span class=\"line\">Kefa</span><br><span class=\"line\"> - Kefa-Regular</span><br><span class=\"line\">Hoefler Text</span><br><span class=\"line\"> - HoeflerText-Italic</span><br><span class=\"line\"> - HoeflerText-Black</span><br><span class=\"line\"> - HoeflerText-Regular</span><br><span class=\"line\"> - HoeflerText-BlackItalic</span><br><span class=\"line\">Optima</span><br><span class=\"line\"> - Optima-ExtraBlack</span><br><span class=\"line\"> - Optima-BoldItalic</span><br><span class=\"line\"> - Optima-Italic</span><br><span class=\"line\"> - Optima-Regular</span><br><span class=\"line\"> - Optima-Bold</span><br><span class=\"line\">Palatino</span><br><span class=\"line\"> - Palatino-Italic</span><br><span class=\"line\"> - Palatino-Roman</span><br><span class=\"line\"> - Palatino-BoldItalic</span><br><span class=\"line\"> - Palatino-Bold</span><br><span class=\"line\">Malayalam Sangam MN</span><br><span class=\"line\"> - MalayalamSangamMN-Bold</span><br><span class=\"line\"> - MalayalamSangamMN</span><br><span class=\"line\">Al Nile</span><br><span class=\"line\"> - AlNile</span><br><span class=\"line\"> - AlNile-Bold</span><br><span class=\"line\">Lao Sangam MN</span><br><span class=\"line\"> - LaoSangamMN</span><br><span class=\"line\">Bradley Hand</span><br><span class=\"line\"> - BradleyHandITCTT-Bold</span><br><span class=\"line\">Hiragino Mincho ProN</span><br><span class=\"line\"> - HiraMinProN-W3</span><br><span class=\"line\"> - HiraMinProN-W6</span><br><span class=\"line\">PingFang HK</span><br><span class=\"line\"> - PingFangHK-Medium</span><br><span class=\"line\"> - PingFangHK-Thin</span><br><span class=\"line\"> - PingFangHK-Regular</span><br><span class=\"line\"> - PingFangHK-Ultralight</span><br><span class=\"line\"> - PingFangHK-Semibold</span><br><span class=\"line\"> - PingFangHK-Light</span><br><span class=\"line\">Helvetica</span><br><span class=\"line\"> - Helvetica-Oblique</span><br><span class=\"line\"> - Helvetica-BoldOblique</span><br><span class=\"line\"> - Helvetica</span><br><span class=\"line\"> - Helvetica-Light</span><br><span class=\"line\"> - Helvetica-Bold</span><br><span class=\"line\"> - Helvetica-LightOblique</span><br><span class=\"line\">Courier</span><br><span class=\"line\"> - Courier-BoldOblique</span><br><span class=\"line\"> - Courier-Oblique</span><br><span class=\"line\"> - Courier</span><br><span class=\"line\"> - Courier-Bold</span><br><span class=\"line\">Cochin</span><br><span class=\"line\"> - Cochin-Italic</span><br><span class=\"line\"> - Cochin-Bold</span><br><span class=\"line\"> - Cochin</span><br><span class=\"line\"> - Cochin-BoldItalic</span><br><span class=\"line\">Trebuchet MS</span><br><span class=\"line\"> - TrebuchetMS-Bold</span><br><span class=\"line\"> - TrebuchetMS-Italic</span><br><span class=\"line\"> - Trebuchet-BoldItalic</span><br><span class=\"line\"> - TrebuchetMS</span><br><span class=\"line\">Devanagari Sangam MN</span><br><span class=\"line\"> - DevanagariSangamMN</span><br><span class=\"line\"> - DevanagariSangamMN-Bold</span><br><span class=\"line\">Oriya Sangam MN</span><br><span class=\"line\"> - OriyaSangamMN</span><br><span class=\"line\"> - OriyaSangamMN-Bold</span><br><span class=\"line\">Rockwell</span><br><span class=\"line\"> - Rockwell-Italic</span><br><span class=\"line\"> - Rockwell-Regular</span><br><span class=\"line\"> - Rockwell-Bold</span><br><span class=\"line\"> - Rockwell-BoldItalic</span><br><span class=\"line\">Snell Roundhand</span><br><span class=\"line\"> - SnellRoundhand</span><br><span class=\"line\"> - SnellRoundhand-Bold</span><br><span class=\"line\"> - SnellRoundhand-Black</span><br><span class=\"line\">Zapf Dingbats</span><br><span class=\"line\"> - ZapfDingbatsITC</span><br><span class=\"line\">Bodoni 72</span><br><span class=\"line\"> - BodoniSvtyTwoITCTT-Bold</span><br><span class=\"line\"> - BodoniSvtyTwoITCTT-BookIta</span><br><span class=\"line\"> - BodoniSvtyTwoITCTT-Book</span><br><span class=\"line\">Verdana</span><br><span class=\"line\"> - Verdana-Italic</span><br><span class=\"line\"> - Verdana</span><br><span class=\"line\"> - Verdana-Bold</span><br><span class=\"line\"> - Verdana-BoldItalic</span><br><span class=\"line\">American Typewriter</span><br><span class=\"line\"> - AmericanTypewriter-CondensedBold</span><br><span class=\"line\"> - AmericanTypewriter-Condensed</span><br><span class=\"line\"> - AmericanTypewriter-CondensedLight</span><br><span class=\"line\"> - AmericanTypewriter</span><br><span class=\"line\"> - AmericanTypewriter-Bold</span><br><span class=\"line\"> - AmericanTypewriter-Semibold</span><br><span class=\"line\"> - AmericanTypewriter-Light</span><br><span class=\"line\">Avenir Next</span><br><span class=\"line\"> - AvenirNext-Medium</span><br><span class=\"line\"> - AvenirNext-DemiBoldItalic</span><br><span class=\"line\"> - AvenirNext-DemiBold</span><br><span class=\"line\"> - AvenirNext-HeavyItalic</span><br><span class=\"line\"> - AvenirNext-Regular</span><br><span class=\"line\"> - AvenirNext-Italic</span><br><span class=\"line\"> - AvenirNext-MediumItalic</span><br><span class=\"line\"> - AvenirNext-UltraLightItalic</span><br><span class=\"line\"> - AvenirNext-BoldItalic</span><br><span class=\"line\"> - AvenirNext-Heavy</span><br><span class=\"line\"> - AvenirNext-Bold</span><br><span class=\"line\"> - AvenirNext-UltraLight</span><br><span class=\"line\">Baskerville</span><br><span class=\"line\"> - Baskerville-SemiBoldItalic</span><br><span class=\"line\"> - Baskerville-SemiBold</span><br><span class=\"line\"> - Baskerville-BoldItalic</span><br><span class=\"line\"> - Baskerville</span><br><span class=\"line\"> - Baskerville-Bold</span><br><span class=\"line\"> - Baskerville-Italic</span><br><span class=\"line\">Khmer Sangam MN</span><br><span class=\"line\"> - KhmerSangamMN</span><br><span class=\"line\">Didot</span><br><span class=\"line\"> - Didot-Bold</span><br><span class=\"line\"> - Didot</span><br><span class=\"line\"> - Didot-Italic</span><br><span class=\"line\">Savoye LET</span><br><span class=\"line\"> - SavoyeLetPlain</span><br><span class=\"line\">Bodoni Ornaments</span><br><span class=\"line\"> - BodoniOrnamentsITCTT</span><br><span class=\"line\">Symbol</span><br><span class=\"line\"> - Symbol</span><br><span class=\"line\">Charter</span><br><span class=\"line\"> - Charter-BlackItalic</span><br><span class=\"line\"> - Charter-Bold</span><br><span class=\"line\"> - Charter-Roman</span><br><span class=\"line\"> - Charter-Black</span><br><span class=\"line\"> - Charter-BoldItalic</span><br><span class=\"line\"> - Charter-Italic</span><br><span class=\"line\">Menlo</span><br><span class=\"line\"> - Menlo-BoldItalic</span><br><span class=\"line\"> - Menlo-Bold</span><br><span class=\"line\"> - Menlo-Italic</span><br><span class=\"line\"> - Menlo-Regular</span><br><span class=\"line\">Noto Nastaliq Urdu</span><br><span class=\"line\"> - NotoNastaliqUrdu</span><br><span class=\"line\">Bodoni 72 Smallcaps</span><br><span class=\"line\"> - BodoniSvtyTwoSCITCTT-Book</span><br><span class=\"line\">DIN Alternate</span><br><span class=\"line\"> - DINAlternate-Bold</span><br><span class=\"line\">Papyrus</span><br><span class=\"line\"> - Papyrus-Condensed</span><br><span class=\"line\"> - Papyrus</span><br><span class=\"line\">Hiragino Sans</span><br><span class=\"line\"> - HiraginoSans-W3</span><br><span class=\"line\"> - HiraginoSans-W6</span><br><span class=\"line\">PingFang SC</span><br><span class=\"line\"> - PingFangSC-Medium</span><br><span class=\"line\"> - PingFangSC-Semibold</span><br><span class=\"line\"> - PingFangSC-Light</span><br><span class=\"line\"> - PingFangSC-Ultralight</span><br><span class=\"line\"> - PingFangSC-Regular</span><br><span class=\"line\"> - PingFangSC-Thin</span><br><span class=\"line\">Myanmar Sangam MN</span><br><span class=\"line\"> - MyanmarSangamMN</span><br><span class=\"line\"> - MyanmarSangamMN-Bold</span><br><span class=\"line\">Zapfino</span><br><span class=\"line\"> - Zapfino</span><br><span class=\"line\">Telugu Sangam MN</span><br><span class=\"line\">Bodoni 72 Oldstyle</span><br><span class=\"line\"> - BodoniSvtyTwoOSITCTT-BookIt</span><br><span class=\"line\"> - BodoniSvtyTwoOSITCTT-Book</span><br><span class=\"line\"> - BodoniSvtyTwoOSITCTT-Bold</span><br><span class=\"line\">Euphemia UCAS</span><br><span class=\"line\"> - EuphemiaUCAS</span><br><span class=\"line\"> - EuphemiaUCAS-Italic</span><br><span class=\"line\"> - EuphemiaUCAS-Bold</span><br><span class=\"line\">Bangla Sangam MN</span><br><span class=\"line\">DIN Condensed</span><br><span class=\"line\"> - DINCondensed-Bold</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjoy53ae1000164z6mbm4bvv0","category_id":"cjoy53aef000664z6tlyos26r","_id":"cjoy53aei000964z6m7xgfwwi"},{"post_id":"cjoy5s1ho0000rfz6zw837exn","category_id":"cjoy5s1i60004rfz6s9wos1e5","_id":"cjoy5s1iy000irfz6dgzuahq9"},{"post_id":"cjoy5s1hz0002rfz6w0y6jwma","category_id":"cjoy5s1i60004rfz6s9wos1e5","_id":"cjoy5s1j7000orfz60fqrnnln"},{"post_id":"cjoy5s1ie0006rfz69gxfs4vd","category_id":"cjoy5s1iy000hrfz681py6du4","_id":"cjoy5s1jf000wrfz6lwrocfzj"},{"post_id":"cjoy5s1ii0008rfz6scdk253o","category_id":"cjoy5s1j9000qrfz613is6v2g","_id":"cjoy5s1jm0014rfz6bvvfsff7"},{"post_id":"cjoy5s1in000arfz6dlrymtld","category_id":"cjoy5s1j9000qrfz613is6v2g","_id":"cjoy5s1jq001brfz622k8pqcf"},{"post_id":"cjoy5s1it000erfz6c1ep6i4c","category_id":"cjoy5s1j9000qrfz613is6v2g","_id":"cjoy5s1ju001hrfz6uqkxssae"},{"post_id":"cjoy5s1iw000grfz627wr1qcz","category_id":"cjoy5s1j9000qrfz613is6v2g","_id":"cjoy5s1jx001lrfz6fjsf0dtv"},{"post_id":"cjoy5s1j0000lrfz63cznea9s","category_id":"cjoy5s1jt001grfz6d26p38wi","_id":"cjoy5s1kd001rrfz6y9t4uwey"},{"post_id":"cjoy5s1j6000nrfz6nkhfkjtf","category_id":"cjoy5s1jx001mrfz67z3tvf3o","_id":"cjoy5s1kg001zrfz6623ue90r"},{"post_id":"cjoy5s1j9000srfz6skr9lsuk","category_id":"cjoy5s1jx001mrfz67z3tvf3o","_id":"cjoy5s1kj0025rfz6ew25etbx"},{"post_id":"cjoy5s1jd000urfz6s9thhid5","category_id":"cjoy5s1jx001mrfz67z3tvf3o","_id":"cjoy5s1kl002arfz6l5xo2cny"},{"post_id":"cjoy5s1jg000zrfz6p5md9ibs","category_id":"cjoy5s1ki0024rfz632jj86ks","_id":"cjoy5s1ko002hrfz6hogwudyh"},{"post_id":"cjoy5s1n10046rfz6kfy6pv9t","category_id":"cjoy5s1j9000qrfz613is6v2g","_id":"cjoy5s1n4004arfz6vzgwzkg4"},{"post_id":"cjoy5s1n20047rfz6jw1ls043","category_id":"cjoy5s1j9000qrfz613is6v2g","_id":"cjoy5s1n4004crfz6dl5e87kk"}],"PostTag":[{"post_id":"cjoy53ae1000164z6mbm4bvv0","tag_id":"cjoy53aec000464z65ox11ckw","_id":"cjoy53aei000a64z6exg67typ"},{"post_id":"cjoy53ae1000164z6mbm4bvv0","tag_id":"cjoy53aeg000764z6f77u2kkn","_id":"cjoy53aej000b64z6hzg7u5cg"},{"post_id":"cjoy5s1ho0000rfz6zw837exn","tag_id":"cjoy5s1id0005rfz6v6e4lrsj","_id":"cjoy5s1jj0011rfz6lmcagdip"},{"post_id":"cjoy5s1ho0000rfz6zw837exn","tag_id":"cjoy5s1io000crfz6i2nguv0z","_id":"cjoy5s1jm0015rfz6z6imwg5s"},{"post_id":"cjoy5s1ho0000rfz6zw837exn","tag_id":"cjoy5s1j0000krfz6h0mk37cu","_id":"cjoy5s1jn0018rfz6yc7c6lnb"},{"post_id":"cjoy5s1ho0000rfz6zw837exn","tag_id":"cjoy5s1j9000rrfz6r61ej7ke","_id":"cjoy5s1jq001crfz6l106vjgo"},{"post_id":"cjoy5s1hz0002rfz6w0y6jwma","tag_id":"cjoy5s1id0005rfz6v6e4lrsj","_id":"cjoy5s1kc001prfz63s3jwusx"},{"post_id":"cjoy5s1hz0002rfz6w0y6jwma","tag_id":"cjoy5s1jm0016rfz6ukgovwsx","_id":"cjoy5s1kd001trfz6ef606ldb"},{"post_id":"cjoy5s1hz0002rfz6w0y6jwma","tag_id":"cjoy5s1j0000krfz6h0mk37cu","_id":"cjoy5s1kf001wrfz6jefcp2hx"},{"post_id":"cjoy5s1hz0002rfz6w0y6jwma","tag_id":"cjoy5s1ju001irfz6dmp3dku0","_id":"cjoy5s1kg0020rfz6bosrhl6f"},{"post_id":"cjoy5s1ie0006rfz69gxfs4vd","tag_id":"cjoy5s1kb001orfz66gembex8","_id":"cjoy5s1kl0029rfz6amudi0e3"},{"post_id":"cjoy5s1ie0006rfz69gxfs4vd","tag_id":"cjoy5s1ke001vrfz64tp24m5y","_id":"cjoy5s1km002crfz65nl0vjbj"},{"post_id":"cjoy5s1ie0006rfz69gxfs4vd","tag_id":"cjoy5s1kh0022rfz6w9t3z16q","_id":"cjoy5s1kn002frfz6zxc103b5"},{"post_id":"cjoy5s1ii0008rfz6scdk253o","tag_id":"cjoy5s1kj0027rfz6cqb3en7u","_id":"cjoy5s1kx002orfz6s03pgd12"},{"post_id":"cjoy5s1ii0008rfz6scdk253o","tag_id":"cjoy5s1kn002erfz6mz7iouty","_id":"cjoy5s1kz002qrfz6liesv2wq"},{"post_id":"cjoy5s1ii0008rfz6scdk253o","tag_id":"cjoy5s1ju001irfz6dmp3dku0","_id":"cjoy5s1l4002trfz6l3297kbo"},{"post_id":"cjoy5s1in000arfz6dlrymtld","tag_id":"cjoy5s1kj0027rfz6cqb3en7u","_id":"cjoy5s1l8002xrfz63x1vgg6b"},{"post_id":"cjoy5s1in000arfz6dlrymtld","tag_id":"cjoy5s1l0002rrfz6u09e1yrb","_id":"cjoy5s1l9002zrfz6juqc1pfl"},{"post_id":"cjoy5s1it000erfz6c1ep6i4c","tag_id":"cjoy5s1kj0027rfz6cqb3en7u","_id":"cjoy5s1lb0033rfz66vx0tn6z"},{"post_id":"cjoy5s1it000erfz6c1ep6i4c","tag_id":"cjoy5s1la0030rfz6dwsd5wmd","_id":"cjoy5s1lb0034rfz6a68r0bu4"},{"post_id":"cjoy5s1iw000grfz627wr1qcz","tag_id":"cjoy5s1kj0027rfz6cqb3en7u","_id":"cjoy5s1ld0037rfz6t4ggs7fw"},{"post_id":"cjoy5s1iw000grfz627wr1qcz","tag_id":"cjoy5s1l0002rrfz6u09e1yrb","_id":"cjoy5s1ld0038rfz6p5djewq9"},{"post_id":"cjoy5s1j0000lrfz63cznea9s","tag_id":"cjoy5s1lc0036rfz6y71bzqxd","_id":"cjoy5s1lf003drfz6px96mts6"},{"post_id":"cjoy5s1j0000lrfz63cznea9s","tag_id":"cjoy5s1ld0039rfz6u6xepbdx","_id":"cjoy5s1lf003erfz6myldoxae"},{"post_id":"cjoy5s1j0000lrfz63cznea9s","tag_id":"cjoy5s1le003arfz6jriamypr","_id":"cjoy5s1lf003grfz6c5a0cebi"},{"post_id":"cjoy5s1j0000lrfz63cznea9s","tag_id":"cjoy5s1le003brfz6hdf2m0mb","_id":"cjoy5s1lg003hrfz6tzz34w7j"},{"post_id":"cjoy5s1j6000nrfz6nkhfkjtf","tag_id":"cjoy5s1ke001vrfz64tp24m5y","_id":"cjoy5s1lh003krfz6hr2p66if"},{"post_id":"cjoy5s1j6000nrfz6nkhfkjtf","tag_id":"cjoy5s1lf003frfz69j9ozf1p","_id":"cjoy5s1lh003lrfz6uo0k4ok5"},{"post_id":"cjoy5s1j6000nrfz6nkhfkjtf","tag_id":"cjoy5s1lg003irfz6plojsthb","_id":"cjoy5s1li003nrfz6s6ukmvdb"},{"post_id":"cjoy5s1j9000srfz6skr9lsuk","tag_id":"cjoy5s1lg003jrfz6w658jerr","_id":"cjoy5s1lk003qrfz6oxi5kuil"},{"post_id":"cjoy5s1j9000srfz6skr9lsuk","tag_id":"cjoy5s1lf003frfz69j9ozf1p","_id":"cjoy5s1ll003rrfz66vdseqyj"},{"post_id":"cjoy5s1j9000srfz6skr9lsuk","tag_id":"cjoy5s1lg003irfz6plojsthb","_id":"cjoy5s1lm003trfz61p4izw0l"},{"post_id":"cjoy5s1jd000urfz6s9thhid5","tag_id":"cjoy5s1lg003jrfz6w658jerr","_id":"cjoy5s1lr003wrfz6ytc2x2sg"},{"post_id":"cjoy5s1jd000urfz6s9thhid5","tag_id":"cjoy5s1lf003frfz69j9ozf1p","_id":"cjoy5s1lr003xrfz6qkfrqbj4"},{"post_id":"cjoy5s1jd000urfz6s9thhid5","tag_id":"cjoy5s1lg003irfz6plojsthb","_id":"cjoy5s1ls003zrfz6m503venz"},{"post_id":"cjoy5s1jg000zrfz6p5md9ibs","tag_id":"cjoy5s1ke001vrfz64tp24m5y","_id":"cjoy5s1lw0042rfz6w9x33o4a"},{"post_id":"cjoy5s1jg000zrfz6p5md9ibs","tag_id":"cjoy5s1ls003yrfz6bzkr9n0a","_id":"cjoy5s1lw0043rfz6j6cjd1vt"},{"post_id":"cjoy5s1jg000zrfz6p5md9ibs","tag_id":"cjoy5s1lt0040rfz6omp655j7","_id":"cjoy5s1lx0044rfz6vkaiuz1b"},{"post_id":"cjoy5s1jg000zrfz6p5md9ibs","tag_id":"cjoy5s1lu0041rfz6xfjeqr3p","_id":"cjoy5s1lx0045rfz6929tj4kl"},{"post_id":"cjoy5s1n10046rfz6kfy6pv9t","tag_id":"cjoy5s1kj0027rfz6cqb3en7u","_id":"cjoy5s1n40048rfz69ytcnpgp"},{"post_id":"cjoy5s1n10046rfz6kfy6pv9t","tag_id":"cjoy5s1l0002rrfz6u09e1yrb","_id":"cjoy5s1n40049rfz6hy124733"},{"post_id":"cjoy5s1n10046rfz6kfy6pv9t","tag_id":"cjoy5s1id0005rfz6v6e4lrsj","_id":"cjoy5s1n4004brfz6wrz1xxet"},{"post_id":"cjoy5s1n20047rfz6jw1ls043","tag_id":"cjoy5s1kj0027rfz6cqb3en7u","_id":"cjoy5s1n4004drfz6qtm8myeu"},{"post_id":"cjoy5s1n20047rfz6jw1ls043","tag_id":"cjoy5s1l0002rrfz6u09e1yrb","_id":"cjoy5s1n4004erfz6mjx0ih5l"}],"Tag":[{"name":"tesseract","_id":"cjoy53aec000464z65ox11ckw"},{"name":"orc","_id":"cjoy53aeg000764z6f77u2kkn"},{"name":"iOS","_id":"cjoy53aeh000864z61404scvr"},{"name":"cocoapods","_id":"cjoy5s1id0005rfz6v6e4lrsj"},{"name":"travis","_id":"cjoy5s1io000crfz6i2nguv0z"},{"name":"github","_id":"cjoy5s1j0000krfz6h0mk37cu"},{"name":"ci","_id":"cjoy5s1j9000rrfz6r61ej7ke"},{"name":"jazzy","_id":"cjoy5s1jm0016rfz6ukgovwsx"},{"name":"api","_id":"cjoy5s1ju001irfz6dmp3dku0"},{"name":"hexo","_id":"cjoy5s1kb001orfz66gembex8"},{"name":"docker","_id":"cjoy5s1ke001vrfz64tp24m5y"},{"name":"webhook","_id":"cjoy5s1kh0022rfz6w9t3z16q"},{"name":"ios","_id":"cjoy5s1kj0027rfz6cqb3en7u"},{"name":"Runtime","_id":"cjoy5s1kn002erfz6mz7iouty"},{"name":"swift","_id":"cjoy5s1l0002rrfz6u09e1yrb"},{"name":"Notification","_id":"cjoy5s1la0030rfz6dwsd5wmd"},{"name":"javascript","_id":"cjoy5s1lc0036rfz6y71bzqxd"},{"name":"function","_id":"cjoy5s1ld0039rfz6u6xepbdx"},{"name":"callback","_id":"cjoy5s1le003arfz6jriamypr"},{"name":"promise","_id":"cjoy5s1le003brfz6hdf2m0mb"},{"name":"server","_id":"cjoy5s1lf003frfz69j9ozf1p"},{"name":"ubuntu","_id":"cjoy5s1lg003irfz6plojsthb"},{"name":"nginx","_id":"cjoy5s1lg003jrfz6w658jerr"},{"name":"node","_id":"cjoy5s1ls003yrfz6bzkr9n0a"},{"name":"npm","_id":"cjoy5s1lt0040rfz6omp655j7"},{"name":"verdaccio","_id":"cjoy5s1lu0041rfz6xfjeqr3p"}]}}